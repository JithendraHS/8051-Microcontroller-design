                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module i2c_bit_bang
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _P5_7
                                     12 	.globl _P5_6
                                     13 	.globl _P5_5
                                     14 	.globl _P5_4
                                     15 	.globl _P5_3
                                     16 	.globl _P5_2
                                     17 	.globl _P5_1
                                     18 	.globl _P5_0
                                     19 	.globl _P4_7
                                     20 	.globl _P4_6
                                     21 	.globl _P4_5
                                     22 	.globl _P4_4
                                     23 	.globl _P4_3
                                     24 	.globl _P4_2
                                     25 	.globl _P4_1
                                     26 	.globl _P4_0
                                     27 	.globl _PX0L
                                     28 	.globl _PT0L
                                     29 	.globl _PX1L
                                     30 	.globl _PT1L
                                     31 	.globl _PSL
                                     32 	.globl _PT2L
                                     33 	.globl _PPCL
                                     34 	.globl _EC
                                     35 	.globl _CCF0
                                     36 	.globl _CCF1
                                     37 	.globl _CCF2
                                     38 	.globl _CCF3
                                     39 	.globl _CCF4
                                     40 	.globl _CR
                                     41 	.globl _CF
                                     42 	.globl _TF2
                                     43 	.globl _EXF2
                                     44 	.globl _RCLK
                                     45 	.globl _TCLK
                                     46 	.globl _EXEN2
                                     47 	.globl _TR2
                                     48 	.globl _C_T2
                                     49 	.globl _CP_RL2
                                     50 	.globl _T2CON_7
                                     51 	.globl _T2CON_6
                                     52 	.globl _T2CON_5
                                     53 	.globl _T2CON_4
                                     54 	.globl _T2CON_3
                                     55 	.globl _T2CON_2
                                     56 	.globl _T2CON_1
                                     57 	.globl _T2CON_0
                                     58 	.globl _PT2
                                     59 	.globl _ET2
                                     60 	.globl _CY
                                     61 	.globl _AC
                                     62 	.globl _F0
                                     63 	.globl _RS1
                                     64 	.globl _RS0
                                     65 	.globl _OV
                                     66 	.globl _F1
                                     67 	.globl _P
                                     68 	.globl _PS
                                     69 	.globl _PT1
                                     70 	.globl _PX1
                                     71 	.globl _PT0
                                     72 	.globl _PX0
                                     73 	.globl _RD
                                     74 	.globl _WR
                                     75 	.globl _T1
                                     76 	.globl _T0
                                     77 	.globl _INT1
                                     78 	.globl _INT0
                                     79 	.globl _TXD
                                     80 	.globl _RXD
                                     81 	.globl _P3_7
                                     82 	.globl _P3_6
                                     83 	.globl _P3_5
                                     84 	.globl _P3_4
                                     85 	.globl _P3_3
                                     86 	.globl _P3_2
                                     87 	.globl _P3_1
                                     88 	.globl _P3_0
                                     89 	.globl _EA
                                     90 	.globl _ES
                                     91 	.globl _ET1
                                     92 	.globl _EX1
                                     93 	.globl _ET0
                                     94 	.globl _EX0
                                     95 	.globl _P2_7
                                     96 	.globl _P2_6
                                     97 	.globl _P2_5
                                     98 	.globl _P2_4
                                     99 	.globl _P2_3
                                    100 	.globl _P2_2
                                    101 	.globl _P2_1
                                    102 	.globl _P2_0
                                    103 	.globl _SM0
                                    104 	.globl _SM1
                                    105 	.globl _SM2
                                    106 	.globl _REN
                                    107 	.globl _TB8
                                    108 	.globl _RB8
                                    109 	.globl _TI
                                    110 	.globl _RI
                                    111 	.globl _P1_7
                                    112 	.globl _P1_6
                                    113 	.globl _P1_5
                                    114 	.globl _P1_4
                                    115 	.globl _P1_3
                                    116 	.globl _P1_2
                                    117 	.globl _P1_1
                                    118 	.globl _P1_0
                                    119 	.globl _TF1
                                    120 	.globl _TR1
                                    121 	.globl _TF0
                                    122 	.globl _TR0
                                    123 	.globl _IE1
                                    124 	.globl _IT1
                                    125 	.globl _IE0
                                    126 	.globl _IT0
                                    127 	.globl _P0_7
                                    128 	.globl _P0_6
                                    129 	.globl _P0_5
                                    130 	.globl _P0_4
                                    131 	.globl _P0_3
                                    132 	.globl _P0_2
                                    133 	.globl _P0_1
                                    134 	.globl _P0_0
                                    135 	.globl _TXD0
                                    136 	.globl _RXD0
                                    137 	.globl _BREG_F7
                                    138 	.globl _BREG_F6
                                    139 	.globl _BREG_F5
                                    140 	.globl _BREG_F4
                                    141 	.globl _BREG_F3
                                    142 	.globl _BREG_F2
                                    143 	.globl _BREG_F1
                                    144 	.globl _BREG_F0
                                    145 	.globl _EECON
                                    146 	.globl _KBF
                                    147 	.globl _KBE
                                    148 	.globl _KBLS
                                    149 	.globl _BRL
                                    150 	.globl _BDRCON
                                    151 	.globl _T2MOD
                                    152 	.globl _SPDAT
                                    153 	.globl _SPSTA
                                    154 	.globl _SPCON
                                    155 	.globl _SADEN
                                    156 	.globl _SADDR
                                    157 	.globl _WDTPRG
                                    158 	.globl _WDTRST
                                    159 	.globl _P5
                                    160 	.globl _P4
                                    161 	.globl _IPH1
                                    162 	.globl _IPL1
                                    163 	.globl _IPH0
                                    164 	.globl _IPL0
                                    165 	.globl _IEN1
                                    166 	.globl _IEN0
                                    167 	.globl _CMOD
                                    168 	.globl _CL
                                    169 	.globl _CH
                                    170 	.globl _CCON
                                    171 	.globl _CCAPM4
                                    172 	.globl _CCAPM3
                                    173 	.globl _CCAPM2
                                    174 	.globl _CCAPM1
                                    175 	.globl _CCAPM0
                                    176 	.globl _CCAP4L
                                    177 	.globl _CCAP3L
                                    178 	.globl _CCAP2L
                                    179 	.globl _CCAP1L
                                    180 	.globl _CCAP0L
                                    181 	.globl _CCAP4H
                                    182 	.globl _CCAP3H
                                    183 	.globl _CCAP2H
                                    184 	.globl _CCAP1H
                                    185 	.globl _CCAP0H
                                    186 	.globl _CKCON1
                                    187 	.globl _CKCON0
                                    188 	.globl _CKRL
                                    189 	.globl _AUXR1
                                    190 	.globl _AUXR
                                    191 	.globl _TH2
                                    192 	.globl _TL2
                                    193 	.globl _RCAP2H
                                    194 	.globl _RCAP2L
                                    195 	.globl _T2CON
                                    196 	.globl _B
                                    197 	.globl _ACC
                                    198 	.globl _PSW
                                    199 	.globl _IP
                                    200 	.globl _P3
                                    201 	.globl _IE
                                    202 	.globl _P2
                                    203 	.globl _SBUF
                                    204 	.globl _SCON
                                    205 	.globl _P1
                                    206 	.globl _TH1
                                    207 	.globl _TH0
                                    208 	.globl _TL1
                                    209 	.globl _TL0
                                    210 	.globl _TMOD
                                    211 	.globl _TCON
                                    212 	.globl _PCON
                                    213 	.globl _DPH
                                    214 	.globl _DPL
                                    215 	.globl _SP
                                    216 	.globl _P0
                                    217 	.globl _SBUF0
                                    218 	.globl _DP0L
                                    219 	.globl _DP0H
                                    220 	.globl _Byte_Read_Sequential_PARM_3
                                    221 	.globl _Byte_Read_Sequential_PARM_2
                                    222 	.globl _Byte_Read_PARM_2
                                    223 	.globl _Byte_Write_PARM_3
                                    224 	.globl _Byte_Write_PARM_2
                                    225 	.globl _delay
                                    226 	.globl _Byte_Write
                                    227 	.globl _Byte_Read
                                    228 	.globl _Byte_Read_Sequential
                                    229 	.globl _eeprom_reset
                                    230 ;--------------------------------------------------------
                                    231 ; special function registers
                                    232 ;--------------------------------------------------------
                                    233 	.area RSEG    (ABS,DATA)
      000000                        234 	.org 0x0000
                           000083   235 _DP0H	=	0x0083
                           000082   236 _DP0L	=	0x0082
                           000099   237 _SBUF0	=	0x0099
                           000080   238 _P0	=	0x0080
                           000081   239 _SP	=	0x0081
                           000082   240 _DPL	=	0x0082
                           000083   241 _DPH	=	0x0083
                           000087   242 _PCON	=	0x0087
                           000088   243 _TCON	=	0x0088
                           000089   244 _TMOD	=	0x0089
                           00008A   245 _TL0	=	0x008a
                           00008B   246 _TL1	=	0x008b
                           00008C   247 _TH0	=	0x008c
                           00008D   248 _TH1	=	0x008d
                           000090   249 _P1	=	0x0090
                           000098   250 _SCON	=	0x0098
                           000099   251 _SBUF	=	0x0099
                           0000A0   252 _P2	=	0x00a0
                           0000A8   253 _IE	=	0x00a8
                           0000B0   254 _P3	=	0x00b0
                           0000B8   255 _IP	=	0x00b8
                           0000D0   256 _PSW	=	0x00d0
                           0000E0   257 _ACC	=	0x00e0
                           0000F0   258 _B	=	0x00f0
                           0000C8   259 _T2CON	=	0x00c8
                           0000CA   260 _RCAP2L	=	0x00ca
                           0000CB   261 _RCAP2H	=	0x00cb
                           0000CC   262 _TL2	=	0x00cc
                           0000CD   263 _TH2	=	0x00cd
                           00008E   264 _AUXR	=	0x008e
                           0000A2   265 _AUXR1	=	0x00a2
                           000097   266 _CKRL	=	0x0097
                           00008F   267 _CKCON0	=	0x008f
                           0000AF   268 _CKCON1	=	0x00af
                           0000FA   269 _CCAP0H	=	0x00fa
                           0000FB   270 _CCAP1H	=	0x00fb
                           0000FC   271 _CCAP2H	=	0x00fc
                           0000FD   272 _CCAP3H	=	0x00fd
                           0000FE   273 _CCAP4H	=	0x00fe
                           0000EA   274 _CCAP0L	=	0x00ea
                           0000EB   275 _CCAP1L	=	0x00eb
                           0000EC   276 _CCAP2L	=	0x00ec
                           0000ED   277 _CCAP3L	=	0x00ed
                           0000EE   278 _CCAP4L	=	0x00ee
                           0000DA   279 _CCAPM0	=	0x00da
                           0000DB   280 _CCAPM1	=	0x00db
                           0000DC   281 _CCAPM2	=	0x00dc
                           0000DD   282 _CCAPM3	=	0x00dd
                           0000DE   283 _CCAPM4	=	0x00de
                           0000D8   284 _CCON	=	0x00d8
                           0000F9   285 _CH	=	0x00f9
                           0000E9   286 _CL	=	0x00e9
                           0000D9   287 _CMOD	=	0x00d9
                           0000A8   288 _IEN0	=	0x00a8
                           0000B1   289 _IEN1	=	0x00b1
                           0000B8   290 _IPL0	=	0x00b8
                           0000B7   291 _IPH0	=	0x00b7
                           0000B2   292 _IPL1	=	0x00b2
                           0000B3   293 _IPH1	=	0x00b3
                           0000C0   294 _P4	=	0x00c0
                           0000E8   295 _P5	=	0x00e8
                           0000A6   296 _WDTRST	=	0x00a6
                           0000A7   297 _WDTPRG	=	0x00a7
                           0000A9   298 _SADDR	=	0x00a9
                           0000B9   299 _SADEN	=	0x00b9
                           0000C3   300 _SPCON	=	0x00c3
                           0000C4   301 _SPSTA	=	0x00c4
                           0000C5   302 _SPDAT	=	0x00c5
                           0000C9   303 _T2MOD	=	0x00c9
                           00009B   304 _BDRCON	=	0x009b
                           00009A   305 _BRL	=	0x009a
                           00009C   306 _KBLS	=	0x009c
                           00009D   307 _KBE	=	0x009d
                           00009E   308 _KBF	=	0x009e
                           0000D2   309 _EECON	=	0x00d2
                                    310 ;--------------------------------------------------------
                                    311 ; special function bits
                                    312 ;--------------------------------------------------------
                                    313 	.area RSEG    (ABS,DATA)
      000000                        314 	.org 0x0000
                           0000F0   315 _BREG_F0	=	0x00f0
                           0000F1   316 _BREG_F1	=	0x00f1
                           0000F2   317 _BREG_F2	=	0x00f2
                           0000F3   318 _BREG_F3	=	0x00f3
                           0000F4   319 _BREG_F4	=	0x00f4
                           0000F5   320 _BREG_F5	=	0x00f5
                           0000F6   321 _BREG_F6	=	0x00f6
                           0000F7   322 _BREG_F7	=	0x00f7
                           0000B0   323 _RXD0	=	0x00b0
                           0000B1   324 _TXD0	=	0x00b1
                           000080   325 _P0_0	=	0x0080
                           000081   326 _P0_1	=	0x0081
                           000082   327 _P0_2	=	0x0082
                           000083   328 _P0_3	=	0x0083
                           000084   329 _P0_4	=	0x0084
                           000085   330 _P0_5	=	0x0085
                           000086   331 _P0_6	=	0x0086
                           000087   332 _P0_7	=	0x0087
                           000088   333 _IT0	=	0x0088
                           000089   334 _IE0	=	0x0089
                           00008A   335 _IT1	=	0x008a
                           00008B   336 _IE1	=	0x008b
                           00008C   337 _TR0	=	0x008c
                           00008D   338 _TF0	=	0x008d
                           00008E   339 _TR1	=	0x008e
                           00008F   340 _TF1	=	0x008f
                           000090   341 _P1_0	=	0x0090
                           000091   342 _P1_1	=	0x0091
                           000092   343 _P1_2	=	0x0092
                           000093   344 _P1_3	=	0x0093
                           000094   345 _P1_4	=	0x0094
                           000095   346 _P1_5	=	0x0095
                           000096   347 _P1_6	=	0x0096
                           000097   348 _P1_7	=	0x0097
                           000098   349 _RI	=	0x0098
                           000099   350 _TI	=	0x0099
                           00009A   351 _RB8	=	0x009a
                           00009B   352 _TB8	=	0x009b
                           00009C   353 _REN	=	0x009c
                           00009D   354 _SM2	=	0x009d
                           00009E   355 _SM1	=	0x009e
                           00009F   356 _SM0	=	0x009f
                           0000A0   357 _P2_0	=	0x00a0
                           0000A1   358 _P2_1	=	0x00a1
                           0000A2   359 _P2_2	=	0x00a2
                           0000A3   360 _P2_3	=	0x00a3
                           0000A4   361 _P2_4	=	0x00a4
                           0000A5   362 _P2_5	=	0x00a5
                           0000A6   363 _P2_6	=	0x00a6
                           0000A7   364 _P2_7	=	0x00a7
                           0000A8   365 _EX0	=	0x00a8
                           0000A9   366 _ET0	=	0x00a9
                           0000AA   367 _EX1	=	0x00aa
                           0000AB   368 _ET1	=	0x00ab
                           0000AC   369 _ES	=	0x00ac
                           0000AF   370 _EA	=	0x00af
                           0000B0   371 _P3_0	=	0x00b0
                           0000B1   372 _P3_1	=	0x00b1
                           0000B2   373 _P3_2	=	0x00b2
                           0000B3   374 _P3_3	=	0x00b3
                           0000B4   375 _P3_4	=	0x00b4
                           0000B5   376 _P3_5	=	0x00b5
                           0000B6   377 _P3_6	=	0x00b6
                           0000B7   378 _P3_7	=	0x00b7
                           0000B0   379 _RXD	=	0x00b0
                           0000B1   380 _TXD	=	0x00b1
                           0000B2   381 _INT0	=	0x00b2
                           0000B3   382 _INT1	=	0x00b3
                           0000B4   383 _T0	=	0x00b4
                           0000B5   384 _T1	=	0x00b5
                           0000B6   385 _WR	=	0x00b6
                           0000B7   386 _RD	=	0x00b7
                           0000B8   387 _PX0	=	0x00b8
                           0000B9   388 _PT0	=	0x00b9
                           0000BA   389 _PX1	=	0x00ba
                           0000BB   390 _PT1	=	0x00bb
                           0000BC   391 _PS	=	0x00bc
                           0000D0   392 _P	=	0x00d0
                           0000D1   393 _F1	=	0x00d1
                           0000D2   394 _OV	=	0x00d2
                           0000D3   395 _RS0	=	0x00d3
                           0000D4   396 _RS1	=	0x00d4
                           0000D5   397 _F0	=	0x00d5
                           0000D6   398 _AC	=	0x00d6
                           0000D7   399 _CY	=	0x00d7
                           0000AD   400 _ET2	=	0x00ad
                           0000BD   401 _PT2	=	0x00bd
                           0000C8   402 _T2CON_0	=	0x00c8
                           0000C9   403 _T2CON_1	=	0x00c9
                           0000CA   404 _T2CON_2	=	0x00ca
                           0000CB   405 _T2CON_3	=	0x00cb
                           0000CC   406 _T2CON_4	=	0x00cc
                           0000CD   407 _T2CON_5	=	0x00cd
                           0000CE   408 _T2CON_6	=	0x00ce
                           0000CF   409 _T2CON_7	=	0x00cf
                           0000C8   410 _CP_RL2	=	0x00c8
                           0000C9   411 _C_T2	=	0x00c9
                           0000CA   412 _TR2	=	0x00ca
                           0000CB   413 _EXEN2	=	0x00cb
                           0000CC   414 _TCLK	=	0x00cc
                           0000CD   415 _RCLK	=	0x00cd
                           0000CE   416 _EXF2	=	0x00ce
                           0000CF   417 _TF2	=	0x00cf
                           0000DF   418 _CF	=	0x00df
                           0000DE   419 _CR	=	0x00de
                           0000DC   420 _CCF4	=	0x00dc
                           0000DB   421 _CCF3	=	0x00db
                           0000DA   422 _CCF2	=	0x00da
                           0000D9   423 _CCF1	=	0x00d9
                           0000D8   424 _CCF0	=	0x00d8
                           0000AE   425 _EC	=	0x00ae
                           0000BE   426 _PPCL	=	0x00be
                           0000BD   427 _PT2L	=	0x00bd
                           0000BC   428 _PSL	=	0x00bc
                           0000BB   429 _PT1L	=	0x00bb
                           0000BA   430 _PX1L	=	0x00ba
                           0000B9   431 _PT0L	=	0x00b9
                           0000B8   432 _PX0L	=	0x00b8
                           0000C0   433 _P4_0	=	0x00c0
                           0000C1   434 _P4_1	=	0x00c1
                           0000C2   435 _P4_2	=	0x00c2
                           0000C3   436 _P4_3	=	0x00c3
                           0000C4   437 _P4_4	=	0x00c4
                           0000C5   438 _P4_5	=	0x00c5
                           0000C6   439 _P4_6	=	0x00c6
                           0000C7   440 _P4_7	=	0x00c7
                           0000E8   441 _P5_0	=	0x00e8
                           0000E9   442 _P5_1	=	0x00e9
                           0000EA   443 _P5_2	=	0x00ea
                           0000EB   444 _P5_3	=	0x00eb
                           0000EC   445 _P5_4	=	0x00ec
                           0000ED   446 _P5_5	=	0x00ed
                           0000EE   447 _P5_6	=	0x00ee
                           0000EF   448 _P5_7	=	0x00ef
                                    449 ;--------------------------------------------------------
                                    450 ; overlayable register banks
                                    451 ;--------------------------------------------------------
                                    452 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        453 	.ds 8
                                    454 ;--------------------------------------------------------
                                    455 ; internal ram data
                                    456 ;--------------------------------------------------------
                                    457 	.area DSEG    (DATA)
      000000                        458 _Byte_Read_Sequential_l_131073_37:
      000000                        459 	.ds 2
      000002                        460 _Byte_Read_Sequential_k_262145_39:
      000002                        461 	.ds 2
                                    462 ;--------------------------------------------------------
                                    463 ; overlayable items in internal ram
                                    464 ;--------------------------------------------------------
                                    465 	.area	OSEG    (OVR,DATA)
                                    466 ;--------------------------------------------------------
                                    467 ; indirectly addressable internal ram data
                                    468 ;--------------------------------------------------------
                                    469 	.area ISEG    (DATA)
                                    470 ;--------------------------------------------------------
                                    471 ; absolute internal ram data
                                    472 ;--------------------------------------------------------
                                    473 	.area IABS    (ABS,DATA)
                                    474 	.area IABS    (ABS,DATA)
                                    475 ;--------------------------------------------------------
                                    476 ; bit data
                                    477 ;--------------------------------------------------------
                                    478 	.area BSEG    (BIT)
                                    479 ;--------------------------------------------------------
                                    480 ; paged external ram data
                                    481 ;--------------------------------------------------------
                                    482 	.area PSEG    (PAG,XDATA)
                                    483 ;--------------------------------------------------------
                                    484 ; external ram data
                                    485 ;--------------------------------------------------------
                                    486 	.area XSEG    (XDATA)
      000000                        487 _Byte_Write_PARM_2:
      000000                        488 	.ds 1
      000001                        489 _Byte_Write_PARM_3:
      000001                        490 	.ds 1
      000002                        491 _Byte_Write_data_65536_8:
      000002                        492 	.ds 1
      000003                        493 _Byte_Read_PARM_2:
      000003                        494 	.ds 1
      000004                        495 _Byte_Read_block_65536_17:
      000004                        496 	.ds 1
      000005                        497 _Byte_Read_Sequential_PARM_2:
      000005                        498 	.ds 1
      000006                        499 _Byte_Read_Sequential_PARM_3:
      000006                        500 	.ds 1
      000007                        501 _Byte_Read_Sequential_block_65536_28:
      000007                        502 	.ds 1
      000008                        503 _Byte_Read_Sequential_buffer_65536_29:
      000008                        504 	.ds 256
                                    505 ;--------------------------------------------------------
                                    506 ; absolute external ram data
                                    507 ;--------------------------------------------------------
                                    508 	.area XABS    (ABS,XDATA)
                                    509 ;--------------------------------------------------------
                                    510 ; external initialized ram data
                                    511 ;--------------------------------------------------------
                                    512 	.area XISEG   (XDATA)
                                    513 	.area HOME    (CODE)
                                    514 	.area GSINIT0 (CODE)
                                    515 	.area GSINIT1 (CODE)
                                    516 	.area GSINIT2 (CODE)
                                    517 	.area GSINIT3 (CODE)
                                    518 	.area GSINIT4 (CODE)
                                    519 	.area GSINIT5 (CODE)
                                    520 	.area GSINIT  (CODE)
                                    521 	.area GSFINAL (CODE)
                                    522 	.area CSEG    (CODE)
                                    523 ;--------------------------------------------------------
                                    524 ; global & static initialisations
                                    525 ;--------------------------------------------------------
                                    526 	.area HOME    (CODE)
                                    527 	.area GSINIT  (CODE)
                                    528 	.area GSFINAL (CODE)
                                    529 	.area GSINIT  (CODE)
                                    530 ;--------------------------------------------------------
                                    531 ; Home
                                    532 ;--------------------------------------------------------
                                    533 	.area HOME    (CODE)
                                    534 	.area HOME    (CODE)
                                    535 ;--------------------------------------------------------
                                    536 ; code
                                    537 ;--------------------------------------------------------
                                    538 	.area CSEG    (CODE)
                                    539 ;------------------------------------------------------------
                                    540 ;Allocation info for local variables in function 'delay'
                                    541 ;------------------------------------------------------------
                                    542 ;t                         Allocated to registers 
                                    543 ;------------------------------------------------------------
                                    544 ;	i2c_bit_bang.c:25: void delay(unsigned int t)
                                    545 ;	-----------------------------------------
                                    546 ;	 function delay
                                    547 ;	-----------------------------------------
      000000                        548 _delay:
                           000007   549 	ar7 = 0x07
                           000006   550 	ar6 = 0x06
                           000005   551 	ar5 = 0x05
                           000004   552 	ar4 = 0x04
                           000003   553 	ar3 = 0x03
                           000002   554 	ar2 = 0x02
                           000001   555 	ar1 = 0x01
                           000000   556 	ar0 = 0x00
      000000 AE 82            [24]  557 	mov	r6,dpl
      000002 AF 83            [24]  558 	mov	r7,dph
                                    559 ;	i2c_bit_bang.c:27: while(t--){
      000004                        560 00101$:
      000004 8E 04            [24]  561 	mov	ar4,r6
      000006 8F 05            [24]  562 	mov	ar5,r7
      000008 1E               [12]  563 	dec	r6
      000009 BE FF 01         [24]  564 	cjne	r6,#0xff,00115$
      00000C 1F               [12]  565 	dec	r7
      00000D                        566 00115$:
      00000D EC               [12]  567 	mov	a,r4
      00000E 4D               [12]  568 	orl	a,r5
      00000F 60 03            [24]  569 	jz	00104$
                                    570 ;	i2c_bit_bang.c:28: NOP;
      000011 00               [12]  571 	nop	
      000012 80 F0            [24]  572 	sjmp	00101$
      000014                        573 00104$:
                                    574 ;	i2c_bit_bang.c:30: }
      000014 22               [24]  575 	ret
                                    576 ;------------------------------------------------------------
                                    577 ;Allocation info for local variables in function 'Byte_Write'
                                    578 ;------------------------------------------------------------
                                    579 ;byte                      Allocated to registers r7 
                                    580 ;i                         Allocated to registers r5 r6 
                                    581 ;j                         Allocated to registers r6 r7 
                                    582 ;k                         Allocated to registers r6 r7 
                                    583 ;block                     Allocated with name '_Byte_Write_PARM_2'
                                    584 ;address                   Allocated with name '_Byte_Write_PARM_3'
                                    585 ;data                      Allocated with name '_Byte_Write_data_65536_8'
                                    586 ;------------------------------------------------------------
                                    587 ;	i2c_bit_bang.c:32: void Byte_Write(__xdata uint8_t data, __xdata uint8_t block, __xdata uint8_t address){
                                    588 ;	-----------------------------------------
                                    589 ;	 function Byte_Write
                                    590 ;	-----------------------------------------
      000015                        591 _Byte_Write:
      000015 E5 82            [12]  592 	mov	a,dpl
      000017 90r00r02         [24]  593 	mov	dptr,#_Byte_Write_data_65536_8
      00001A F0               [24]  594 	movx	@dptr,a
                                    595 ;	i2c_bit_bang.c:33: SCL = PULSE_HIGH;
                                    596 ;	assignBit
      00001B D2 92            [12]  597 	setb	_P1_2
                                    598 ;	i2c_bit_bang.c:34: SDA = PULSE_HIGH;
                                    599 ;	assignBit
      00001D D2 93            [12]  600 	setb	_P1_3
                                    601 ;	i2c_bit_bang.c:35: delay(2);
      00001F 90 00 02         [24]  602 	mov	dptr,#0x0002
      000022 12r00r00         [24]  603 	lcall	_delay
                                    604 ;	i2c_bit_bang.c:36: SDA = PULSE_LOW;
                                    605 ;	assignBit
      000025 C2 93            [12]  606 	clr	_P1_3
                                    607 ;	i2c_bit_bang.c:37: delay(2);
      000027 90 00 02         [24]  608 	mov	dptr,#0x0002
      00002A 12r00r00         [24]  609 	lcall	_delay
                                    610 ;	i2c_bit_bang.c:38: SCL = PULSE_LOW;
                                    611 ;	assignBit
      00002D C2 92            [12]  612 	clr	_P1_2
                                    613 ;	i2c_bit_bang.c:39: uint8_t byte = START_BYTE | (block << 1) | WRITE_BYTE;
      00002F 90r00r00         [24]  614 	mov	dptr,#_Byte_Write_PARM_2
      000032 E0               [24]  615 	movx	a,@dptr
      000033 25 E0            [12]  616 	add	a,acc
      000035 FF               [12]  617 	mov	r7,a
      000036 43 07 A0         [24]  618 	orl	ar7,#0xa0
                                    619 ;	i2c_bit_bang.c:40: for(int i = 0; i < BYTE_LENGTH; i++){
      000039 7D 00            [12]  620 	mov	r5,#0x00
      00003B 7E 00            [12]  621 	mov	r6,#0x00
      00003D                        622 00105$:
      00003D C3               [12]  623 	clr	c
      00003E ED               [12]  624 	mov	a,r5
      00003F 94 08            [12]  625 	subb	a,#0x08
      000041 EE               [12]  626 	mov	a,r6
      000042 64 80            [12]  627 	xrl	a,#0x80
      000044 94 80            [12]  628 	subb	a,#0x80
      000046 50 3C            [24]  629 	jnc	00101$
                                    630 ;	i2c_bit_bang.c:41: SDA = byte & (0b10000000);
      000048 EF               [12]  631 	mov	a,r7
      000049 23               [12]  632 	rl	a
      00004A 54 01            [12]  633 	anl	a,#0x01
                                    634 ;	assignBit
      00004C 24 FF            [12]  635 	add	a,#0xff
      00004E 92 93            [24]  636 	mov	_P1_3,c
                                    637 ;	i2c_bit_bang.c:42: SCL = PULSE_HIGH;
                                    638 ;	assignBit
      000050 D2 92            [12]  639 	setb	_P1_2
                                    640 ;	i2c_bit_bang.c:43: delay(2);
      000052 90 00 02         [24]  641 	mov	dptr,#0x0002
      000055 C0 07            [24]  642 	push	ar7
      000057 C0 06            [24]  643 	push	ar6
      000059 C0 05            [24]  644 	push	ar5
      00005B 12r00r00         [24]  645 	lcall	_delay
      00005E D0 05            [24]  646 	pop	ar5
      000060 D0 06            [24]  647 	pop	ar6
      000062 D0 07            [24]  648 	pop	ar7
                                    649 ;	i2c_bit_bang.c:44: SCL = PULSE_LOW;
                                    650 ;	assignBit
      000064 C2 92            [12]  651 	clr	_P1_2
                                    652 ;	i2c_bit_bang.c:45: byte = byte << 1;
      000066 8F 04            [24]  653 	mov	ar4,r7
      000068 EC               [12]  654 	mov	a,r4
      000069 2C               [12]  655 	add	a,r4
      00006A FF               [12]  656 	mov	r7,a
                                    657 ;	i2c_bit_bang.c:46: delay(0);
      00006B 90 00 00         [24]  658 	mov	dptr,#0x0000
      00006E C0 07            [24]  659 	push	ar7
      000070 C0 06            [24]  660 	push	ar6
      000072 C0 05            [24]  661 	push	ar5
      000074 12r00r00         [24]  662 	lcall	_delay
      000077 D0 05            [24]  663 	pop	ar5
      000079 D0 06            [24]  664 	pop	ar6
      00007B D0 07            [24]  665 	pop	ar7
                                    666 ;	i2c_bit_bang.c:40: for(int i = 0; i < BYTE_LENGTH; i++){
      00007D 0D               [12]  667 	inc	r5
      00007E BD 00 BC         [24]  668 	cjne	r5,#0x00,00105$
      000081 0E               [12]  669 	inc	r6
      000082 80 B9            [24]  670 	sjmp	00105$
      000084                        671 00101$:
                                    672 ;	i2c_bit_bang.c:48: SDA = PULSE_HIGH;
                                    673 ;	assignBit
      000084 D2 93            [12]  674 	setb	_P1_3
                                    675 ;	i2c_bit_bang.c:49: SCL = PULSE_HIGH;
                                    676 ;	assignBit
      000086 D2 92            [12]  677 	setb	_P1_2
                                    678 ;	i2c_bit_bang.c:50: delay(2);
      000088 90 00 02         [24]  679 	mov	dptr,#0x0002
      00008B 12r00r00         [24]  680 	lcall	_delay
                                    681 ;	i2c_bit_bang.c:56: SCL = PULSE_LOW;
                                    682 ;	assignBit
      00008E C2 92            [12]  683 	clr	_P1_2
                                    684 ;	i2c_bit_bang.c:57: delay(0);
      000090 90 00 00         [24]  685 	mov	dptr,#0x0000
      000093 12r00r00         [24]  686 	lcall	_delay
                                    687 ;	i2c_bit_bang.c:58: for(int j = 0; j < BYTE_LENGTH; j++){
      000096 7E 00            [12]  688 	mov	r6,#0x00
      000098 7F 00            [12]  689 	mov	r7,#0x00
      00009A                        690 00108$:
      00009A C3               [12]  691 	clr	c
      00009B EE               [12]  692 	mov	a,r6
      00009C 94 08            [12]  693 	subb	a,#0x08
      00009E EF               [12]  694 	mov	a,r7
      00009F 64 80            [12]  695 	xrl	a,#0x80
      0000A1 94 80            [12]  696 	subb	a,#0x80
      0000A3 50 35            [24]  697 	jnc	00102$
                                    698 ;	i2c_bit_bang.c:59: SDA = address & (0b10000000);
      0000A5 90r00r01         [24]  699 	mov	dptr,#_Byte_Write_PARM_3
      0000A8 E0               [24]  700 	movx	a,@dptr
      0000A9 FD               [12]  701 	mov	r5,a
      0000AA 23               [12]  702 	rl	a
      0000AB 54 01            [12]  703 	anl	a,#0x01
                                    704 ;	assignBit
      0000AD 24 FF            [12]  705 	add	a,#0xff
      0000AF 92 93            [24]  706 	mov	_P1_3,c
                                    707 ;	i2c_bit_bang.c:60: SCL = PULSE_HIGH;
                                    708 ;	assignBit
      0000B1 D2 92            [12]  709 	setb	_P1_2
                                    710 ;	i2c_bit_bang.c:61: delay(2);
      0000B3 90 00 02         [24]  711 	mov	dptr,#0x0002
      0000B6 C0 07            [24]  712 	push	ar7
      0000B8 C0 06            [24]  713 	push	ar6
      0000BA C0 05            [24]  714 	push	ar5
      0000BC 12r00r00         [24]  715 	lcall	_delay
      0000BF D0 05            [24]  716 	pop	ar5
                                    717 ;	i2c_bit_bang.c:62: SCL = PULSE_LOW;
                                    718 ;	assignBit
      0000C1 C2 92            [12]  719 	clr	_P1_2
                                    720 ;	i2c_bit_bang.c:63: address = address << 1;
      0000C3 ED               [12]  721 	mov	a,r5
      0000C4 2D               [12]  722 	add	a,r5
      0000C5 90r00r01         [24]  723 	mov	dptr,#_Byte_Write_PARM_3
      0000C8 F0               [24]  724 	movx	@dptr,a
                                    725 ;	i2c_bit_bang.c:64: delay(0);
      0000C9 90 00 00         [24]  726 	mov	dptr,#0x0000
      0000CC 12r00r00         [24]  727 	lcall	_delay
      0000CF D0 06            [24]  728 	pop	ar6
      0000D1 D0 07            [24]  729 	pop	ar7
                                    730 ;	i2c_bit_bang.c:58: for(int j = 0; j < BYTE_LENGTH; j++){
      0000D3 0E               [12]  731 	inc	r6
      0000D4 BE 00 C3         [24]  732 	cjne	r6,#0x00,00108$
      0000D7 0F               [12]  733 	inc	r7
      0000D8 80 C0            [24]  734 	sjmp	00108$
      0000DA                        735 00102$:
                                    736 ;	i2c_bit_bang.c:66: SDA = PULSE_HIGH;
                                    737 ;	assignBit
      0000DA D2 93            [12]  738 	setb	_P1_3
                                    739 ;	i2c_bit_bang.c:67: SCL = PULSE_HIGH;
                                    740 ;	assignBit
      0000DC D2 92            [12]  741 	setb	_P1_2
                                    742 ;	i2c_bit_bang.c:68: delay(2);
      0000DE 90 00 02         [24]  743 	mov	dptr,#0x0002
      0000E1 12r00r00         [24]  744 	lcall	_delay
                                    745 ;	i2c_bit_bang.c:74: SCL = PULSE_LOW;
                                    746 ;	assignBit
      0000E4 C2 92            [12]  747 	clr	_P1_2
                                    748 ;	i2c_bit_bang.c:75: delay(0);
      0000E6 90 00 00         [24]  749 	mov	dptr,#0x0000
      0000E9 12r00r00         [24]  750 	lcall	_delay
                                    751 ;	i2c_bit_bang.c:76: for(int k = 0; k < BYTE_LENGTH; k++){
      0000EC 7E 00            [12]  752 	mov	r6,#0x00
      0000EE 7F 00            [12]  753 	mov	r7,#0x00
      0000F0                        754 00111$:
      0000F0 C3               [12]  755 	clr	c
      0000F1 EE               [12]  756 	mov	a,r6
      0000F2 94 08            [12]  757 	subb	a,#0x08
      0000F4 EF               [12]  758 	mov	a,r7
      0000F5 64 80            [12]  759 	xrl	a,#0x80
      0000F7 94 80            [12]  760 	subb	a,#0x80
      0000F9 50 35            [24]  761 	jnc	00103$
                                    762 ;	i2c_bit_bang.c:77: SDA = data & (0b10000000);
      0000FB 90r00r02         [24]  763 	mov	dptr,#_Byte_Write_data_65536_8
      0000FE E0               [24]  764 	movx	a,@dptr
      0000FF FD               [12]  765 	mov	r5,a
      000100 23               [12]  766 	rl	a
      000101 54 01            [12]  767 	anl	a,#0x01
                                    768 ;	assignBit
      000103 24 FF            [12]  769 	add	a,#0xff
      000105 92 93            [24]  770 	mov	_P1_3,c
                                    771 ;	i2c_bit_bang.c:78: SCL = PULSE_HIGH;
                                    772 ;	assignBit
      000107 D2 92            [12]  773 	setb	_P1_2
                                    774 ;	i2c_bit_bang.c:79: delay(2);
      000109 90 00 02         [24]  775 	mov	dptr,#0x0002
      00010C C0 07            [24]  776 	push	ar7
      00010E C0 06            [24]  777 	push	ar6
      000110 C0 05            [24]  778 	push	ar5
      000112 12r00r00         [24]  779 	lcall	_delay
      000115 D0 05            [24]  780 	pop	ar5
                                    781 ;	i2c_bit_bang.c:80: SCL = PULSE_LOW;
                                    782 ;	assignBit
      000117 C2 92            [12]  783 	clr	_P1_2
                                    784 ;	i2c_bit_bang.c:81: data = data << 1;
      000119 ED               [12]  785 	mov	a,r5
      00011A 2D               [12]  786 	add	a,r5
      00011B 90r00r02         [24]  787 	mov	dptr,#_Byte_Write_data_65536_8
      00011E F0               [24]  788 	movx	@dptr,a
                                    789 ;	i2c_bit_bang.c:82: delay(0);
      00011F 90 00 00         [24]  790 	mov	dptr,#0x0000
      000122 12r00r00         [24]  791 	lcall	_delay
      000125 D0 06            [24]  792 	pop	ar6
      000127 D0 07            [24]  793 	pop	ar7
                                    794 ;	i2c_bit_bang.c:76: for(int k = 0; k < BYTE_LENGTH; k++){
      000129 0E               [12]  795 	inc	r6
      00012A BE 00 C3         [24]  796 	cjne	r6,#0x00,00111$
      00012D 0F               [12]  797 	inc	r7
      00012E 80 C0            [24]  798 	sjmp	00111$
      000130                        799 00103$:
                                    800 ;	i2c_bit_bang.c:84: SDA = PULSE_HIGH;
                                    801 ;	assignBit
      000130 D2 93            [12]  802 	setb	_P1_3
                                    803 ;	i2c_bit_bang.c:85: SCL = PULSE_HIGH;
                                    804 ;	assignBit
      000132 D2 92            [12]  805 	setb	_P1_2
                                    806 ;	i2c_bit_bang.c:86: delay(2);
      000134 90 00 02         [24]  807 	mov	dptr,#0x0002
      000137 12r00r00         [24]  808 	lcall	_delay
                                    809 ;	i2c_bit_bang.c:92: SCL = PULSE_LOW;
                                    810 ;	assignBit
      00013A C2 92            [12]  811 	clr	_P1_2
                                    812 ;	i2c_bit_bang.c:93: delay(1);
      00013C 90 00 01         [24]  813 	mov	dptr,#0x0001
      00013F 12r00r00         [24]  814 	lcall	_delay
                                    815 ;	i2c_bit_bang.c:94: SDA = PULSE_LOW;
                                    816 ;	assignBit
      000142 C2 93            [12]  817 	clr	_P1_3
                                    818 ;	i2c_bit_bang.c:95: delay(1);
      000144 90 00 01         [24]  819 	mov	dptr,#0x0001
      000147 12r00r00         [24]  820 	lcall	_delay
                                    821 ;	i2c_bit_bang.c:96: SCL = PULSE_HIGH;
                                    822 ;	assignBit
      00014A D2 92            [12]  823 	setb	_P1_2
                                    824 ;	i2c_bit_bang.c:97: delay(0);
      00014C 90 00 00         [24]  825 	mov	dptr,#0x0000
      00014F 12r00r00         [24]  826 	lcall	_delay
                                    827 ;	i2c_bit_bang.c:98: SDA = PULSE_HIGH;
                                    828 ;	assignBit
      000152 D2 93            [12]  829 	setb	_P1_3
                                    830 ;	i2c_bit_bang.c:99: }
      000154 22               [24]  831 	ret
                                    832 ;------------------------------------------------------------
                                    833 ;Allocation info for local variables in function 'Byte_Read'
                                    834 ;------------------------------------------------------------
                                    835 ;byte                      Allocated to registers r4 
                                    836 ;i                         Allocated to registers r4 r5 
                                    837 ;j                         Allocated to registers r5 r6 
                                    838 ;i                         Allocated to registers r5 r6 
                                    839 ;k                         Allocated to registers r5 r6 
                                    840 ;address                   Allocated with name '_Byte_Read_PARM_2'
                                    841 ;block                     Allocated with name '_Byte_Read_block_65536_17'
                                    842 ;------------------------------------------------------------
                                    843 ;	i2c_bit_bang.c:100: __xdata uint8_t Byte_Read(__xdata uint8_t block, __xdata uint8_t address){
                                    844 ;	-----------------------------------------
                                    845 ;	 function Byte_Read
                                    846 ;	-----------------------------------------
      000155                        847 _Byte_Read:
      000155 E5 82            [12]  848 	mov	a,dpl
      000157 90r00r04         [24]  849 	mov	dptr,#_Byte_Read_block_65536_17
      00015A F0               [24]  850 	movx	@dptr,a
                                    851 ;	i2c_bit_bang.c:101: SCL = PULSE_HIGH;
                                    852 ;	assignBit
      00015B D2 92            [12]  853 	setb	_P1_2
                                    854 ;	i2c_bit_bang.c:102: SDA = PULSE_HIGH;
                                    855 ;	assignBit
      00015D D2 93            [12]  856 	setb	_P1_3
                                    857 ;	i2c_bit_bang.c:103: delay(2);
      00015F 90 00 02         [24]  858 	mov	dptr,#0x0002
      000162 12r00r00         [24]  859 	lcall	_delay
                                    860 ;	i2c_bit_bang.c:104: SDA = PULSE_LOW;
                                    861 ;	assignBit
      000165 C2 93            [12]  862 	clr	_P1_3
                                    863 ;	i2c_bit_bang.c:105: delay(2);
      000167 90 00 02         [24]  864 	mov	dptr,#0x0002
      00016A 12r00r00         [24]  865 	lcall	_delay
                                    866 ;	i2c_bit_bang.c:106: SCL = PULSE_LOW;
                                    867 ;	assignBit
      00016D C2 92            [12]  868 	clr	_P1_2
                                    869 ;	i2c_bit_bang.c:107: uint8_t byte = START_BYTE | (block << 1) | WRITE_BYTE;
      00016F 90r00r04         [24]  870 	mov	dptr,#_Byte_Read_block_65536_17
      000172 E0               [24]  871 	movx	a,@dptr
      000173 25 E0            [12]  872 	add	a,acc
      000175 FF               [12]  873 	mov	r7,a
      000176 74 A0            [12]  874 	mov	a,#0xa0
      000178 4F               [12]  875 	orl	a,r7
      000179 FE               [12]  876 	mov	r6,a
                                    877 ;	i2c_bit_bang.c:108: for(int i = 0; i < BYTE_LENGTH; i++){
      00017A 7C 00            [12]  878 	mov	r4,#0x00
      00017C 7D 00            [12]  879 	mov	r5,#0x00
      00017E                        880 00106$:
      00017E C3               [12]  881 	clr	c
      00017F EC               [12]  882 	mov	a,r4
      000180 94 08            [12]  883 	subb	a,#0x08
      000182 ED               [12]  884 	mov	a,r5
      000183 64 80            [12]  885 	xrl	a,#0x80
      000185 94 80            [12]  886 	subb	a,#0x80
      000187 50 40            [24]  887 	jnc	00101$
                                    888 ;	i2c_bit_bang.c:109: SDA = byte & (0b10000000);
      000189 EE               [12]  889 	mov	a,r6
      00018A 23               [12]  890 	rl	a
      00018B 54 01            [12]  891 	anl	a,#0x01
                                    892 ;	assignBit
      00018D 24 FF            [12]  893 	add	a,#0xff
      00018F 92 93            [24]  894 	mov	_P1_3,c
                                    895 ;	i2c_bit_bang.c:110: SCL = PULSE_HIGH;
                                    896 ;	assignBit
      000191 D2 92            [12]  897 	setb	_P1_2
                                    898 ;	i2c_bit_bang.c:111: delay(2);
      000193 90 00 02         [24]  899 	mov	dptr,#0x0002
      000196 C0 07            [24]  900 	push	ar7
      000198 C0 06            [24]  901 	push	ar6
      00019A C0 05            [24]  902 	push	ar5
      00019C C0 04            [24]  903 	push	ar4
      00019E 12r00r00         [24]  904 	lcall	_delay
      0001A1 D0 04            [24]  905 	pop	ar4
      0001A3 D0 05            [24]  906 	pop	ar5
      0001A5 D0 06            [24]  907 	pop	ar6
                                    908 ;	i2c_bit_bang.c:112: SCL = PULSE_LOW;
                                    909 ;	assignBit
      0001A7 C2 92            [12]  910 	clr	_P1_2
                                    911 ;	i2c_bit_bang.c:113: byte = byte << 1;
      0001A9 8E 03            [24]  912 	mov	ar3,r6
      0001AB EB               [12]  913 	mov	a,r3
      0001AC 2B               [12]  914 	add	a,r3
      0001AD FE               [12]  915 	mov	r6,a
                                    916 ;	i2c_bit_bang.c:114: delay(0);
      0001AE 90 00 00         [24]  917 	mov	dptr,#0x0000
      0001B1 C0 06            [24]  918 	push	ar6
      0001B3 C0 05            [24]  919 	push	ar5
      0001B5 C0 04            [24]  920 	push	ar4
      0001B7 12r00r00         [24]  921 	lcall	_delay
      0001BA D0 04            [24]  922 	pop	ar4
      0001BC D0 05            [24]  923 	pop	ar5
      0001BE D0 06            [24]  924 	pop	ar6
      0001C0 D0 07            [24]  925 	pop	ar7
                                    926 ;	i2c_bit_bang.c:108: for(int i = 0; i < BYTE_LENGTH; i++){
      0001C2 0C               [12]  927 	inc	r4
      0001C3 BC 00 B8         [24]  928 	cjne	r4,#0x00,00106$
      0001C6 0D               [12]  929 	inc	r5
      0001C7 80 B5            [24]  930 	sjmp	00106$
      0001C9                        931 00101$:
                                    932 ;	i2c_bit_bang.c:116: SDA = PULSE_HIGH;
                                    933 ;	assignBit
      0001C9 D2 93            [12]  934 	setb	_P1_3
                                    935 ;	i2c_bit_bang.c:117: SCL = PULSE_HIGH;
                                    936 ;	assignBit
      0001CB D2 92            [12]  937 	setb	_P1_2
                                    938 ;	i2c_bit_bang.c:118: delay(3);
      0001CD 90 00 03         [24]  939 	mov	dptr,#0x0003
      0001D0 C0 07            [24]  940 	push	ar7
      0001D2 12r00r00         [24]  941 	lcall	_delay
                                    942 ;	i2c_bit_bang.c:124: SCL = PULSE_LOW;
                                    943 ;	assignBit
      0001D5 C2 92            [12]  944 	clr	_P1_2
                                    945 ;	i2c_bit_bang.c:125: delay(0);
      0001D7 90 00 00         [24]  946 	mov	dptr,#0x0000
      0001DA 12r00r00         [24]  947 	lcall	_delay
      0001DD D0 07            [24]  948 	pop	ar7
                                    949 ;	i2c_bit_bang.c:126: for(int j = 0; j < BYTE_LENGTH; j++){
      0001DF 7D 00            [12]  950 	mov	r5,#0x00
      0001E1 7E 00            [12]  951 	mov	r6,#0x00
      0001E3                        952 00109$:
      0001E3 C3               [12]  953 	clr	c
      0001E4 ED               [12]  954 	mov	a,r5
      0001E5 94 08            [12]  955 	subb	a,#0x08
      0001E7 EE               [12]  956 	mov	a,r6
      0001E8 64 80            [12]  957 	xrl	a,#0x80
      0001EA 94 80            [12]  958 	subb	a,#0x80
      0001EC 50 39            [24]  959 	jnc	00102$
                                    960 ;	i2c_bit_bang.c:127: SDA = address & (0b10000000);
      0001EE 90r00r03         [24]  961 	mov	dptr,#_Byte_Read_PARM_2
      0001F1 E0               [24]  962 	movx	a,@dptr
      0001F2 FC               [12]  963 	mov	r4,a
      0001F3 23               [12]  964 	rl	a
      0001F4 54 01            [12]  965 	anl	a,#0x01
                                    966 ;	assignBit
      0001F6 24 FF            [12]  967 	add	a,#0xff
      0001F8 92 93            [24]  968 	mov	_P1_3,c
                                    969 ;	i2c_bit_bang.c:128: SCL = PULSE_HIGH;
                                    970 ;	assignBit
      0001FA D2 92            [12]  971 	setb	_P1_2
                                    972 ;	i2c_bit_bang.c:129: delay(2);
      0001FC 90 00 02         [24]  973 	mov	dptr,#0x0002
      0001FF C0 07            [24]  974 	push	ar7
      000201 C0 06            [24]  975 	push	ar6
      000203 C0 05            [24]  976 	push	ar5
      000205 C0 04            [24]  977 	push	ar4
      000207 12r00r00         [24]  978 	lcall	_delay
      00020A D0 04            [24]  979 	pop	ar4
                                    980 ;	i2c_bit_bang.c:130: SCL = PULSE_LOW;
                                    981 ;	assignBit
      00020C C2 92            [12]  982 	clr	_P1_2
                                    983 ;	i2c_bit_bang.c:131: address = address << 1;
      00020E EC               [12]  984 	mov	a,r4
      00020F 2C               [12]  985 	add	a,r4
      000210 90r00r03         [24]  986 	mov	dptr,#_Byte_Read_PARM_2
      000213 F0               [24]  987 	movx	@dptr,a
                                    988 ;	i2c_bit_bang.c:132: delay(0);
      000214 90 00 00         [24]  989 	mov	dptr,#0x0000
      000217 12r00r00         [24]  990 	lcall	_delay
      00021A D0 05            [24]  991 	pop	ar5
      00021C D0 06            [24]  992 	pop	ar6
      00021E D0 07            [24]  993 	pop	ar7
                                    994 ;	i2c_bit_bang.c:126: for(int j = 0; j < BYTE_LENGTH; j++){
      000220 0D               [12]  995 	inc	r5
      000221 BD 00 BF         [24]  996 	cjne	r5,#0x00,00109$
      000224 0E               [12]  997 	inc	r6
      000225 80 BC            [24]  998 	sjmp	00109$
      000227                        999 00102$:
                                   1000 ;	i2c_bit_bang.c:134: SDA = PULSE_HIGH;
                                   1001 ;	assignBit
      000227 D2 93            [12] 1002 	setb	_P1_3
                                   1003 ;	i2c_bit_bang.c:135: SCL = PULSE_HIGH;
                                   1004 ;	assignBit
      000229 D2 92            [12] 1005 	setb	_P1_2
                                   1006 ;	i2c_bit_bang.c:136: delay(2);
      00022B 90 00 02         [24] 1007 	mov	dptr,#0x0002
      00022E C0 07            [24] 1008 	push	ar7
      000230 12r00r00         [24] 1009 	lcall	_delay
                                   1010 ;	i2c_bit_bang.c:142: SCL = PULSE_LOW;
                                   1011 ;	assignBit
      000233 C2 92            [12] 1012 	clr	_P1_2
                                   1013 ;	i2c_bit_bang.c:143: SDA = PULSE_HIGH;
                                   1014 ;	assignBit
      000235 D2 93            [12] 1015 	setb	_P1_3
                                   1016 ;	i2c_bit_bang.c:144: delay(2);
      000237 90 00 02         [24] 1017 	mov	dptr,#0x0002
      00023A 12r00r00         [24] 1018 	lcall	_delay
                                   1019 ;	i2c_bit_bang.c:145: SCL = PULSE_HIGH;
                                   1020 ;	assignBit
      00023D D2 92            [12] 1021 	setb	_P1_2
                                   1022 ;	i2c_bit_bang.c:146: delay(0);
      00023F 90 00 00         [24] 1023 	mov	dptr,#0x0000
      000242 12r00r00         [24] 1024 	lcall	_delay
                                   1025 ;	i2c_bit_bang.c:147: SDA = PULSE_LOW;
                                   1026 ;	assignBit
      000245 C2 93            [12] 1027 	clr	_P1_3
                                   1028 ;	i2c_bit_bang.c:148: delay(2);
      000247 90 00 02         [24] 1029 	mov	dptr,#0x0002
      00024A 12r00r00         [24] 1030 	lcall	_delay
      00024D D0 07            [24] 1031 	pop	ar7
                                   1032 ;	i2c_bit_bang.c:149: SCL = PULSE_LOW;
                                   1033 ;	assignBit
      00024F C2 92            [12] 1034 	clr	_P1_2
                                   1035 ;	i2c_bit_bang.c:150: byte = START_BYTE | (block << 1) | READ_BYTE;
      000251 43 07 A1         [24] 1036 	orl	ar7,#0xa1
                                   1037 ;	i2c_bit_bang.c:151: for(int i = 0; i < BYTE_LENGTH; i++){
      000254 7D 00            [12] 1038 	mov	r5,#0x00
      000256 7E 00            [12] 1039 	mov	r6,#0x00
      000258                       1040 00112$:
      000258 C3               [12] 1041 	clr	c
      000259 ED               [12] 1042 	mov	a,r5
      00025A 94 08            [12] 1043 	subb	a,#0x08
      00025C EE               [12] 1044 	mov	a,r6
      00025D 64 80            [12] 1045 	xrl	a,#0x80
      00025F 94 80            [12] 1046 	subb	a,#0x80
      000261 50 3C            [24] 1047 	jnc	00103$
                                   1048 ;	i2c_bit_bang.c:152: SDA = byte & (0b10000000);
      000263 EF               [12] 1049 	mov	a,r7
      000264 23               [12] 1050 	rl	a
      000265 54 01            [12] 1051 	anl	a,#0x01
                                   1052 ;	assignBit
      000267 24 FF            [12] 1053 	add	a,#0xff
      000269 92 93            [24] 1054 	mov	_P1_3,c
                                   1055 ;	i2c_bit_bang.c:153: SCL = PULSE_HIGH;
                                   1056 ;	assignBit
      00026B D2 92            [12] 1057 	setb	_P1_2
                                   1058 ;	i2c_bit_bang.c:154: delay(2);
      00026D 90 00 02         [24] 1059 	mov	dptr,#0x0002
      000270 C0 07            [24] 1060 	push	ar7
      000272 C0 06            [24] 1061 	push	ar6
      000274 C0 05            [24] 1062 	push	ar5
      000276 12r00r00         [24] 1063 	lcall	_delay
      000279 D0 05            [24] 1064 	pop	ar5
      00027B D0 06            [24] 1065 	pop	ar6
      00027D D0 07            [24] 1066 	pop	ar7
                                   1067 ;	i2c_bit_bang.c:155: SCL = PULSE_LOW;
                                   1068 ;	assignBit
      00027F C2 92            [12] 1069 	clr	_P1_2
                                   1070 ;	i2c_bit_bang.c:156: byte = byte << 1;
      000281 8F 04            [24] 1071 	mov	ar4,r7
      000283 EC               [12] 1072 	mov	a,r4
      000284 2C               [12] 1073 	add	a,r4
      000285 FF               [12] 1074 	mov	r7,a
                                   1075 ;	i2c_bit_bang.c:157: delay(0);
      000286 90 00 00         [24] 1076 	mov	dptr,#0x0000
      000289 C0 07            [24] 1077 	push	ar7
      00028B C0 06            [24] 1078 	push	ar6
      00028D C0 05            [24] 1079 	push	ar5
      00028F 12r00r00         [24] 1080 	lcall	_delay
      000292 D0 05            [24] 1081 	pop	ar5
      000294 D0 06            [24] 1082 	pop	ar6
      000296 D0 07            [24] 1083 	pop	ar7
                                   1084 ;	i2c_bit_bang.c:151: for(int i = 0; i < BYTE_LENGTH; i++){
      000298 0D               [12] 1085 	inc	r5
      000299 BD 00 BC         [24] 1086 	cjne	r5,#0x00,00112$
      00029C 0E               [12] 1087 	inc	r6
      00029D 80 B9            [24] 1088 	sjmp	00112$
      00029F                       1089 00103$:
                                   1090 ;	i2c_bit_bang.c:159: SDA = PULSE_HIGH;
                                   1091 ;	assignBit
      00029F D2 93            [12] 1092 	setb	_P1_3
                                   1093 ;	i2c_bit_bang.c:160: delay(2);
      0002A1 90 00 02         [24] 1094 	mov	dptr,#0x0002
      0002A4 12r00r00         [24] 1095 	lcall	_delay
                                   1096 ;	i2c_bit_bang.c:166: SCL = PULSE_HIGH;
                                   1097 ;	assignBit
      0002A7 D2 92            [12] 1098 	setb	_P1_2
                                   1099 ;	i2c_bit_bang.c:167: delay(2);
      0002A9 90 00 02         [24] 1100 	mov	dptr,#0x0002
      0002AC 12r00r00         [24] 1101 	lcall	_delay
                                   1102 ;	i2c_bit_bang.c:168: SCL = PULSE_LOW;
                                   1103 ;	assignBit
      0002AF C2 92            [12] 1104 	clr	_P1_2
                                   1105 ;	i2c_bit_bang.c:169: delay(2);
      0002B1 90 00 02         [24] 1106 	mov	dptr,#0x0002
      0002B4 12r00r00         [24] 1107 	lcall	_delay
                                   1108 ;	i2c_bit_bang.c:170: byte = 0;
      0002B7 7F 00            [12] 1109 	mov	r7,#0x00
                                   1110 ;	i2c_bit_bang.c:171: for(int k = 0; k < BYTE_LENGTH; k++){
      0002B9 7D 00            [12] 1111 	mov	r5,#0x00
      0002BB 7E 00            [12] 1112 	mov	r6,#0x00
      0002BD                       1113 00115$:
      0002BD C3               [12] 1114 	clr	c
      0002BE ED               [12] 1115 	mov	a,r5
      0002BF 94 08            [12] 1116 	subb	a,#0x08
      0002C1 EE               [12] 1117 	mov	a,r6
      0002C2 64 80            [12] 1118 	xrl	a,#0x80
      0002C4 94 80            [12] 1119 	subb	a,#0x80
      0002C6 50 3A            [24] 1120 	jnc	00104$
                                   1121 ;	i2c_bit_bang.c:172: byte = byte << 1;
      0002C8 8F 04            [24] 1122 	mov	ar4,r7
      0002CA EC               [12] 1123 	mov	a,r4
      0002CB 2C               [12] 1124 	add	a,r4
      0002CC FC               [12] 1125 	mov	r4,a
                                   1126 ;	i2c_bit_bang.c:173: SCL = PULSE_HIGH;
                                   1127 ;	assignBit
      0002CD D2 92            [12] 1128 	setb	_P1_2
                                   1129 ;	i2c_bit_bang.c:174: delay(2);
      0002CF 90 00 02         [24] 1130 	mov	dptr,#0x0002
      0002D2 C0 06            [24] 1131 	push	ar6
      0002D4 C0 05            [24] 1132 	push	ar5
      0002D6 C0 04            [24] 1133 	push	ar4
      0002D8 12r00r00         [24] 1134 	lcall	_delay
      0002DB D0 04            [24] 1135 	pop	ar4
      0002DD D0 05            [24] 1136 	pop	ar5
      0002DF D0 06            [24] 1137 	pop	ar6
                                   1138 ;	i2c_bit_bang.c:175: byte |= SDA;
      0002E1 A2 93            [12] 1139 	mov	c,_P1_3
      0002E3 E4               [12] 1140 	clr	a
      0002E4 33               [12] 1141 	rlc	a
      0002E5 4C               [12] 1142 	orl	a,r4
      0002E6 FF               [12] 1143 	mov	r7,a
                                   1144 ;	i2c_bit_bang.c:176: SCL = PULSE_LOW;
                                   1145 ;	assignBit
      0002E7 C2 92            [12] 1146 	clr	_P1_2
                                   1147 ;	i2c_bit_bang.c:177: delay(1);
      0002E9 90 00 01         [24] 1148 	mov	dptr,#0x0001
      0002EC C0 07            [24] 1149 	push	ar7
      0002EE C0 06            [24] 1150 	push	ar6
      0002F0 C0 05            [24] 1151 	push	ar5
      0002F2 12r00r00         [24] 1152 	lcall	_delay
      0002F5 D0 05            [24] 1153 	pop	ar5
      0002F7 D0 06            [24] 1154 	pop	ar6
      0002F9 D0 07            [24] 1155 	pop	ar7
                                   1156 ;	i2c_bit_bang.c:171: for(int k = 0; k < BYTE_LENGTH; k++){
      0002FB 0D               [12] 1157 	inc	r5
      0002FC BD 00 BE         [24] 1158 	cjne	r5,#0x00,00115$
      0002FF 0E               [12] 1159 	inc	r6
      000300 80 BB            [24] 1160 	sjmp	00115$
      000302                       1161 00104$:
                                   1162 ;	i2c_bit_bang.c:179: SDA = PULSE_HIGH;
                                   1163 ;	assignBit
      000302 D2 93            [12] 1164 	setb	_P1_3
                                   1165 ;	i2c_bit_bang.c:180: delay(2);
      000304 90 00 02         [24] 1166 	mov	dptr,#0x0002
      000307 C0 07            [24] 1167 	push	ar7
      000309 12r00r00         [24] 1168 	lcall	_delay
                                   1169 ;	i2c_bit_bang.c:181: SCL = PULSE_HIGH;
                                   1170 ;	assignBit
      00030C D2 92            [12] 1171 	setb	_P1_2
                                   1172 ;	i2c_bit_bang.c:182: delay(2);
      00030E 90 00 02         [24] 1173 	mov	dptr,#0x0002
      000311 12r00r00         [24] 1174 	lcall	_delay
                                   1175 ;	i2c_bit_bang.c:183: SCL = PULSE_LOW;
                                   1176 ;	assignBit
      000314 C2 92            [12] 1177 	clr	_P1_2
                                   1178 ;	i2c_bit_bang.c:184: SDA = PULSE_LOW;
                                   1179 ;	assignBit
      000316 C2 93            [12] 1180 	clr	_P1_3
                                   1181 ;	i2c_bit_bang.c:185: delay(2);
      000318 90 00 02         [24] 1182 	mov	dptr,#0x0002
      00031B 12r00r00         [24] 1183 	lcall	_delay
                                   1184 ;	i2c_bit_bang.c:186: SCL = PULSE_HIGH;
                                   1185 ;	assignBit
      00031E D2 92            [12] 1186 	setb	_P1_2
                                   1187 ;	i2c_bit_bang.c:187: delay(2);
      000320 90 00 02         [24] 1188 	mov	dptr,#0x0002
      000323 12r00r00         [24] 1189 	lcall	_delay
                                   1190 ;	i2c_bit_bang.c:188: SDA = PULSE_HIGH;
                                   1191 ;	assignBit
      000326 D2 93            [12] 1192 	setb	_P1_3
                                   1193 ;	i2c_bit_bang.c:189: delay(2);
      000328 90 00 02         [24] 1194 	mov	dptr,#0x0002
      00032B 12r00r00         [24] 1195 	lcall	_delay
                                   1196 ;	i2c_bit_bang.c:190: SCL = PULSE_LOW;
                                   1197 ;	assignBit
      00032E C2 92            [12] 1198 	clr	_P1_2
                                   1199 ;	i2c_bit_bang.c:191: delay(2);
      000330 90 00 02         [24] 1200 	mov	dptr,#0x0002
      000333 12r00r00         [24] 1201 	lcall	_delay
      000336 D0 07            [24] 1202 	pop	ar7
                                   1203 ;	i2c_bit_bang.c:192: return byte;
      000338 8F 82            [24] 1204 	mov	dpl,r7
                                   1205 ;	i2c_bit_bang.c:193: }
      00033A 22               [24] 1206 	ret
                                   1207 ;------------------------------------------------------------
                                   1208 ;Allocation info for local variables in function 'Byte_Read_Sequential'
                                   1209 ;------------------------------------------------------------
                                   1210 ;byte                      Allocated to registers r7 
                                   1211 ;i                         Allocated to registers r5 r6 
                                   1212 ;j                         Allocated to registers r6 r7 
                                   1213 ;i                         Allocated to registers r5 r6 
                                   1214 ;l                         Allocated with name '_Byte_Read_Sequential_l_131073_37'
                                   1215 ;k                         Allocated with name '_Byte_Read_Sequential_k_262145_39'
                                   1216 ;start_address             Allocated with name '_Byte_Read_Sequential_PARM_2'
                                   1217 ;address_range             Allocated with name '_Byte_Read_Sequential_PARM_3'
                                   1218 ;block                     Allocated with name '_Byte_Read_Sequential_block_65536_28'
                                   1219 ;buffer                    Allocated with name '_Byte_Read_Sequential_buffer_65536_29'
                                   1220 ;------------------------------------------------------------
                                   1221 ;	i2c_bit_bang.c:195: __xdata uint8_t * Byte_Read_Sequential(__xdata uint8_t block, __xdata uint8_t start_address,
                                   1222 ;	-----------------------------------------
                                   1223 ;	 function Byte_Read_Sequential
                                   1224 ;	-----------------------------------------
      00033B                       1225 _Byte_Read_Sequential:
      00033B E5 82            [12] 1226 	mov	a,dpl
      00033D 90r00r07         [24] 1227 	mov	dptr,#_Byte_Read_Sequential_block_65536_28
      000340 F0               [24] 1228 	movx	@dptr,a
                                   1229 ;	i2c_bit_bang.c:197: __xdata uint8_t buffer[256] = {0};
      000341 90r00r08         [24] 1230 	mov	dptr,#_Byte_Read_Sequential_buffer_65536_29
      000344 E4               [12] 1231 	clr	a
      000345 F0               [24] 1232 	movx	@dptr,a
      000346 90r00r09         [24] 1233 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0001)
      000349 F0               [24] 1234 	movx	@dptr,a
      00034A 90r00r0A         [24] 1235 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0002)
      00034D F0               [24] 1236 	movx	@dptr,a
      00034E 90r00r0B         [24] 1237 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0003)
      000351 F0               [24] 1238 	movx	@dptr,a
      000352 90r00r0C         [24] 1239 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0004)
      000355 F0               [24] 1240 	movx	@dptr,a
      000356 90r00r0D         [24] 1241 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0005)
      000359 F0               [24] 1242 	movx	@dptr,a
      00035A 90r00r0E         [24] 1243 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0006)
      00035D F0               [24] 1244 	movx	@dptr,a
      00035E 90r00r0F         [24] 1245 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0007)
      000361 F0               [24] 1246 	movx	@dptr,a
      000362 90r00r10         [24] 1247 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0008)
      000365 F0               [24] 1248 	movx	@dptr,a
      000366 90r00r11         [24] 1249 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0009)
      000369 F0               [24] 1250 	movx	@dptr,a
      00036A 90r00r12         [24] 1251 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x000a)
      00036D F0               [24] 1252 	movx	@dptr,a
      00036E 90r00r13         [24] 1253 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x000b)
      000371 F0               [24] 1254 	movx	@dptr,a
      000372 90r00r14         [24] 1255 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x000c)
      000375 F0               [24] 1256 	movx	@dptr,a
      000376 90r00r15         [24] 1257 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x000d)
      000379 F0               [24] 1258 	movx	@dptr,a
      00037A 90r00r16         [24] 1259 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x000e)
      00037D F0               [24] 1260 	movx	@dptr,a
      00037E 90r00r17         [24] 1261 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x000f)
      000381 F0               [24] 1262 	movx	@dptr,a
      000382 90r00r18         [24] 1263 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0010)
      000385 F0               [24] 1264 	movx	@dptr,a
      000386 90r00r19         [24] 1265 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0011)
      000389 F0               [24] 1266 	movx	@dptr,a
      00038A 90r00r1A         [24] 1267 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0012)
      00038D F0               [24] 1268 	movx	@dptr,a
      00038E 90r00r1B         [24] 1269 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0013)
      000391 F0               [24] 1270 	movx	@dptr,a
      000392 90r00r1C         [24] 1271 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0014)
      000395 F0               [24] 1272 	movx	@dptr,a
      000396 90r00r1D         [24] 1273 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0015)
      000399 F0               [24] 1274 	movx	@dptr,a
      00039A 90r00r1E         [24] 1275 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0016)
      00039D F0               [24] 1276 	movx	@dptr,a
      00039E 90r00r1F         [24] 1277 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0017)
      0003A1 F0               [24] 1278 	movx	@dptr,a
      0003A2 90r00r20         [24] 1279 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0018)
      0003A5 F0               [24] 1280 	movx	@dptr,a
      0003A6 90r00r21         [24] 1281 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0019)
      0003A9 F0               [24] 1282 	movx	@dptr,a
      0003AA 90r00r22         [24] 1283 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x001a)
      0003AD F0               [24] 1284 	movx	@dptr,a
      0003AE 90r00r23         [24] 1285 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x001b)
      0003B1 F0               [24] 1286 	movx	@dptr,a
      0003B2 90r00r24         [24] 1287 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x001c)
      0003B5 F0               [24] 1288 	movx	@dptr,a
      0003B6 90r00r25         [24] 1289 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x001d)
      0003B9 F0               [24] 1290 	movx	@dptr,a
      0003BA 90r00r26         [24] 1291 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x001e)
      0003BD F0               [24] 1292 	movx	@dptr,a
      0003BE 90r00r27         [24] 1293 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x001f)
      0003C1 F0               [24] 1294 	movx	@dptr,a
      0003C2 90r00r28         [24] 1295 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0020)
      0003C5 F0               [24] 1296 	movx	@dptr,a
      0003C6 90r00r29         [24] 1297 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0021)
      0003C9 F0               [24] 1298 	movx	@dptr,a
      0003CA 90r00r2A         [24] 1299 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0022)
      0003CD F0               [24] 1300 	movx	@dptr,a
      0003CE 90r00r2B         [24] 1301 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0023)
      0003D1 F0               [24] 1302 	movx	@dptr,a
      0003D2 90r00r2C         [24] 1303 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0024)
      0003D5 F0               [24] 1304 	movx	@dptr,a
      0003D6 90r00r2D         [24] 1305 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0025)
      0003D9 F0               [24] 1306 	movx	@dptr,a
      0003DA 90r00r2E         [24] 1307 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0026)
      0003DD F0               [24] 1308 	movx	@dptr,a
      0003DE 90r00r2F         [24] 1309 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0027)
      0003E1 F0               [24] 1310 	movx	@dptr,a
      0003E2 90r00r30         [24] 1311 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0028)
      0003E5 F0               [24] 1312 	movx	@dptr,a
      0003E6 90r00r31         [24] 1313 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0029)
      0003E9 F0               [24] 1314 	movx	@dptr,a
      0003EA 90r00r32         [24] 1315 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x002a)
      0003ED F0               [24] 1316 	movx	@dptr,a
      0003EE 90r00r33         [24] 1317 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x002b)
      0003F1 F0               [24] 1318 	movx	@dptr,a
      0003F2 90r00r34         [24] 1319 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x002c)
      0003F5 F0               [24] 1320 	movx	@dptr,a
      0003F6 90r00r35         [24] 1321 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x002d)
      0003F9 F0               [24] 1322 	movx	@dptr,a
      0003FA 90r00r36         [24] 1323 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x002e)
      0003FD F0               [24] 1324 	movx	@dptr,a
      0003FE 90r00r37         [24] 1325 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x002f)
      000401 F0               [24] 1326 	movx	@dptr,a
      000402 90r00r38         [24] 1327 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0030)
      000405 F0               [24] 1328 	movx	@dptr,a
      000406 90r00r39         [24] 1329 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0031)
      000409 F0               [24] 1330 	movx	@dptr,a
      00040A 90r00r3A         [24] 1331 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0032)
      00040D F0               [24] 1332 	movx	@dptr,a
      00040E 90r00r3B         [24] 1333 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0033)
      000411 F0               [24] 1334 	movx	@dptr,a
      000412 90r00r3C         [24] 1335 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0034)
      000415 F0               [24] 1336 	movx	@dptr,a
      000416 90r00r3D         [24] 1337 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0035)
      000419 F0               [24] 1338 	movx	@dptr,a
      00041A 90r00r3E         [24] 1339 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0036)
      00041D F0               [24] 1340 	movx	@dptr,a
      00041E 90r00r3F         [24] 1341 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0037)
      000421 F0               [24] 1342 	movx	@dptr,a
      000422 90r00r40         [24] 1343 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0038)
      000425 F0               [24] 1344 	movx	@dptr,a
      000426 90r00r41         [24] 1345 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0039)
      000429 F0               [24] 1346 	movx	@dptr,a
      00042A 90r00r42         [24] 1347 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x003a)
      00042D F0               [24] 1348 	movx	@dptr,a
      00042E 90r00r43         [24] 1349 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x003b)
      000431 F0               [24] 1350 	movx	@dptr,a
      000432 90r00r44         [24] 1351 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x003c)
      000435 F0               [24] 1352 	movx	@dptr,a
      000436 90r00r45         [24] 1353 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x003d)
      000439 F0               [24] 1354 	movx	@dptr,a
      00043A 90r00r46         [24] 1355 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x003e)
      00043D F0               [24] 1356 	movx	@dptr,a
      00043E 90r00r47         [24] 1357 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x003f)
      000441 F0               [24] 1358 	movx	@dptr,a
      000442 90r00r48         [24] 1359 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0040)
      000445 F0               [24] 1360 	movx	@dptr,a
      000446 90r00r49         [24] 1361 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0041)
      000449 F0               [24] 1362 	movx	@dptr,a
      00044A 90r00r4A         [24] 1363 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0042)
      00044D F0               [24] 1364 	movx	@dptr,a
      00044E 90r00r4B         [24] 1365 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0043)
      000451 F0               [24] 1366 	movx	@dptr,a
      000452 90r00r4C         [24] 1367 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0044)
      000455 F0               [24] 1368 	movx	@dptr,a
      000456 90r00r4D         [24] 1369 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0045)
      000459 F0               [24] 1370 	movx	@dptr,a
      00045A 90r00r4E         [24] 1371 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0046)
      00045D F0               [24] 1372 	movx	@dptr,a
      00045E 90r00r4F         [24] 1373 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0047)
      000461 F0               [24] 1374 	movx	@dptr,a
      000462 90r00r50         [24] 1375 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0048)
      000465 F0               [24] 1376 	movx	@dptr,a
      000466 90r00r51         [24] 1377 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0049)
      000469 F0               [24] 1378 	movx	@dptr,a
      00046A 90r00r52         [24] 1379 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x004a)
      00046D F0               [24] 1380 	movx	@dptr,a
      00046E 90r00r53         [24] 1381 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x004b)
      000471 F0               [24] 1382 	movx	@dptr,a
      000472 90r00r54         [24] 1383 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x004c)
      000475 F0               [24] 1384 	movx	@dptr,a
      000476 90r00r55         [24] 1385 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x004d)
      000479 F0               [24] 1386 	movx	@dptr,a
      00047A 90r00r56         [24] 1387 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x004e)
      00047D F0               [24] 1388 	movx	@dptr,a
      00047E 90r00r57         [24] 1389 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x004f)
      000481 F0               [24] 1390 	movx	@dptr,a
      000482 90r00r58         [24] 1391 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0050)
      000485 F0               [24] 1392 	movx	@dptr,a
      000486 90r00r59         [24] 1393 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0051)
      000489 F0               [24] 1394 	movx	@dptr,a
      00048A 90r00r5A         [24] 1395 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0052)
      00048D F0               [24] 1396 	movx	@dptr,a
      00048E 90r00r5B         [24] 1397 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0053)
      000491 F0               [24] 1398 	movx	@dptr,a
      000492 90r00r5C         [24] 1399 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0054)
      000495 F0               [24] 1400 	movx	@dptr,a
      000496 90r00r5D         [24] 1401 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0055)
      000499 F0               [24] 1402 	movx	@dptr,a
      00049A 90r00r5E         [24] 1403 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0056)
      00049D F0               [24] 1404 	movx	@dptr,a
      00049E 90r00r5F         [24] 1405 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0057)
      0004A1 F0               [24] 1406 	movx	@dptr,a
      0004A2 90r00r60         [24] 1407 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0058)
      0004A5 F0               [24] 1408 	movx	@dptr,a
      0004A6 90r00r61         [24] 1409 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0059)
      0004A9 F0               [24] 1410 	movx	@dptr,a
      0004AA 90r00r62         [24] 1411 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x005a)
      0004AD F0               [24] 1412 	movx	@dptr,a
      0004AE 90r00r63         [24] 1413 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x005b)
      0004B1 F0               [24] 1414 	movx	@dptr,a
      0004B2 90r00r64         [24] 1415 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x005c)
      0004B5 F0               [24] 1416 	movx	@dptr,a
      0004B6 90r00r65         [24] 1417 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x005d)
      0004B9 F0               [24] 1418 	movx	@dptr,a
      0004BA 90r00r66         [24] 1419 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x005e)
      0004BD F0               [24] 1420 	movx	@dptr,a
      0004BE 90r00r67         [24] 1421 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x005f)
      0004C1 F0               [24] 1422 	movx	@dptr,a
      0004C2 90r00r68         [24] 1423 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0060)
      0004C5 F0               [24] 1424 	movx	@dptr,a
      0004C6 90r00r69         [24] 1425 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0061)
      0004C9 F0               [24] 1426 	movx	@dptr,a
      0004CA 90r00r6A         [24] 1427 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0062)
      0004CD F0               [24] 1428 	movx	@dptr,a
      0004CE 90r00r6B         [24] 1429 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0063)
      0004D1 F0               [24] 1430 	movx	@dptr,a
      0004D2 90r00r6C         [24] 1431 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0064)
      0004D5 F0               [24] 1432 	movx	@dptr,a
      0004D6 90r00r6D         [24] 1433 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0065)
      0004D9 F0               [24] 1434 	movx	@dptr,a
      0004DA 90r00r6E         [24] 1435 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0066)
      0004DD F0               [24] 1436 	movx	@dptr,a
      0004DE 90r00r6F         [24] 1437 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0067)
      0004E1 F0               [24] 1438 	movx	@dptr,a
      0004E2 90r00r70         [24] 1439 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0068)
      0004E5 F0               [24] 1440 	movx	@dptr,a
      0004E6 90r00r71         [24] 1441 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0069)
      0004E9 F0               [24] 1442 	movx	@dptr,a
      0004EA 90r00r72         [24] 1443 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x006a)
      0004ED F0               [24] 1444 	movx	@dptr,a
      0004EE 90r00r73         [24] 1445 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x006b)
      0004F1 F0               [24] 1446 	movx	@dptr,a
      0004F2 90r00r74         [24] 1447 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x006c)
      0004F5 F0               [24] 1448 	movx	@dptr,a
      0004F6 90r00r75         [24] 1449 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x006d)
      0004F9 F0               [24] 1450 	movx	@dptr,a
      0004FA 90r00r76         [24] 1451 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x006e)
      0004FD F0               [24] 1452 	movx	@dptr,a
      0004FE 90r00r77         [24] 1453 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x006f)
      000501 F0               [24] 1454 	movx	@dptr,a
      000502 90r00r78         [24] 1455 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0070)
      000505 F0               [24] 1456 	movx	@dptr,a
      000506 90r00r79         [24] 1457 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0071)
      000509 F0               [24] 1458 	movx	@dptr,a
      00050A 90r00r7A         [24] 1459 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0072)
      00050D F0               [24] 1460 	movx	@dptr,a
      00050E 90r00r7B         [24] 1461 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0073)
      000511 F0               [24] 1462 	movx	@dptr,a
      000512 90r00r7C         [24] 1463 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0074)
      000515 F0               [24] 1464 	movx	@dptr,a
      000516 90r00r7D         [24] 1465 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0075)
      000519 F0               [24] 1466 	movx	@dptr,a
      00051A 90r00r7E         [24] 1467 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0076)
      00051D F0               [24] 1468 	movx	@dptr,a
      00051E 90r00r7F         [24] 1469 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0077)
      000521 F0               [24] 1470 	movx	@dptr,a
      000522 90r00r80         [24] 1471 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0078)
      000525 F0               [24] 1472 	movx	@dptr,a
      000526 90r00r81         [24] 1473 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0079)
      000529 F0               [24] 1474 	movx	@dptr,a
      00052A 90r00r82         [24] 1475 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x007a)
      00052D F0               [24] 1476 	movx	@dptr,a
      00052E 90r00r83         [24] 1477 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x007b)
      000531 F0               [24] 1478 	movx	@dptr,a
      000532 90r00r84         [24] 1479 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x007c)
      000535 F0               [24] 1480 	movx	@dptr,a
      000536 90r00r85         [24] 1481 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x007d)
      000539 F0               [24] 1482 	movx	@dptr,a
      00053A 90r00r86         [24] 1483 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x007e)
      00053D F0               [24] 1484 	movx	@dptr,a
      00053E 90r00r87         [24] 1485 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x007f)
      000541 F0               [24] 1486 	movx	@dptr,a
      000542 90r00r88         [24] 1487 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0080)
      000545 F0               [24] 1488 	movx	@dptr,a
      000546 90r00r89         [24] 1489 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0081)
      000549 F0               [24] 1490 	movx	@dptr,a
      00054A 90r00r8A         [24] 1491 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0082)
      00054D F0               [24] 1492 	movx	@dptr,a
      00054E 90r00r8B         [24] 1493 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0083)
      000551 F0               [24] 1494 	movx	@dptr,a
      000552 90r00r8C         [24] 1495 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0084)
      000555 F0               [24] 1496 	movx	@dptr,a
      000556 90r00r8D         [24] 1497 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0085)
      000559 F0               [24] 1498 	movx	@dptr,a
      00055A 90r00r8E         [24] 1499 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0086)
      00055D F0               [24] 1500 	movx	@dptr,a
      00055E 90r00r8F         [24] 1501 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0087)
      000561 F0               [24] 1502 	movx	@dptr,a
      000562 90r00r90         [24] 1503 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0088)
      000565 F0               [24] 1504 	movx	@dptr,a
      000566 90r00r91         [24] 1505 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0089)
      000569 F0               [24] 1506 	movx	@dptr,a
      00056A 90r00r92         [24] 1507 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x008a)
      00056D F0               [24] 1508 	movx	@dptr,a
      00056E 90r00r93         [24] 1509 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x008b)
      000571 F0               [24] 1510 	movx	@dptr,a
      000572 90r00r94         [24] 1511 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x008c)
      000575 F0               [24] 1512 	movx	@dptr,a
      000576 90r00r95         [24] 1513 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x008d)
      000579 F0               [24] 1514 	movx	@dptr,a
      00057A 90r00r96         [24] 1515 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x008e)
      00057D F0               [24] 1516 	movx	@dptr,a
      00057E 90r00r97         [24] 1517 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x008f)
      000581 F0               [24] 1518 	movx	@dptr,a
      000582 90r00r98         [24] 1519 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0090)
      000585 F0               [24] 1520 	movx	@dptr,a
      000586 90r00r99         [24] 1521 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0091)
      000589 F0               [24] 1522 	movx	@dptr,a
      00058A 90r00r9A         [24] 1523 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0092)
      00058D F0               [24] 1524 	movx	@dptr,a
      00058E 90r00r9B         [24] 1525 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0093)
      000591 F0               [24] 1526 	movx	@dptr,a
      000592 90r00r9C         [24] 1527 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0094)
      000595 F0               [24] 1528 	movx	@dptr,a
      000596 90r00r9D         [24] 1529 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0095)
      000599 F0               [24] 1530 	movx	@dptr,a
      00059A 90r00r9E         [24] 1531 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0096)
      00059D F0               [24] 1532 	movx	@dptr,a
      00059E 90r00r9F         [24] 1533 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0097)
      0005A1 F0               [24] 1534 	movx	@dptr,a
      0005A2 90r00rA0         [24] 1535 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0098)
      0005A5 F0               [24] 1536 	movx	@dptr,a
      0005A6 90r00rA1         [24] 1537 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x0099)
      0005A9 F0               [24] 1538 	movx	@dptr,a
      0005AA 90r00rA2         [24] 1539 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x009a)
      0005AD F0               [24] 1540 	movx	@dptr,a
      0005AE 90r00rA3         [24] 1541 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x009b)
      0005B1 F0               [24] 1542 	movx	@dptr,a
      0005B2 90r00rA4         [24] 1543 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x009c)
      0005B5 F0               [24] 1544 	movx	@dptr,a
      0005B6 90r00rA5         [24] 1545 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x009d)
      0005B9 F0               [24] 1546 	movx	@dptr,a
      0005BA 90r00rA6         [24] 1547 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x009e)
      0005BD F0               [24] 1548 	movx	@dptr,a
      0005BE 90r00rA7         [24] 1549 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x009f)
      0005C1 F0               [24] 1550 	movx	@dptr,a
      0005C2 90r00rA8         [24] 1551 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a0)
      0005C5 F0               [24] 1552 	movx	@dptr,a
      0005C6 90r00rA9         [24] 1553 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a1)
      0005C9 F0               [24] 1554 	movx	@dptr,a
      0005CA 90r00rAA         [24] 1555 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a2)
      0005CD F0               [24] 1556 	movx	@dptr,a
      0005CE 90r00rAB         [24] 1557 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a3)
      0005D1 F0               [24] 1558 	movx	@dptr,a
      0005D2 90r00rAC         [24] 1559 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a4)
      0005D5 F0               [24] 1560 	movx	@dptr,a
      0005D6 90r00rAD         [24] 1561 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a5)
      0005D9 F0               [24] 1562 	movx	@dptr,a
      0005DA 90r00rAE         [24] 1563 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a6)
      0005DD F0               [24] 1564 	movx	@dptr,a
      0005DE 90r00rAF         [24] 1565 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a7)
      0005E1 F0               [24] 1566 	movx	@dptr,a
      0005E2 90r00rB0         [24] 1567 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a8)
      0005E5 F0               [24] 1568 	movx	@dptr,a
      0005E6 90r00rB1         [24] 1569 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00a9)
      0005E9 F0               [24] 1570 	movx	@dptr,a
      0005EA 90r00rB2         [24] 1571 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00aa)
      0005ED F0               [24] 1572 	movx	@dptr,a
      0005EE 90r00rB3         [24] 1573 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ab)
      0005F1 F0               [24] 1574 	movx	@dptr,a
      0005F2 90r00rB4         [24] 1575 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ac)
      0005F5 F0               [24] 1576 	movx	@dptr,a
      0005F6 90r00rB5         [24] 1577 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ad)
      0005F9 F0               [24] 1578 	movx	@dptr,a
      0005FA 90r00rB6         [24] 1579 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ae)
      0005FD F0               [24] 1580 	movx	@dptr,a
      0005FE 90r00rB7         [24] 1581 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00af)
      000601 F0               [24] 1582 	movx	@dptr,a
      000602 90r00rB8         [24] 1583 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b0)
      000605 F0               [24] 1584 	movx	@dptr,a
      000606 90r00rB9         [24] 1585 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b1)
      000609 F0               [24] 1586 	movx	@dptr,a
      00060A 90r00rBA         [24] 1587 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b2)
      00060D F0               [24] 1588 	movx	@dptr,a
      00060E 90r00rBB         [24] 1589 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b3)
      000611 F0               [24] 1590 	movx	@dptr,a
      000612 90r00rBC         [24] 1591 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b4)
      000615 F0               [24] 1592 	movx	@dptr,a
      000616 90r00rBD         [24] 1593 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b5)
      000619 F0               [24] 1594 	movx	@dptr,a
      00061A 90r00rBE         [24] 1595 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b6)
      00061D F0               [24] 1596 	movx	@dptr,a
      00061E 90r00rBF         [24] 1597 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b7)
      000621 F0               [24] 1598 	movx	@dptr,a
      000622 90r00rC0         [24] 1599 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b8)
      000625 F0               [24] 1600 	movx	@dptr,a
      000626 90r00rC1         [24] 1601 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00b9)
      000629 F0               [24] 1602 	movx	@dptr,a
      00062A 90r00rC2         [24] 1603 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ba)
      00062D F0               [24] 1604 	movx	@dptr,a
      00062E 90r00rC3         [24] 1605 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00bb)
      000631 F0               [24] 1606 	movx	@dptr,a
      000632 90r00rC4         [24] 1607 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00bc)
      000635 F0               [24] 1608 	movx	@dptr,a
      000636 90r00rC5         [24] 1609 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00bd)
      000639 F0               [24] 1610 	movx	@dptr,a
      00063A 90r00rC6         [24] 1611 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00be)
      00063D F0               [24] 1612 	movx	@dptr,a
      00063E 90r00rC7         [24] 1613 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00bf)
      000641 F0               [24] 1614 	movx	@dptr,a
      000642 90r00rC8         [24] 1615 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c0)
      000645 F0               [24] 1616 	movx	@dptr,a
      000646 90r00rC9         [24] 1617 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c1)
      000649 F0               [24] 1618 	movx	@dptr,a
      00064A 90r00rCA         [24] 1619 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c2)
      00064D F0               [24] 1620 	movx	@dptr,a
      00064E 90r00rCB         [24] 1621 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c3)
      000651 F0               [24] 1622 	movx	@dptr,a
      000652 90r00rCC         [24] 1623 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c4)
      000655 F0               [24] 1624 	movx	@dptr,a
      000656 90r00rCD         [24] 1625 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c5)
      000659 F0               [24] 1626 	movx	@dptr,a
      00065A 90r00rCE         [24] 1627 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c6)
      00065D F0               [24] 1628 	movx	@dptr,a
      00065E 90r00rCF         [24] 1629 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c7)
      000661 F0               [24] 1630 	movx	@dptr,a
      000662 90r00rD0         [24] 1631 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c8)
      000665 F0               [24] 1632 	movx	@dptr,a
      000666 90r00rD1         [24] 1633 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00c9)
      000669 F0               [24] 1634 	movx	@dptr,a
      00066A 90r00rD2         [24] 1635 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ca)
      00066D F0               [24] 1636 	movx	@dptr,a
      00066E 90r00rD3         [24] 1637 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00cb)
      000671 F0               [24] 1638 	movx	@dptr,a
      000672 90r00rD4         [24] 1639 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00cc)
      000675 F0               [24] 1640 	movx	@dptr,a
      000676 90r00rD5         [24] 1641 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00cd)
      000679 F0               [24] 1642 	movx	@dptr,a
      00067A 90r00rD6         [24] 1643 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ce)
      00067D F0               [24] 1644 	movx	@dptr,a
      00067E 90r00rD7         [24] 1645 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00cf)
      000681 F0               [24] 1646 	movx	@dptr,a
      000682 90r00rD8         [24] 1647 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d0)
      000685 F0               [24] 1648 	movx	@dptr,a
      000686 90r00rD9         [24] 1649 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d1)
      000689 F0               [24] 1650 	movx	@dptr,a
      00068A 90r00rDA         [24] 1651 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d2)
      00068D F0               [24] 1652 	movx	@dptr,a
      00068E 90r00rDB         [24] 1653 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d3)
      000691 F0               [24] 1654 	movx	@dptr,a
      000692 90r00rDC         [24] 1655 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d4)
      000695 F0               [24] 1656 	movx	@dptr,a
      000696 90r00rDD         [24] 1657 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d5)
      000699 F0               [24] 1658 	movx	@dptr,a
      00069A 90r00rDE         [24] 1659 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d6)
      00069D F0               [24] 1660 	movx	@dptr,a
      00069E 90r00rDF         [24] 1661 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d7)
      0006A1 F0               [24] 1662 	movx	@dptr,a
      0006A2 90r00rE0         [24] 1663 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d8)
      0006A5 F0               [24] 1664 	movx	@dptr,a
      0006A6 90r00rE1         [24] 1665 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00d9)
      0006A9 F0               [24] 1666 	movx	@dptr,a
      0006AA 90r00rE2         [24] 1667 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00da)
      0006AD F0               [24] 1668 	movx	@dptr,a
      0006AE 90r00rE3         [24] 1669 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00db)
      0006B1 F0               [24] 1670 	movx	@dptr,a
      0006B2 90r00rE4         [24] 1671 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00dc)
      0006B5 F0               [24] 1672 	movx	@dptr,a
      0006B6 90r00rE5         [24] 1673 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00dd)
      0006B9 F0               [24] 1674 	movx	@dptr,a
      0006BA 90r00rE6         [24] 1675 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00de)
      0006BD F0               [24] 1676 	movx	@dptr,a
      0006BE 90r00rE7         [24] 1677 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00df)
      0006C1 F0               [24] 1678 	movx	@dptr,a
      0006C2 90r00rE8         [24] 1679 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e0)
      0006C5 F0               [24] 1680 	movx	@dptr,a
      0006C6 90r00rE9         [24] 1681 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e1)
      0006C9 F0               [24] 1682 	movx	@dptr,a
      0006CA 90r00rEA         [24] 1683 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e2)
      0006CD F0               [24] 1684 	movx	@dptr,a
      0006CE 90r00rEB         [24] 1685 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e3)
      0006D1 F0               [24] 1686 	movx	@dptr,a
      0006D2 90r00rEC         [24] 1687 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e4)
      0006D5 F0               [24] 1688 	movx	@dptr,a
      0006D6 90r00rED         [24] 1689 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e5)
      0006D9 F0               [24] 1690 	movx	@dptr,a
      0006DA 90r00rEE         [24] 1691 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e6)
      0006DD F0               [24] 1692 	movx	@dptr,a
      0006DE 90r00rEF         [24] 1693 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e7)
      0006E1 F0               [24] 1694 	movx	@dptr,a
      0006E2 90r00rF0         [24] 1695 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e8)
      0006E5 F0               [24] 1696 	movx	@dptr,a
      0006E6 90r00rF1         [24] 1697 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00e9)
      0006E9 F0               [24] 1698 	movx	@dptr,a
      0006EA 90r00rF2         [24] 1699 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ea)
      0006ED F0               [24] 1700 	movx	@dptr,a
      0006EE 90r00rF3         [24] 1701 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00eb)
      0006F1 F0               [24] 1702 	movx	@dptr,a
      0006F2 90r00rF4         [24] 1703 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ec)
      0006F5 F0               [24] 1704 	movx	@dptr,a
      0006F6 90r00rF5         [24] 1705 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ed)
      0006F9 F0               [24] 1706 	movx	@dptr,a
      0006FA 90r00rF6         [24] 1707 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ee)
      0006FD F0               [24] 1708 	movx	@dptr,a
      0006FE 90r00rF7         [24] 1709 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ef)
      000701 F0               [24] 1710 	movx	@dptr,a
      000702 90r00rF8         [24] 1711 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f0)
      000705 F0               [24] 1712 	movx	@dptr,a
      000706 90r00rF9         [24] 1713 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f1)
      000709 F0               [24] 1714 	movx	@dptr,a
      00070A 90r00rFA         [24] 1715 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f2)
      00070D F0               [24] 1716 	movx	@dptr,a
      00070E 90r00rFB         [24] 1717 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f3)
      000711 F0               [24] 1718 	movx	@dptr,a
      000712 90r00rFC         [24] 1719 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f4)
      000715 F0               [24] 1720 	movx	@dptr,a
      000716 90r00rFD         [24] 1721 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f5)
      000719 F0               [24] 1722 	movx	@dptr,a
      00071A 90r00rFE         [24] 1723 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f6)
      00071D F0               [24] 1724 	movx	@dptr,a
      00071E 90r00rFF         [24] 1725 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f7)
      000721 F0               [24] 1726 	movx	@dptr,a
      000722 90r01r00         [24] 1727 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f8)
      000725 F0               [24] 1728 	movx	@dptr,a
      000726 90r01r01         [24] 1729 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00f9)
      000729 F0               [24] 1730 	movx	@dptr,a
      00072A 90r01r02         [24] 1731 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00fa)
      00072D F0               [24] 1732 	movx	@dptr,a
      00072E 90r01r03         [24] 1733 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00fb)
      000731 F0               [24] 1734 	movx	@dptr,a
      000732 90r01r04         [24] 1735 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00fc)
      000735 F0               [24] 1736 	movx	@dptr,a
      000736 90r01r05         [24] 1737 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00fd)
      000739 F0               [24] 1738 	movx	@dptr,a
      00073A 90r01r06         [24] 1739 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00fe)
      00073D F0               [24] 1740 	movx	@dptr,a
      00073E 90r01r07         [24] 1741 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_29 + 0x00ff)
      000741 F0               [24] 1742 	movx	@dptr,a
                                   1743 ;	i2c_bit_bang.c:198: SCL = PULSE_HIGH;
                                   1744 ;	assignBit
      000742 D2 92            [12] 1745 	setb	_P1_2
                                   1746 ;	i2c_bit_bang.c:199: SDA = PULSE_HIGH;
                                   1747 ;	assignBit
      000744 D2 93            [12] 1748 	setb	_P1_3
                                   1749 ;	i2c_bit_bang.c:200: delay(2);
      000746 90 00 02         [24] 1750 	mov	dptr,#0x0002
      000749 12r00r00         [24] 1751 	lcall	_delay
                                   1752 ;	i2c_bit_bang.c:201: SDA = PULSE_LOW;
                                   1753 ;	assignBit
      00074C C2 93            [12] 1754 	clr	_P1_3
                                   1755 ;	i2c_bit_bang.c:202: delay(2);
      00074E 90 00 02         [24] 1756 	mov	dptr,#0x0002
      000751 12r00r00         [24] 1757 	lcall	_delay
                                   1758 ;	i2c_bit_bang.c:203: SCL = PULSE_LOW;
                                   1759 ;	assignBit
      000754 C2 92            [12] 1760 	clr	_P1_2
                                   1761 ;	i2c_bit_bang.c:204: uint8_t byte = START_BYTE | (block << 1) | WRITE_BYTE;
      000756 90r00r07         [24] 1762 	mov	dptr,#_Byte_Read_Sequential_block_65536_28
      000759 E0               [24] 1763 	movx	a,@dptr
      00075A 25 E0            [12] 1764 	add	a,acc
      00075C FF               [12] 1765 	mov	r7,a
      00075D 43 07 A0         [24] 1766 	orl	ar7,#0xa0
                                   1767 ;	i2c_bit_bang.c:205: for(int i = 0; i < BYTE_LENGTH; i++){
      000760 7D 00            [12] 1768 	mov	r5,#0x00
      000762 7E 00            [12] 1769 	mov	r6,#0x00
      000764                       1770 00109$:
      000764 C3               [12] 1771 	clr	c
      000765 ED               [12] 1772 	mov	a,r5
      000766 94 08            [12] 1773 	subb	a,#0x08
      000768 EE               [12] 1774 	mov	a,r6
      000769 64 80            [12] 1775 	xrl	a,#0x80
      00076B 94 80            [12] 1776 	subb	a,#0x80
      00076D 50 3C            [24] 1777 	jnc	00101$
                                   1778 ;	i2c_bit_bang.c:206: SDA = byte & (0b10000000);
      00076F EF               [12] 1779 	mov	a,r7
      000770 23               [12] 1780 	rl	a
      000771 54 01            [12] 1781 	anl	a,#0x01
                                   1782 ;	assignBit
      000773 24 FF            [12] 1783 	add	a,#0xff
      000775 92 93            [24] 1784 	mov	_P1_3,c
                                   1785 ;	i2c_bit_bang.c:207: SCL = PULSE_HIGH;
                                   1786 ;	assignBit
      000777 D2 92            [12] 1787 	setb	_P1_2
                                   1788 ;	i2c_bit_bang.c:208: delay(2);
      000779 90 00 02         [24] 1789 	mov	dptr,#0x0002
      00077C C0 07            [24] 1790 	push	ar7
      00077E C0 06            [24] 1791 	push	ar6
      000780 C0 05            [24] 1792 	push	ar5
      000782 12r00r00         [24] 1793 	lcall	_delay
      000785 D0 05            [24] 1794 	pop	ar5
      000787 D0 06            [24] 1795 	pop	ar6
      000789 D0 07            [24] 1796 	pop	ar7
                                   1797 ;	i2c_bit_bang.c:209: SCL = PULSE_LOW;
                                   1798 ;	assignBit
      00078B C2 92            [12] 1799 	clr	_P1_2
                                   1800 ;	i2c_bit_bang.c:210: byte = byte << 1;
      00078D 8F 04            [24] 1801 	mov	ar4,r7
      00078F EC               [12] 1802 	mov	a,r4
      000790 2C               [12] 1803 	add	a,r4
      000791 FF               [12] 1804 	mov	r7,a
                                   1805 ;	i2c_bit_bang.c:211: delay(0);
      000792 90 00 00         [24] 1806 	mov	dptr,#0x0000
      000795 C0 07            [24] 1807 	push	ar7
      000797 C0 06            [24] 1808 	push	ar6
      000799 C0 05            [24] 1809 	push	ar5
      00079B 12r00r00         [24] 1810 	lcall	_delay
      00079E D0 05            [24] 1811 	pop	ar5
      0007A0 D0 06            [24] 1812 	pop	ar6
      0007A2 D0 07            [24] 1813 	pop	ar7
                                   1814 ;	i2c_bit_bang.c:205: for(int i = 0; i < BYTE_LENGTH; i++){
      0007A4 0D               [12] 1815 	inc	r5
      0007A5 BD 00 BC         [24] 1816 	cjne	r5,#0x00,00109$
      0007A8 0E               [12] 1817 	inc	r6
      0007A9 80 B9            [24] 1818 	sjmp	00109$
      0007AB                       1819 00101$:
                                   1820 ;	i2c_bit_bang.c:213: SDA = PULSE_HIGH;
                                   1821 ;	assignBit
      0007AB D2 93            [12] 1822 	setb	_P1_3
                                   1823 ;	i2c_bit_bang.c:214: SCL = PULSE_HIGH;
                                   1824 ;	assignBit
      0007AD D2 92            [12] 1825 	setb	_P1_2
                                   1826 ;	i2c_bit_bang.c:215: delay(3);
      0007AF 90 00 03         [24] 1827 	mov	dptr,#0x0003
      0007B2 12r00r00         [24] 1828 	lcall	_delay
                                   1829 ;	i2c_bit_bang.c:221: SCL = PULSE_LOW;
                                   1830 ;	assignBit
      0007B5 C2 92            [12] 1831 	clr	_P1_2
                                   1832 ;	i2c_bit_bang.c:222: delay(0);
      0007B7 90 00 00         [24] 1833 	mov	dptr,#0x0000
      0007BA 12r00r00         [24] 1834 	lcall	_delay
                                   1835 ;	i2c_bit_bang.c:223: for(int j = 0; j < BYTE_LENGTH; j++){
      0007BD 7E 00            [12] 1836 	mov	r6,#0x00
      0007BF 7F 00            [12] 1837 	mov	r7,#0x00
      0007C1                       1838 00112$:
      0007C1 C3               [12] 1839 	clr	c
      0007C2 EE               [12] 1840 	mov	a,r6
      0007C3 94 08            [12] 1841 	subb	a,#0x08
      0007C5 EF               [12] 1842 	mov	a,r7
      0007C6 64 80            [12] 1843 	xrl	a,#0x80
      0007C8 94 80            [12] 1844 	subb	a,#0x80
      0007CA 50 35            [24] 1845 	jnc	00102$
                                   1846 ;	i2c_bit_bang.c:224: SDA = start_address & (0b10000000);
      0007CC 90r00r05         [24] 1847 	mov	dptr,#_Byte_Read_Sequential_PARM_2
      0007CF E0               [24] 1848 	movx	a,@dptr
      0007D0 FD               [12] 1849 	mov	r5,a
      0007D1 23               [12] 1850 	rl	a
      0007D2 54 01            [12] 1851 	anl	a,#0x01
                                   1852 ;	assignBit
      0007D4 24 FF            [12] 1853 	add	a,#0xff
      0007D6 92 93            [24] 1854 	mov	_P1_3,c
                                   1855 ;	i2c_bit_bang.c:225: SCL = PULSE_HIGH;
                                   1856 ;	assignBit
      0007D8 D2 92            [12] 1857 	setb	_P1_2
                                   1858 ;	i2c_bit_bang.c:226: delay(2);
      0007DA 90 00 02         [24] 1859 	mov	dptr,#0x0002
      0007DD C0 07            [24] 1860 	push	ar7
      0007DF C0 06            [24] 1861 	push	ar6
      0007E1 C0 05            [24] 1862 	push	ar5
      0007E3 12r00r00         [24] 1863 	lcall	_delay
      0007E6 D0 05            [24] 1864 	pop	ar5
                                   1865 ;	i2c_bit_bang.c:227: SCL = PULSE_LOW;
                                   1866 ;	assignBit
      0007E8 C2 92            [12] 1867 	clr	_P1_2
                                   1868 ;	i2c_bit_bang.c:228: start_address = start_address << 1;
      0007EA ED               [12] 1869 	mov	a,r5
      0007EB 2D               [12] 1870 	add	a,r5
      0007EC 90r00r05         [24] 1871 	mov	dptr,#_Byte_Read_Sequential_PARM_2
      0007EF F0               [24] 1872 	movx	@dptr,a
                                   1873 ;	i2c_bit_bang.c:229: delay(0);
      0007F0 90 00 00         [24] 1874 	mov	dptr,#0x0000
      0007F3 12r00r00         [24] 1875 	lcall	_delay
      0007F6 D0 06            [24] 1876 	pop	ar6
      0007F8 D0 07            [24] 1877 	pop	ar7
                                   1878 ;	i2c_bit_bang.c:223: for(int j = 0; j < BYTE_LENGTH; j++){
      0007FA 0E               [12] 1879 	inc	r6
      0007FB BE 00 C3         [24] 1880 	cjne	r6,#0x00,00112$
      0007FE 0F               [12] 1881 	inc	r7
      0007FF 80 C0            [24] 1882 	sjmp	00112$
      000801                       1883 00102$:
                                   1884 ;	i2c_bit_bang.c:231: SDA = PULSE_HIGH;
                                   1885 ;	assignBit
      000801 D2 93            [12] 1886 	setb	_P1_3
                                   1887 ;	i2c_bit_bang.c:232: SCL = PULSE_HIGH;
                                   1888 ;	assignBit
      000803 D2 92            [12] 1889 	setb	_P1_2
                                   1890 ;	i2c_bit_bang.c:233: delay(2);
      000805 90 00 02         [24] 1891 	mov	dptr,#0x0002
      000808 12r00r00         [24] 1892 	lcall	_delay
                                   1893 ;	i2c_bit_bang.c:239: SCL = PULSE_LOW;
                                   1894 ;	assignBit
      00080B C2 92            [12] 1895 	clr	_P1_2
                                   1896 ;	i2c_bit_bang.c:240: SDA = PULSE_HIGH;
                                   1897 ;	assignBit
      00080D D2 93            [12] 1898 	setb	_P1_3
                                   1899 ;	i2c_bit_bang.c:241: delay(2);
      00080F 90 00 02         [24] 1900 	mov	dptr,#0x0002
      000812 12r00r00         [24] 1901 	lcall	_delay
                                   1902 ;	i2c_bit_bang.c:242: SCL = PULSE_HIGH;
                                   1903 ;	assignBit
      000815 D2 92            [12] 1904 	setb	_P1_2
                                   1905 ;	i2c_bit_bang.c:243: delay(0);
      000817 90 00 00         [24] 1906 	mov	dptr,#0x0000
      00081A 12r00r00         [24] 1907 	lcall	_delay
                                   1908 ;	i2c_bit_bang.c:244: SDA = PULSE_LOW;
                                   1909 ;	assignBit
      00081D C2 93            [12] 1910 	clr	_P1_3
                                   1911 ;	i2c_bit_bang.c:245: delay(2);
      00081F 90 00 02         [24] 1912 	mov	dptr,#0x0002
      000822 12r00r00         [24] 1913 	lcall	_delay
                                   1914 ;	i2c_bit_bang.c:246: SCL = PULSE_LOW;
                                   1915 ;	assignBit
      000825 C2 92            [12] 1916 	clr	_P1_2
                                   1917 ;	i2c_bit_bang.c:247: byte = START_BYTE | (block << 1) | READ_BYTE;
      000827 90r00r07         [24] 1918 	mov	dptr,#_Byte_Read_Sequential_block_65536_28
      00082A E0               [24] 1919 	movx	a,@dptr
      00082B 25 E0            [12] 1920 	add	a,acc
      00082D FF               [12] 1921 	mov	r7,a
      00082E 43 07 A1         [24] 1922 	orl	ar7,#0xa1
                                   1923 ;	i2c_bit_bang.c:248: for(int i = 0; i < BYTE_LENGTH; i++){
      000831 7D 00            [12] 1924 	mov	r5,#0x00
      000833 7E 00            [12] 1925 	mov	r6,#0x00
      000835                       1926 00115$:
      000835 C3               [12] 1927 	clr	c
      000836 ED               [12] 1928 	mov	a,r5
      000837 94 08            [12] 1929 	subb	a,#0x08
      000839 EE               [12] 1930 	mov	a,r6
      00083A 64 80            [12] 1931 	xrl	a,#0x80
      00083C 94 80            [12] 1932 	subb	a,#0x80
      00083E 50 3C            [24] 1933 	jnc	00103$
                                   1934 ;	i2c_bit_bang.c:249: SDA = byte & (0b10000000);
      000840 EF               [12] 1935 	mov	a,r7
      000841 23               [12] 1936 	rl	a
      000842 54 01            [12] 1937 	anl	a,#0x01
                                   1938 ;	assignBit
      000844 24 FF            [12] 1939 	add	a,#0xff
      000846 92 93            [24] 1940 	mov	_P1_3,c
                                   1941 ;	i2c_bit_bang.c:250: SCL = PULSE_HIGH;
                                   1942 ;	assignBit
      000848 D2 92            [12] 1943 	setb	_P1_2
                                   1944 ;	i2c_bit_bang.c:251: delay(2);
      00084A 90 00 02         [24] 1945 	mov	dptr,#0x0002
      00084D C0 07            [24] 1946 	push	ar7
      00084F C0 06            [24] 1947 	push	ar6
      000851 C0 05            [24] 1948 	push	ar5
      000853 12r00r00         [24] 1949 	lcall	_delay
      000856 D0 05            [24] 1950 	pop	ar5
      000858 D0 06            [24] 1951 	pop	ar6
      00085A D0 07            [24] 1952 	pop	ar7
                                   1953 ;	i2c_bit_bang.c:252: SCL = PULSE_LOW;
                                   1954 ;	assignBit
      00085C C2 92            [12] 1955 	clr	_P1_2
                                   1956 ;	i2c_bit_bang.c:253: byte = byte << 1;
      00085E 8F 04            [24] 1957 	mov	ar4,r7
      000860 EC               [12] 1958 	mov	a,r4
      000861 2C               [12] 1959 	add	a,r4
      000862 FF               [12] 1960 	mov	r7,a
                                   1961 ;	i2c_bit_bang.c:254: delay(0);
      000863 90 00 00         [24] 1962 	mov	dptr,#0x0000
      000866 C0 07            [24] 1963 	push	ar7
      000868 C0 06            [24] 1964 	push	ar6
      00086A C0 05            [24] 1965 	push	ar5
      00086C 12r00r00         [24] 1966 	lcall	_delay
      00086F D0 05            [24] 1967 	pop	ar5
      000871 D0 06            [24] 1968 	pop	ar6
      000873 D0 07            [24] 1969 	pop	ar7
                                   1970 ;	i2c_bit_bang.c:248: for(int i = 0; i < BYTE_LENGTH; i++){
      000875 0D               [12] 1971 	inc	r5
      000876 BD 00 BC         [24] 1972 	cjne	r5,#0x00,00115$
      000879 0E               [12] 1973 	inc	r6
      00087A 80 B9            [24] 1974 	sjmp	00115$
      00087C                       1975 00103$:
                                   1976 ;	i2c_bit_bang.c:256: SDA = PULSE_HIGH;
                                   1977 ;	assignBit
      00087C D2 93            [12] 1978 	setb	_P1_3
                                   1979 ;	i2c_bit_bang.c:257: delay(2);
      00087E 90 00 02         [24] 1980 	mov	dptr,#0x0002
      000881 12r00r00         [24] 1981 	lcall	_delay
                                   1982 ;	i2c_bit_bang.c:263: SCL = PULSE_HIGH;
                                   1983 ;	assignBit
      000884 D2 92            [12] 1984 	setb	_P1_2
                                   1985 ;	i2c_bit_bang.c:264: delay(2);
      000886 90 00 02         [24] 1986 	mov	dptr,#0x0002
      000889 12r00r00         [24] 1987 	lcall	_delay
                                   1988 ;	i2c_bit_bang.c:265: SCL = PULSE_LOW;
                                   1989 ;	assignBit
      00088C C2 92            [12] 1990 	clr	_P1_2
                                   1991 ;	i2c_bit_bang.c:266: delay(2);
      00088E 90 00 02         [24] 1992 	mov	dptr,#0x0002
      000891 12r00r00         [24] 1993 	lcall	_delay
                                   1994 ;	i2c_bit_bang.c:267: for(int l = 0; l < (address_range + 1); l++){
      000894 90r00r06         [24] 1995 	mov	dptr,#_Byte_Read_Sequential_PARM_3
      000897 E0               [24] 1996 	movx	a,@dptr
      000898 FF               [12] 1997 	mov	r7,a
      000899 E4               [12] 1998 	clr	a
      00089A F5*00            [12] 1999 	mov	_Byte_Read_Sequential_l_131073_37,a
      00089C F5*01            [12] 2000 	mov	(_Byte_Read_Sequential_l_131073_37 + 1),a
      00089E                       2001 00121$:
      00089E 8F 03            [24] 2002 	mov	ar3,r7
      0008A0 7C 00            [12] 2003 	mov	r4,#0x00
      0008A2 74 01            [12] 2004 	mov	a,#0x01
      0008A4 2B               [12] 2005 	add	a,r3
      0008A5 F9               [12] 2006 	mov	r1,a
      0008A6 E4               [12] 2007 	clr	a
      0008A7 3C               [12] 2008 	addc	a,r4
      0008A8 FA               [12] 2009 	mov	r2,a
      0008A9 C3               [12] 2010 	clr	c
      0008AA E5*00            [12] 2011 	mov	a,_Byte_Read_Sequential_l_131073_37
      0008AC 99               [12] 2012 	subb	a,r1
      0008AD E5*01            [12] 2013 	mov	a,(_Byte_Read_Sequential_l_131073_37 + 1)
      0008AF 64 80            [12] 2014 	xrl	a,#0x80
      0008B1 8A F0            [24] 2015 	mov	b,r2
      0008B3 63 F0 80         [24] 2016 	xrl	b,#0x80
      0008B6 95 F0            [12] 2017 	subb	a,b
      0008B8 40 03            [24] 2018 	jc	00191$
      0008BA 02r09r5F         [24] 2019 	ljmp	00107$
      0008BD                       2020 00191$:
                                   2021 ;	i2c_bit_bang.c:268: for(int k = 0; k < BYTE_LENGTH; k++){
      0008BD E4               [12] 2022 	clr	a
      0008BE F5*02            [12] 2023 	mov	_Byte_Read_Sequential_k_262145_39,a
      0008C0 F5*03            [12] 2024 	mov	(_Byte_Read_Sequential_k_262145_39 + 1),a
      0008C2                       2025 00118$:
      0008C2 C3               [12] 2026 	clr	c
      0008C3 E5*02            [12] 2027 	mov	a,_Byte_Read_Sequential_k_262145_39
      0008C5 94 08            [12] 2028 	subb	a,#0x08
      0008C7 E5*03            [12] 2029 	mov	a,(_Byte_Read_Sequential_k_262145_39 + 1)
      0008C9 64 80            [12] 2030 	xrl	a,#0x80
      0008CB 94 80            [12] 2031 	subb	a,#0x80
      0008CD 50 58            [24] 2032 	jnc	00104$
                                   2033 ;	i2c_bit_bang.c:269: SDA= PULSE_HIGH;
                                   2034 ;	assignBit
      0008CF D2 93            [12] 2035 	setb	_P1_3
                                   2036 ;	i2c_bit_bang.c:270: buffer[l] = buffer[l] << 1;
      0008D1 E5*00            [12] 2037 	mov	a,_Byte_Read_Sequential_l_131073_37
      0008D3 24r08            [12] 2038 	add	a,#_Byte_Read_Sequential_buffer_65536_29
      0008D5 F8               [12] 2039 	mov	r0,a
      0008D6 E5*01            [12] 2040 	mov	a,(_Byte_Read_Sequential_l_131073_37 + 1)
      0008D8 34s00            [12] 2041 	addc	a,#(_Byte_Read_Sequential_buffer_65536_29 >> 8)
      0008DA FA               [12] 2042 	mov	r2,a
      0008DB 88 82            [24] 2043 	mov	dpl,r0
      0008DD 8A 83            [24] 2044 	mov	dph,r2
      0008DF E0               [24] 2045 	movx	a,@dptr
      0008E0 25 E0            [12] 2046 	add	a,acc
      0008E2 88 82            [24] 2047 	mov	dpl,r0
      0008E4 8A 83            [24] 2048 	mov	dph,r2
      0008E6 F0               [24] 2049 	movx	@dptr,a
                                   2050 ;	i2c_bit_bang.c:271: SCL = PULSE_HIGH;
                                   2051 ;	assignBit
      0008E7 D2 92            [12] 2052 	setb	_P1_2
                                   2053 ;	i2c_bit_bang.c:272: delay(1);
      0008E9 90 00 01         [24] 2054 	mov	dptr,#0x0001
      0008EC C0 07            [24] 2055 	push	ar7
      0008EE C0 04            [24] 2056 	push	ar4
      0008F0 C0 03            [24] 2057 	push	ar3
      0008F2 C0 02            [24] 2058 	push	ar2
      0008F4 C0 00            [24] 2059 	push	ar0
      0008F6 12r00r00         [24] 2060 	lcall	_delay
      0008F9 D0 00            [24] 2061 	pop	ar0
      0008FB D0 02            [24] 2062 	pop	ar2
                                   2063 ;	i2c_bit_bang.c:273: buffer[l] |= SDA;
      0008FD 88 82            [24] 2064 	mov	dpl,r0
      0008FF 8A 83            [24] 2065 	mov	dph,r2
      000901 E0               [24] 2066 	movx	a,@dptr
      000902 F9               [12] 2067 	mov	r1,a
      000903 A2 93            [12] 2068 	mov	c,_P1_3
      000905 E4               [12] 2069 	clr	a
      000906 33               [12] 2070 	rlc	a
      000907 42 01            [12] 2071 	orl	ar1,a
      000909 88 82            [24] 2072 	mov	dpl,r0
      00090B 8A 83            [24] 2073 	mov	dph,r2
      00090D E9               [12] 2074 	mov	a,r1
      00090E F0               [24] 2075 	movx	@dptr,a
                                   2076 ;	i2c_bit_bang.c:274: SCL = PULSE_LOW;
                                   2077 ;	assignBit
      00090F C2 92            [12] 2078 	clr	_P1_2
                                   2079 ;	i2c_bit_bang.c:275: delay(1);
      000911 90 00 01         [24] 2080 	mov	dptr,#0x0001
      000914 12r00r00         [24] 2081 	lcall	_delay
      000917 D0 03            [24] 2082 	pop	ar3
      000919 D0 04            [24] 2083 	pop	ar4
      00091B D0 07            [24] 2084 	pop	ar7
                                   2085 ;	i2c_bit_bang.c:268: for(int k = 0; k < BYTE_LENGTH; k++){
      00091D 05*02            [12] 2086 	inc	_Byte_Read_Sequential_k_262145_39
      00091F E4               [12] 2087 	clr	a
      000920 B5*02 9F         [24] 2088 	cjne	a,_Byte_Read_Sequential_k_262145_39,00118$
      000923 05*03            [12] 2089 	inc	(_Byte_Read_Sequential_k_262145_39 + 1)
      000925 80 9B            [24] 2090 	sjmp	00118$
      000927                       2091 00104$:
                                   2092 ;	i2c_bit_bang.c:277: if(l < address_range){
      000927 C3               [12] 2093 	clr	c
      000928 E5*00            [12] 2094 	mov	a,_Byte_Read_Sequential_l_131073_37
      00092A 9B               [12] 2095 	subb	a,r3
      00092B E5*01            [12] 2096 	mov	a,(_Byte_Read_Sequential_l_131073_37 + 1)
      00092D 64 80            [12] 2097 	xrl	a,#0x80
      00092F 8C F0            [24] 2098 	mov	b,r4
      000931 63 F0 80         [24] 2099 	xrl	b,#0x80
      000934 95 F0            [12] 2100 	subb	a,b
      000936 50 1C            [24] 2101 	jnc	00122$
                                   2102 ;	i2c_bit_bang.c:278: SDA = PULSE_LOW;
                                   2103 ;	assignBit
      000938 C2 93            [12] 2104 	clr	_P1_3
                                   2105 ;	i2c_bit_bang.c:279: delay(0);
      00093A 90 00 00         [24] 2106 	mov	dptr,#0x0000
      00093D C0 07            [24] 2107 	push	ar7
      00093F 12r00r00         [24] 2108 	lcall	_delay
                                   2109 ;	i2c_bit_bang.c:280: SCL = PULSE_HIGH;
                                   2110 ;	assignBit
      000942 D2 92            [12] 2111 	setb	_P1_2
                                   2112 ;	i2c_bit_bang.c:281: delay(2);
      000944 90 00 02         [24] 2113 	mov	dptr,#0x0002
      000947 12r00r00         [24] 2114 	lcall	_delay
                                   2115 ;	i2c_bit_bang.c:282: SCL = PULSE_LOW;
                                   2116 ;	assignBit
      00094A C2 92            [12] 2117 	clr	_P1_2
                                   2118 ;	i2c_bit_bang.c:283: delay(1);
      00094C 90 00 01         [24] 2119 	mov	dptr,#0x0001
      00094F 12r00r00         [24] 2120 	lcall	_delay
      000952 D0 07            [24] 2121 	pop	ar7
      000954                       2122 00122$:
                                   2123 ;	i2c_bit_bang.c:267: for(int l = 0; l < (address_range + 1); l++){
      000954 05*00            [12] 2124 	inc	_Byte_Read_Sequential_l_131073_37
      000956 E4               [12] 2125 	clr	a
      000957 B5*00 02         [24] 2126 	cjne	a,_Byte_Read_Sequential_l_131073_37,00195$
      00095A 05*01            [12] 2127 	inc	(_Byte_Read_Sequential_l_131073_37 + 1)
      00095C                       2128 00195$:
      00095C 02r08r9E         [24] 2129 	ljmp	00121$
      00095F                       2130 00107$:
                                   2131 ;	i2c_bit_bang.c:286: SDA = PULSE_HIGH;
                                   2132 ;	assignBit
      00095F D2 93            [12] 2133 	setb	_P1_3
                                   2134 ;	i2c_bit_bang.c:287: delay(2);
      000961 90 00 02         [24] 2135 	mov	dptr,#0x0002
      000964 12r00r00         [24] 2136 	lcall	_delay
                                   2137 ;	i2c_bit_bang.c:288: SCL = PULSE_HIGH;
                                   2138 ;	assignBit
      000967 D2 92            [12] 2139 	setb	_P1_2
                                   2140 ;	i2c_bit_bang.c:289: delay(2);
      000969 90 00 02         [24] 2141 	mov	dptr,#0x0002
      00096C 12r00r00         [24] 2142 	lcall	_delay
                                   2143 ;	i2c_bit_bang.c:290: SCL = PULSE_LOW;
                                   2144 ;	assignBit
      00096F C2 92            [12] 2145 	clr	_P1_2
                                   2146 ;	i2c_bit_bang.c:291: SDA = PULSE_LOW;
                                   2147 ;	assignBit
      000971 C2 93            [12] 2148 	clr	_P1_3
                                   2149 ;	i2c_bit_bang.c:292: delay(2);
      000973 90 00 02         [24] 2150 	mov	dptr,#0x0002
      000976 12r00r00         [24] 2151 	lcall	_delay
                                   2152 ;	i2c_bit_bang.c:293: SCL = PULSE_HIGH;
                                   2153 ;	assignBit
      000979 D2 92            [12] 2154 	setb	_P1_2
                                   2155 ;	i2c_bit_bang.c:294: delay(2);
      00097B 90 00 02         [24] 2156 	mov	dptr,#0x0002
      00097E 12r00r00         [24] 2157 	lcall	_delay
                                   2158 ;	i2c_bit_bang.c:295: SDA = PULSE_HIGH;
                                   2159 ;	assignBit
      000981 D2 93            [12] 2160 	setb	_P1_3
                                   2161 ;	i2c_bit_bang.c:296: delay(2);
      000983 90 00 02         [24] 2162 	mov	dptr,#0x0002
      000986 12r00r00         [24] 2163 	lcall	_delay
                                   2164 ;	i2c_bit_bang.c:297: SCL = PULSE_LOW;
                                   2165 ;	assignBit
      000989 C2 92            [12] 2166 	clr	_P1_2
                                   2167 ;	i2c_bit_bang.c:298: delay(2);
      00098B 90 00 02         [24] 2168 	mov	dptr,#0x0002
      00098E 12r00r00         [24] 2169 	lcall	_delay
                                   2170 ;	i2c_bit_bang.c:299: return buffer;
      000991 90r00r08         [24] 2171 	mov	dptr,#_Byte_Read_Sequential_buffer_65536_29
                                   2172 ;	i2c_bit_bang.c:300: }
      000994 22               [24] 2173 	ret
                                   2174 ;------------------------------------------------------------
                                   2175 ;Allocation info for local variables in function 'eeprom_reset'
                                   2176 ;------------------------------------------------------------
                                   2177 ;i                         Allocated to registers r6 r7 
                                   2178 ;------------------------------------------------------------
                                   2179 ;	i2c_bit_bang.c:302: void eeprom_reset(){
                                   2180 ;	-----------------------------------------
                                   2181 ;	 function eeprom_reset
                                   2182 ;	-----------------------------------------
      000995                       2183 _eeprom_reset:
                                   2184 ;	i2c_bit_bang.c:303: SCL = PULSE_HIGH;
                                   2185 ;	assignBit
      000995 D2 92            [12] 2186 	setb	_P1_2
                                   2187 ;	i2c_bit_bang.c:304: SDA = PULSE_HIGH;
                                   2188 ;	assignBit
      000997 D2 93            [12] 2189 	setb	_P1_3
                                   2190 ;	i2c_bit_bang.c:305: delay(2);
      000999 90 00 02         [24] 2191 	mov	dptr,#0x0002
      00099C 12r00r00         [24] 2192 	lcall	_delay
                                   2193 ;	i2c_bit_bang.c:306: SDA = PULSE_LOW;
                                   2194 ;	assignBit
      00099F C2 93            [12] 2195 	clr	_P1_3
                                   2196 ;	i2c_bit_bang.c:307: delay(0);
      0009A1 90 00 00         [24] 2197 	mov	dptr,#0x0000
      0009A4 12r00r00         [24] 2198 	lcall	_delay
                                   2199 ;	i2c_bit_bang.c:308: SCL = PULSE_LOW;
                                   2200 ;	assignBit
      0009A7 C2 92            [12] 2201 	clr	_P1_2
                                   2202 ;	i2c_bit_bang.c:309: delay(0);
      0009A9 90 00 00         [24] 2203 	mov	dptr,#0x0000
      0009AC 12r00r00         [24] 2204 	lcall	_delay
                                   2205 ;	i2c_bit_bang.c:310: for(int i = 0; i < (BYTE_LENGTH + 1); i++){
      0009AF 7E 00            [12] 2206 	mov	r6,#0x00
      0009B1 7F 00            [12] 2207 	mov	r7,#0x00
      0009B3                       2208 00103$:
      0009B3 C3               [12] 2209 	clr	c
      0009B4 EE               [12] 2210 	mov	a,r6
      0009B5 94 09            [12] 2211 	subb	a,#0x09
      0009B7 EF               [12] 2212 	mov	a,r7
      0009B8 64 80            [12] 2213 	xrl	a,#0x80
      0009BA 94 80            [12] 2214 	subb	a,#0x80
      0009BC 50 21            [24] 2215 	jnc	00101$
                                   2216 ;	i2c_bit_bang.c:311: SDA = PULSE_HIGH;
                                   2217 ;	assignBit
      0009BE D2 93            [12] 2218 	setb	_P1_3
                                   2219 ;	i2c_bit_bang.c:312: SCL = PULSE_HIGH;
                                   2220 ;	assignBit
      0009C0 D2 92            [12] 2221 	setb	_P1_2
                                   2222 ;	i2c_bit_bang.c:313: delay(2);
      0009C2 90 00 02         [24] 2223 	mov	dptr,#0x0002
      0009C5 C0 07            [24] 2224 	push	ar7
      0009C7 C0 06            [24] 2225 	push	ar6
      0009C9 12r00r00         [24] 2226 	lcall	_delay
                                   2227 ;	i2c_bit_bang.c:314: SCL = PULSE_LOW;
                                   2228 ;	assignBit
      0009CC C2 92            [12] 2229 	clr	_P1_2
                                   2230 ;	i2c_bit_bang.c:315: delay(1);
      0009CE 90 00 01         [24] 2231 	mov	dptr,#0x0001
      0009D1 12r00r00         [24] 2232 	lcall	_delay
      0009D4 D0 06            [24] 2233 	pop	ar6
      0009D6 D0 07            [24] 2234 	pop	ar7
                                   2235 ;	i2c_bit_bang.c:310: for(int i = 0; i < (BYTE_LENGTH + 1); i++){
      0009D8 0E               [12] 2236 	inc	r6
      0009D9 BE 00 D7         [24] 2237 	cjne	r6,#0x00,00103$
      0009DC 0F               [12] 2238 	inc	r7
      0009DD 80 D4            [24] 2239 	sjmp	00103$
      0009DF                       2240 00101$:
                                   2241 ;	i2c_bit_bang.c:317: SCL = PULSE_HIGH;
                                   2242 ;	assignBit
      0009DF D2 92            [12] 2243 	setb	_P1_2
                                   2244 ;	i2c_bit_bang.c:318: delay(0);
      0009E1 90 00 00         [24] 2245 	mov	dptr,#0x0000
      0009E4 12r00r00         [24] 2246 	lcall	_delay
                                   2247 ;	i2c_bit_bang.c:319: SDA = PULSE_LOW;
                                   2248 ;	assignBit
      0009E7 C2 93            [12] 2249 	clr	_P1_3
                                   2250 ;	i2c_bit_bang.c:320: delay(0);
      0009E9 90 00 00         [24] 2251 	mov	dptr,#0x0000
      0009EC 12r00r00         [24] 2252 	lcall	_delay
                                   2253 ;	i2c_bit_bang.c:321: SCL = PULSE_LOW;
                                   2254 ;	assignBit
      0009EF C2 92            [12] 2255 	clr	_P1_2
                                   2256 ;	i2c_bit_bang.c:322: SDA = PULSE_LOW;
                                   2257 ;	assignBit
      0009F1 C2 93            [12] 2258 	clr	_P1_3
                                   2259 ;	i2c_bit_bang.c:323: delay(1);
      0009F3 90 00 01         [24] 2260 	mov	dptr,#0x0001
      0009F6 12r00r00         [24] 2261 	lcall	_delay
                                   2262 ;	i2c_bit_bang.c:324: SCL = PULSE_HIGH;
                                   2263 ;	assignBit
      0009F9 D2 92            [12] 2264 	setb	_P1_2
                                   2265 ;	i2c_bit_bang.c:325: delay(0);
      0009FB 90 00 00         [24] 2266 	mov	dptr,#0x0000
      0009FE 12r00r00         [24] 2267 	lcall	_delay
                                   2268 ;	i2c_bit_bang.c:326: SDA = PULSE_HIGH;
                                   2269 ;	assignBit
      000A01 D2 93            [12] 2270 	setb	_P1_3
                                   2271 ;	i2c_bit_bang.c:327: delay(0);
      000A03 90 00 00         [24] 2272 	mov	dptr,#0x0000
      000A06 12r00r00         [24] 2273 	lcall	_delay
                                   2274 ;	i2c_bit_bang.c:328: SCL = PULSE_LOW;
                                   2275 ;	assignBit
      000A09 C2 92            [12] 2276 	clr	_P1_2
                                   2277 ;	i2c_bit_bang.c:329: }
      000A0B 22               [24] 2278 	ret
                                   2279 	.area CSEG    (CODE)
                                   2280 	.area CONST   (CODE)
                                   2281 	.area XINIT   (CODE)
                                   2282 	.area CABS    (ABS,CODE)
