                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module i2c_bit_bang
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _P5_7
                                     12 	.globl _P5_6
                                     13 	.globl _P5_5
                                     14 	.globl _P5_4
                                     15 	.globl _P5_3
                                     16 	.globl _P5_2
                                     17 	.globl _P5_1
                                     18 	.globl _P5_0
                                     19 	.globl _P4_7
                                     20 	.globl _P4_6
                                     21 	.globl _P4_5
                                     22 	.globl _P4_4
                                     23 	.globl _P4_3
                                     24 	.globl _P4_2
                                     25 	.globl _P4_1
                                     26 	.globl _P4_0
                                     27 	.globl _PX0L
                                     28 	.globl _PT0L
                                     29 	.globl _PX1L
                                     30 	.globl _PT1L
                                     31 	.globl _PSL
                                     32 	.globl _PT2L
                                     33 	.globl _PPCL
                                     34 	.globl _EC
                                     35 	.globl _CCF0
                                     36 	.globl _CCF1
                                     37 	.globl _CCF2
                                     38 	.globl _CCF3
                                     39 	.globl _CCF4
                                     40 	.globl _CR
                                     41 	.globl _CF
                                     42 	.globl _TF2
                                     43 	.globl _EXF2
                                     44 	.globl _RCLK
                                     45 	.globl _TCLK
                                     46 	.globl _EXEN2
                                     47 	.globl _TR2
                                     48 	.globl _C_T2
                                     49 	.globl _CP_RL2
                                     50 	.globl _T2CON_7
                                     51 	.globl _T2CON_6
                                     52 	.globl _T2CON_5
                                     53 	.globl _T2CON_4
                                     54 	.globl _T2CON_3
                                     55 	.globl _T2CON_2
                                     56 	.globl _T2CON_1
                                     57 	.globl _T2CON_0
                                     58 	.globl _PT2
                                     59 	.globl _ET2
                                     60 	.globl _CY
                                     61 	.globl _AC
                                     62 	.globl _F0
                                     63 	.globl _RS1
                                     64 	.globl _RS0
                                     65 	.globl _OV
                                     66 	.globl _F1
                                     67 	.globl _P
                                     68 	.globl _PS
                                     69 	.globl _PT1
                                     70 	.globl _PX1
                                     71 	.globl _PT0
                                     72 	.globl _PX0
                                     73 	.globl _RD
                                     74 	.globl _WR
                                     75 	.globl _T1
                                     76 	.globl _T0
                                     77 	.globl _INT1
                                     78 	.globl _INT0
                                     79 	.globl _TXD
                                     80 	.globl _RXD
                                     81 	.globl _P3_7
                                     82 	.globl _P3_6
                                     83 	.globl _P3_5
                                     84 	.globl _P3_4
                                     85 	.globl _P3_3
                                     86 	.globl _P3_2
                                     87 	.globl _P3_1
                                     88 	.globl _P3_0
                                     89 	.globl _EA
                                     90 	.globl _ES
                                     91 	.globl _ET1
                                     92 	.globl _EX1
                                     93 	.globl _ET0
                                     94 	.globl _EX0
                                     95 	.globl _P2_7
                                     96 	.globl _P2_6
                                     97 	.globl _P2_5
                                     98 	.globl _P2_4
                                     99 	.globl _P2_3
                                    100 	.globl _P2_2
                                    101 	.globl _P2_1
                                    102 	.globl _P2_0
                                    103 	.globl _SM0
                                    104 	.globl _SM1
                                    105 	.globl _SM2
                                    106 	.globl _REN
                                    107 	.globl _TB8
                                    108 	.globl _RB8
                                    109 	.globl _TI
                                    110 	.globl _RI
                                    111 	.globl _P1_7
                                    112 	.globl _P1_6
                                    113 	.globl _P1_5
                                    114 	.globl _P1_4
                                    115 	.globl _P1_3
                                    116 	.globl _P1_2
                                    117 	.globl _P1_1
                                    118 	.globl _P1_0
                                    119 	.globl _TF1
                                    120 	.globl _TR1
                                    121 	.globl _TF0
                                    122 	.globl _TR0
                                    123 	.globl _IE1
                                    124 	.globl _IT1
                                    125 	.globl _IE0
                                    126 	.globl _IT0
                                    127 	.globl _P0_7
                                    128 	.globl _P0_6
                                    129 	.globl _P0_5
                                    130 	.globl _P0_4
                                    131 	.globl _P0_3
                                    132 	.globl _P0_2
                                    133 	.globl _P0_1
                                    134 	.globl _P0_0
                                    135 	.globl _TXD0
                                    136 	.globl _RXD0
                                    137 	.globl _BREG_F7
                                    138 	.globl _BREG_F6
                                    139 	.globl _BREG_F5
                                    140 	.globl _BREG_F4
                                    141 	.globl _BREG_F3
                                    142 	.globl _BREG_F2
                                    143 	.globl _BREG_F1
                                    144 	.globl _BREG_F0
                                    145 	.globl _EECON
                                    146 	.globl _KBF
                                    147 	.globl _KBE
                                    148 	.globl _KBLS
                                    149 	.globl _BRL
                                    150 	.globl _BDRCON
                                    151 	.globl _T2MOD
                                    152 	.globl _SPDAT
                                    153 	.globl _SPSTA
                                    154 	.globl _SPCON
                                    155 	.globl _SADEN
                                    156 	.globl _SADDR
                                    157 	.globl _WDTPRG
                                    158 	.globl _WDTRST
                                    159 	.globl _P5
                                    160 	.globl _P4
                                    161 	.globl _IPH1
                                    162 	.globl _IPL1
                                    163 	.globl _IPH0
                                    164 	.globl _IPL0
                                    165 	.globl _IEN1
                                    166 	.globl _IEN0
                                    167 	.globl _CMOD
                                    168 	.globl _CL
                                    169 	.globl _CH
                                    170 	.globl _CCON
                                    171 	.globl _CCAPM4
                                    172 	.globl _CCAPM3
                                    173 	.globl _CCAPM2
                                    174 	.globl _CCAPM1
                                    175 	.globl _CCAPM0
                                    176 	.globl _CCAP4L
                                    177 	.globl _CCAP3L
                                    178 	.globl _CCAP2L
                                    179 	.globl _CCAP1L
                                    180 	.globl _CCAP0L
                                    181 	.globl _CCAP4H
                                    182 	.globl _CCAP3H
                                    183 	.globl _CCAP2H
                                    184 	.globl _CCAP1H
                                    185 	.globl _CCAP0H
                                    186 	.globl _CKCON1
                                    187 	.globl _CKCON0
                                    188 	.globl _CKRL
                                    189 	.globl _AUXR1
                                    190 	.globl _AUXR
                                    191 	.globl _TH2
                                    192 	.globl _TL2
                                    193 	.globl _RCAP2H
                                    194 	.globl _RCAP2L
                                    195 	.globl _T2CON
                                    196 	.globl _B
                                    197 	.globl _ACC
                                    198 	.globl _PSW
                                    199 	.globl _IP
                                    200 	.globl _P3
                                    201 	.globl _IE
                                    202 	.globl _P2
                                    203 	.globl _SBUF
                                    204 	.globl _SCON
                                    205 	.globl _P1
                                    206 	.globl _TH1
                                    207 	.globl _TH0
                                    208 	.globl _TL1
                                    209 	.globl _TL0
                                    210 	.globl _TMOD
                                    211 	.globl _TCON
                                    212 	.globl _PCON
                                    213 	.globl _DPH
                                    214 	.globl _DPL
                                    215 	.globl _SP
                                    216 	.globl _P0
                                    217 	.globl _SBUF0
                                    218 	.globl _DP0L
                                    219 	.globl _DP0H
                                    220 	.globl _Byte_Read_Sequential_PARM_3
                                    221 	.globl _Byte_Read_Sequential_PARM_2
                                    222 	.globl _Byte_Read_PARM_2
                                    223 	.globl _Byte_Write_PARM_3
                                    224 	.globl _Byte_Write_PARM_2
                                    225 	.globl _delay
                                    226 	.globl _sendByte
                                    227 	.globl _Byte_Write
                                    228 	.globl _Byte_Read
                                    229 	.globl _Byte_Read_Sequential
                                    230 	.globl _eeprom_reset
                                    231 ;--------------------------------------------------------
                                    232 ; special function registers
                                    233 ;--------------------------------------------------------
                                    234 	.area RSEG    (ABS,DATA)
      000000                        235 	.org 0x0000
                           000083   236 _DP0H	=	0x0083
                           000082   237 _DP0L	=	0x0082
                           000099   238 _SBUF0	=	0x0099
                           000080   239 _P0	=	0x0080
                           000081   240 _SP	=	0x0081
                           000082   241 _DPL	=	0x0082
                           000083   242 _DPH	=	0x0083
                           000087   243 _PCON	=	0x0087
                           000088   244 _TCON	=	0x0088
                           000089   245 _TMOD	=	0x0089
                           00008A   246 _TL0	=	0x008a
                           00008B   247 _TL1	=	0x008b
                           00008C   248 _TH0	=	0x008c
                           00008D   249 _TH1	=	0x008d
                           000090   250 _P1	=	0x0090
                           000098   251 _SCON	=	0x0098
                           000099   252 _SBUF	=	0x0099
                           0000A0   253 _P2	=	0x00a0
                           0000A8   254 _IE	=	0x00a8
                           0000B0   255 _P3	=	0x00b0
                           0000B8   256 _IP	=	0x00b8
                           0000D0   257 _PSW	=	0x00d0
                           0000E0   258 _ACC	=	0x00e0
                           0000F0   259 _B	=	0x00f0
                           0000C8   260 _T2CON	=	0x00c8
                           0000CA   261 _RCAP2L	=	0x00ca
                           0000CB   262 _RCAP2H	=	0x00cb
                           0000CC   263 _TL2	=	0x00cc
                           0000CD   264 _TH2	=	0x00cd
                           00008E   265 _AUXR	=	0x008e
                           0000A2   266 _AUXR1	=	0x00a2
                           000097   267 _CKRL	=	0x0097
                           00008F   268 _CKCON0	=	0x008f
                           0000AF   269 _CKCON1	=	0x00af
                           0000FA   270 _CCAP0H	=	0x00fa
                           0000FB   271 _CCAP1H	=	0x00fb
                           0000FC   272 _CCAP2H	=	0x00fc
                           0000FD   273 _CCAP3H	=	0x00fd
                           0000FE   274 _CCAP4H	=	0x00fe
                           0000EA   275 _CCAP0L	=	0x00ea
                           0000EB   276 _CCAP1L	=	0x00eb
                           0000EC   277 _CCAP2L	=	0x00ec
                           0000ED   278 _CCAP3L	=	0x00ed
                           0000EE   279 _CCAP4L	=	0x00ee
                           0000DA   280 _CCAPM0	=	0x00da
                           0000DB   281 _CCAPM1	=	0x00db
                           0000DC   282 _CCAPM2	=	0x00dc
                           0000DD   283 _CCAPM3	=	0x00dd
                           0000DE   284 _CCAPM4	=	0x00de
                           0000D8   285 _CCON	=	0x00d8
                           0000F9   286 _CH	=	0x00f9
                           0000E9   287 _CL	=	0x00e9
                           0000D9   288 _CMOD	=	0x00d9
                           0000A8   289 _IEN0	=	0x00a8
                           0000B1   290 _IEN1	=	0x00b1
                           0000B8   291 _IPL0	=	0x00b8
                           0000B7   292 _IPH0	=	0x00b7
                           0000B2   293 _IPL1	=	0x00b2
                           0000B3   294 _IPH1	=	0x00b3
                           0000C0   295 _P4	=	0x00c0
                           0000E8   296 _P5	=	0x00e8
                           0000A6   297 _WDTRST	=	0x00a6
                           0000A7   298 _WDTPRG	=	0x00a7
                           0000A9   299 _SADDR	=	0x00a9
                           0000B9   300 _SADEN	=	0x00b9
                           0000C3   301 _SPCON	=	0x00c3
                           0000C4   302 _SPSTA	=	0x00c4
                           0000C5   303 _SPDAT	=	0x00c5
                           0000C9   304 _T2MOD	=	0x00c9
                           00009B   305 _BDRCON	=	0x009b
                           00009A   306 _BRL	=	0x009a
                           00009C   307 _KBLS	=	0x009c
                           00009D   308 _KBE	=	0x009d
                           00009E   309 _KBF	=	0x009e
                           0000D2   310 _EECON	=	0x00d2
                                    311 ;--------------------------------------------------------
                                    312 ; special function bits
                                    313 ;--------------------------------------------------------
                                    314 	.area RSEG    (ABS,DATA)
      000000                        315 	.org 0x0000
                           0000F0   316 _BREG_F0	=	0x00f0
                           0000F1   317 _BREG_F1	=	0x00f1
                           0000F2   318 _BREG_F2	=	0x00f2
                           0000F3   319 _BREG_F3	=	0x00f3
                           0000F4   320 _BREG_F4	=	0x00f4
                           0000F5   321 _BREG_F5	=	0x00f5
                           0000F6   322 _BREG_F6	=	0x00f6
                           0000F7   323 _BREG_F7	=	0x00f7
                           0000B0   324 _RXD0	=	0x00b0
                           0000B1   325 _TXD0	=	0x00b1
                           000080   326 _P0_0	=	0x0080
                           000081   327 _P0_1	=	0x0081
                           000082   328 _P0_2	=	0x0082
                           000083   329 _P0_3	=	0x0083
                           000084   330 _P0_4	=	0x0084
                           000085   331 _P0_5	=	0x0085
                           000086   332 _P0_6	=	0x0086
                           000087   333 _P0_7	=	0x0087
                           000088   334 _IT0	=	0x0088
                           000089   335 _IE0	=	0x0089
                           00008A   336 _IT1	=	0x008a
                           00008B   337 _IE1	=	0x008b
                           00008C   338 _TR0	=	0x008c
                           00008D   339 _TF0	=	0x008d
                           00008E   340 _TR1	=	0x008e
                           00008F   341 _TF1	=	0x008f
                           000090   342 _P1_0	=	0x0090
                           000091   343 _P1_1	=	0x0091
                           000092   344 _P1_2	=	0x0092
                           000093   345 _P1_3	=	0x0093
                           000094   346 _P1_4	=	0x0094
                           000095   347 _P1_5	=	0x0095
                           000096   348 _P1_6	=	0x0096
                           000097   349 _P1_7	=	0x0097
                           000098   350 _RI	=	0x0098
                           000099   351 _TI	=	0x0099
                           00009A   352 _RB8	=	0x009a
                           00009B   353 _TB8	=	0x009b
                           00009C   354 _REN	=	0x009c
                           00009D   355 _SM2	=	0x009d
                           00009E   356 _SM1	=	0x009e
                           00009F   357 _SM0	=	0x009f
                           0000A0   358 _P2_0	=	0x00a0
                           0000A1   359 _P2_1	=	0x00a1
                           0000A2   360 _P2_2	=	0x00a2
                           0000A3   361 _P2_3	=	0x00a3
                           0000A4   362 _P2_4	=	0x00a4
                           0000A5   363 _P2_5	=	0x00a5
                           0000A6   364 _P2_6	=	0x00a6
                           0000A7   365 _P2_7	=	0x00a7
                           0000A8   366 _EX0	=	0x00a8
                           0000A9   367 _ET0	=	0x00a9
                           0000AA   368 _EX1	=	0x00aa
                           0000AB   369 _ET1	=	0x00ab
                           0000AC   370 _ES	=	0x00ac
                           0000AF   371 _EA	=	0x00af
                           0000B0   372 _P3_0	=	0x00b0
                           0000B1   373 _P3_1	=	0x00b1
                           0000B2   374 _P3_2	=	0x00b2
                           0000B3   375 _P3_3	=	0x00b3
                           0000B4   376 _P3_4	=	0x00b4
                           0000B5   377 _P3_5	=	0x00b5
                           0000B6   378 _P3_6	=	0x00b6
                           0000B7   379 _P3_7	=	0x00b7
                           0000B0   380 _RXD	=	0x00b0
                           0000B1   381 _TXD	=	0x00b1
                           0000B2   382 _INT0	=	0x00b2
                           0000B3   383 _INT1	=	0x00b3
                           0000B4   384 _T0	=	0x00b4
                           0000B5   385 _T1	=	0x00b5
                           0000B6   386 _WR	=	0x00b6
                           0000B7   387 _RD	=	0x00b7
                           0000B8   388 _PX0	=	0x00b8
                           0000B9   389 _PT0	=	0x00b9
                           0000BA   390 _PX1	=	0x00ba
                           0000BB   391 _PT1	=	0x00bb
                           0000BC   392 _PS	=	0x00bc
                           0000D0   393 _P	=	0x00d0
                           0000D1   394 _F1	=	0x00d1
                           0000D2   395 _OV	=	0x00d2
                           0000D3   396 _RS0	=	0x00d3
                           0000D4   397 _RS1	=	0x00d4
                           0000D5   398 _F0	=	0x00d5
                           0000D6   399 _AC	=	0x00d6
                           0000D7   400 _CY	=	0x00d7
                           0000AD   401 _ET2	=	0x00ad
                           0000BD   402 _PT2	=	0x00bd
                           0000C8   403 _T2CON_0	=	0x00c8
                           0000C9   404 _T2CON_1	=	0x00c9
                           0000CA   405 _T2CON_2	=	0x00ca
                           0000CB   406 _T2CON_3	=	0x00cb
                           0000CC   407 _T2CON_4	=	0x00cc
                           0000CD   408 _T2CON_5	=	0x00cd
                           0000CE   409 _T2CON_6	=	0x00ce
                           0000CF   410 _T2CON_7	=	0x00cf
                           0000C8   411 _CP_RL2	=	0x00c8
                           0000C9   412 _C_T2	=	0x00c9
                           0000CA   413 _TR2	=	0x00ca
                           0000CB   414 _EXEN2	=	0x00cb
                           0000CC   415 _TCLK	=	0x00cc
                           0000CD   416 _RCLK	=	0x00cd
                           0000CE   417 _EXF2	=	0x00ce
                           0000CF   418 _TF2	=	0x00cf
                           0000DF   419 _CF	=	0x00df
                           0000DE   420 _CR	=	0x00de
                           0000DC   421 _CCF4	=	0x00dc
                           0000DB   422 _CCF3	=	0x00db
                           0000DA   423 _CCF2	=	0x00da
                           0000D9   424 _CCF1	=	0x00d9
                           0000D8   425 _CCF0	=	0x00d8
                           0000AE   426 _EC	=	0x00ae
                           0000BE   427 _PPCL	=	0x00be
                           0000BD   428 _PT2L	=	0x00bd
                           0000BC   429 _PSL	=	0x00bc
                           0000BB   430 _PT1L	=	0x00bb
                           0000BA   431 _PX1L	=	0x00ba
                           0000B9   432 _PT0L	=	0x00b9
                           0000B8   433 _PX0L	=	0x00b8
                           0000C0   434 _P4_0	=	0x00c0
                           0000C1   435 _P4_1	=	0x00c1
                           0000C2   436 _P4_2	=	0x00c2
                           0000C3   437 _P4_3	=	0x00c3
                           0000C4   438 _P4_4	=	0x00c4
                           0000C5   439 _P4_5	=	0x00c5
                           0000C6   440 _P4_6	=	0x00c6
                           0000C7   441 _P4_7	=	0x00c7
                           0000E8   442 _P5_0	=	0x00e8
                           0000E9   443 _P5_1	=	0x00e9
                           0000EA   444 _P5_2	=	0x00ea
                           0000EB   445 _P5_3	=	0x00eb
                           0000EC   446 _P5_4	=	0x00ec
                           0000ED   447 _P5_5	=	0x00ed
                           0000EE   448 _P5_6	=	0x00ee
                           0000EF   449 _P5_7	=	0x00ef
                                    450 ;--------------------------------------------------------
                                    451 ; overlayable register banks
                                    452 ;--------------------------------------------------------
                                    453 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        454 	.ds 8
                                    455 ;--------------------------------------------------------
                                    456 ; internal ram data
                                    457 ;--------------------------------------------------------
                                    458 	.area DSEG    (DATA)
      000000                        459 _Byte_Read_Sequential_l_131073_24:
      000000                        460 	.ds 2
      000002                        461 _Byte_Read_Sequential_k_262145_26:
      000002                        462 	.ds 2
                                    463 ;--------------------------------------------------------
                                    464 ; overlayable items in internal ram
                                    465 ;--------------------------------------------------------
                                    466 	.area	OSEG    (OVR,DATA)
                                    467 ;--------------------------------------------------------
                                    468 ; indirectly addressable internal ram data
                                    469 ;--------------------------------------------------------
                                    470 	.area ISEG    (DATA)
                                    471 ;--------------------------------------------------------
                                    472 ; absolute internal ram data
                                    473 ;--------------------------------------------------------
                                    474 	.area IABS    (ABS,DATA)
                                    475 	.area IABS    (ABS,DATA)
                                    476 ;--------------------------------------------------------
                                    477 ; bit data
                                    478 ;--------------------------------------------------------
                                    479 	.area BSEG    (BIT)
                                    480 ;--------------------------------------------------------
                                    481 ; paged external ram data
                                    482 ;--------------------------------------------------------
                                    483 	.area PSEG    (PAG,XDATA)
                                    484 ;--------------------------------------------------------
                                    485 ; external ram data
                                    486 ;--------------------------------------------------------
                                    487 	.area XSEG    (XDATA)
      000000                        488 _Byte_Write_PARM_2:
      000000                        489 	.ds 1
      000001                        490 _Byte_Write_PARM_3:
      000001                        491 	.ds 1
      000002                        492 _Byte_Write_data_65536_13:
      000002                        493 	.ds 1
      000003                        494 _Byte_Read_PARM_2:
      000003                        495 	.ds 1
      000004                        496 _Byte_Read_block_65536_16:
      000004                        497 	.ds 1
      000005                        498 _Byte_Read_Sequential_PARM_2:
      000005                        499 	.ds 1
      000006                        500 _Byte_Read_Sequential_PARM_3:
      000006                        501 	.ds 1
      000007                        502 _Byte_Read_Sequential_block_65536_21:
      000007                        503 	.ds 1
      000008                        504 _Byte_Read_Sequential_buffer_65536_22:
      000008                        505 	.ds 256
                                    506 ;--------------------------------------------------------
                                    507 ; absolute external ram data
                                    508 ;--------------------------------------------------------
                                    509 	.area XABS    (ABS,XDATA)
                                    510 ;--------------------------------------------------------
                                    511 ; external initialized ram data
                                    512 ;--------------------------------------------------------
                                    513 	.area XISEG   (XDATA)
                                    514 	.area HOME    (CODE)
                                    515 	.area GSINIT0 (CODE)
                                    516 	.area GSINIT1 (CODE)
                                    517 	.area GSINIT2 (CODE)
                                    518 	.area GSINIT3 (CODE)
                                    519 	.area GSINIT4 (CODE)
                                    520 	.area GSINIT5 (CODE)
                                    521 	.area GSINIT  (CODE)
                                    522 	.area GSFINAL (CODE)
                                    523 	.area CSEG    (CODE)
                                    524 ;--------------------------------------------------------
                                    525 ; global & static initialisations
                                    526 ;--------------------------------------------------------
                                    527 	.area HOME    (CODE)
                                    528 	.area GSINIT  (CODE)
                                    529 	.area GSFINAL (CODE)
                                    530 	.area GSINIT  (CODE)
                                    531 ;--------------------------------------------------------
                                    532 ; Home
                                    533 ;--------------------------------------------------------
                                    534 	.area HOME    (CODE)
                                    535 	.area HOME    (CODE)
                                    536 ;--------------------------------------------------------
                                    537 ; code
                                    538 ;--------------------------------------------------------
                                    539 	.area CSEG    (CODE)
                                    540 ;------------------------------------------------------------
                                    541 ;Allocation info for local variables in function 'delay'
                                    542 ;------------------------------------------------------------
                                    543 ;t                         Allocated to registers 
                                    544 ;------------------------------------------------------------
                                    545 ;	i2c_bit_bang.c:17: void delay(unsigned int t)
                                    546 ;	-----------------------------------------
                                    547 ;	 function delay
                                    548 ;	-----------------------------------------
      000000                        549 _delay:
                           000007   550 	ar7 = 0x07
                           000006   551 	ar6 = 0x06
                           000005   552 	ar5 = 0x05
                           000004   553 	ar4 = 0x04
                           000003   554 	ar3 = 0x03
                           000002   555 	ar2 = 0x02
                           000001   556 	ar1 = 0x01
                           000000   557 	ar0 = 0x00
      000000 AE 82            [24]  558 	mov	r6,dpl
      000002 AF 83            [24]  559 	mov	r7,dph
                                    560 ;	i2c_bit_bang.c:19: while(t--){
      000004                        561 00101$:
      000004 8E 04            [24]  562 	mov	ar4,r6
      000006 8F 05            [24]  563 	mov	ar5,r7
      000008 1E               [12]  564 	dec	r6
      000009 BE FF 01         [24]  565 	cjne	r6,#0xff,00115$
      00000C 1F               [12]  566 	dec	r7
      00000D                        567 00115$:
      00000D EC               [12]  568 	mov	a,r4
      00000E 4D               [12]  569 	orl	a,r5
      00000F 60 03            [24]  570 	jz	00104$
                                    571 ;	i2c_bit_bang.c:20: NOP;  // Assembly NOP instruction for delaying program execution.
      000011 00               [12]  572 	nop	
      000012 80 F0            [24]  573 	sjmp	00101$
      000014                        574 00104$:
                                    575 ;	i2c_bit_bang.c:22: }
      000014 22               [24]  576 	ret
                                    577 ;------------------------------------------------------------
                                    578 ;Allocation info for local variables in function 'sendByte'
                                    579 ;------------------------------------------------------------
                                    580 ;byte                      Allocated to registers r7 
                                    581 ;i                         Allocated to registers r5 r6 
                                    582 ;------------------------------------------------------------
                                    583 ;	i2c_bit_bang.c:28: void sendByte(uint8_t byte) {
                                    584 ;	-----------------------------------------
                                    585 ;	 function sendByte
                                    586 ;	-----------------------------------------
      000015                        587 _sendByte:
      000015 AF 82            [24]  588 	mov	r7,dpl
                                    589 ;	i2c_bit_bang.c:29: for(int i = 0; i < BYTE_LENGTH; i++){
      000017 7D 00            [12]  590 	mov	r5,#0x00
      000019 7E 00            [12]  591 	mov	r6,#0x00
      00001B                        592 00103$:
      00001B C3               [12]  593 	clr	c
      00001C ED               [12]  594 	mov	a,r5
      00001D 94 08            [12]  595 	subb	a,#0x08
      00001F EE               [12]  596 	mov	a,r6
      000020 64 80            [12]  597 	xrl	a,#0x80
      000022 94 80            [12]  598 	subb	a,#0x80
      000024 50 3C            [24]  599 	jnc	00105$
                                    600 ;	i2c_bit_bang.c:30: SDA = byte & (0b10000000);
      000026 EF               [12]  601 	mov	a,r7
      000027 23               [12]  602 	rl	a
      000028 54 01            [12]  603 	anl	a,#0x01
                                    604 ;	assignBit
      00002A 24 FF            [12]  605 	add	a,#0xff
      00002C 92 93            [24]  606 	mov	_P1_3,c
                                    607 ;	i2c_bit_bang.c:31: SCL = PULSE_HIGH;
                                    608 ;	assignBit
      00002E D2 92            [12]  609 	setb	_P1_2
                                    610 ;	i2c_bit_bang.c:32: delay(2);
      000030 90 00 02         [24]  611 	mov	dptr,#0x0002
      000033 C0 07            [24]  612 	push	ar7
      000035 C0 06            [24]  613 	push	ar6
      000037 C0 05            [24]  614 	push	ar5
      000039 12r00r00         [24]  615 	lcall	_delay
      00003C D0 05            [24]  616 	pop	ar5
      00003E D0 06            [24]  617 	pop	ar6
      000040 D0 07            [24]  618 	pop	ar7
                                    619 ;	i2c_bit_bang.c:33: SCL = PULSE_LOW;
                                    620 ;	assignBit
      000042 C2 92            [12]  621 	clr	_P1_2
                                    622 ;	i2c_bit_bang.c:34: byte = byte << 1;
      000044 8F 04            [24]  623 	mov	ar4,r7
      000046 EC               [12]  624 	mov	a,r4
      000047 2C               [12]  625 	add	a,r4
      000048 FF               [12]  626 	mov	r7,a
                                    627 ;	i2c_bit_bang.c:35: delay(0);
      000049 90 00 00         [24]  628 	mov	dptr,#0x0000
      00004C C0 07            [24]  629 	push	ar7
      00004E C0 06            [24]  630 	push	ar6
      000050 C0 05            [24]  631 	push	ar5
      000052 12r00r00         [24]  632 	lcall	_delay
      000055 D0 05            [24]  633 	pop	ar5
      000057 D0 06            [24]  634 	pop	ar6
      000059 D0 07            [24]  635 	pop	ar7
                                    636 ;	i2c_bit_bang.c:29: for(int i = 0; i < BYTE_LENGTH; i++){
      00005B 0D               [12]  637 	inc	r5
      00005C BD 00 BC         [24]  638 	cjne	r5,#0x00,00103$
      00005F 0E               [12]  639 	inc	r6
      000060 80 B9            [24]  640 	sjmp	00103$
      000062                        641 00105$:
                                    642 ;	i2c_bit_bang.c:37: }
      000062 22               [24]  643 	ret
                                    644 ;------------------------------------------------------------
                                    645 ;Allocation info for local variables in function 'Byte_Write'
                                    646 ;------------------------------------------------------------
                                    647 ;byte                      Allocated to registers 
                                    648 ;block                     Allocated with name '_Byte_Write_PARM_2'
                                    649 ;address                   Allocated with name '_Byte_Write_PARM_3'
                                    650 ;data                      Allocated with name '_Byte_Write_data_65536_13'
                                    651 ;------------------------------------------------------------
                                    652 ;	i2c_bit_bang.c:45: void Byte_Write(__xdata uint8_t data, __xdata uint8_t block, __xdata uint8_t address){
                                    653 ;	-----------------------------------------
                                    654 ;	 function Byte_Write
                                    655 ;	-----------------------------------------
      000063                        656 _Byte_Write:
      000063 E5 82            [12]  657 	mov	a,dpl
      000065 90r00r02         [24]  658 	mov	dptr,#_Byte_Write_data_65536_13
      000068 F0               [24]  659 	movx	@dptr,a
                                    660 ;	i2c_bit_bang.c:47: SCL = PULSE_HIGH;
                                    661 ;	assignBit
      000069 D2 92            [12]  662 	setb	_P1_2
                                    663 ;	i2c_bit_bang.c:48: SDA = PULSE_HIGH;
                                    664 ;	assignBit
      00006B D2 93            [12]  665 	setb	_P1_3
                                    666 ;	i2c_bit_bang.c:51: delay(2);
      00006D 90 00 02         [24]  667 	mov	dptr,#0x0002
      000070 12r00r00         [24]  668 	lcall	_delay
                                    669 ;	i2c_bit_bang.c:52: SDA = PULSE_LOW;
                                    670 ;	assignBit
      000073 C2 93            [12]  671 	clr	_P1_3
                                    672 ;	i2c_bit_bang.c:53: delay(2);
      000075 90 00 02         [24]  673 	mov	dptr,#0x0002
      000078 12r00r00         [24]  674 	lcall	_delay
                                    675 ;	i2c_bit_bang.c:54: SCL = PULSE_LOW;
                                    676 ;	assignBit
      00007B C2 92            [12]  677 	clr	_P1_2
                                    678 ;	i2c_bit_bang.c:57: uint8_t byte = START_BYTE | (block << 1) | WRITE_BYTE;
      00007D 90r00r00         [24]  679 	mov	dptr,#_Byte_Write_PARM_2
      000080 E0               [24]  680 	movx	a,@dptr
      000081 25 E0            [12]  681 	add	a,acc
      000083 FF               [12]  682 	mov	r7,a
      000084 74 A0            [12]  683 	mov	a,#0xa0
      000086 4F               [12]  684 	orl	a,r7
      000087 F5 82            [12]  685 	mov	dpl,a
                                    686 ;	i2c_bit_bang.c:60: sendByte(byte);
      000089 12r00r15         [24]  687 	lcall	_sendByte
                                    688 ;	i2c_bit_bang.c:61: SDA = PULSE_HIGH;
                                    689 ;	assignBit
      00008C D2 93            [12]  690 	setb	_P1_3
                                    691 ;	i2c_bit_bang.c:62: SCL = PULSE_HIGH;
                                    692 ;	assignBit
      00008E D2 92            [12]  693 	setb	_P1_2
                                    694 ;	i2c_bit_bang.c:63: delay(2);
      000090 90 00 02         [24]  695 	mov	dptr,#0x0002
      000093 12r00r00         [24]  696 	lcall	_delay
                                    697 ;	i2c_bit_bang.c:69: SCL = PULSE_LOW;
                                    698 ;	assignBit
      000096 C2 92            [12]  699 	clr	_P1_2
                                    700 ;	i2c_bit_bang.c:70: delay(0);
      000098 90 00 00         [24]  701 	mov	dptr,#0x0000
      00009B 12r00r00         [24]  702 	lcall	_delay
                                    703 ;	i2c_bit_bang.c:72: sendByte(address);
      00009E 90r00r01         [24]  704 	mov	dptr,#_Byte_Write_PARM_3
      0000A1 E0               [24]  705 	movx	a,@dptr
      0000A2 F5 82            [12]  706 	mov	dpl,a
      0000A4 12r00r15         [24]  707 	lcall	_sendByte
                                    708 ;	i2c_bit_bang.c:73: SDA = PULSE_HIGH;
                                    709 ;	assignBit
      0000A7 D2 93            [12]  710 	setb	_P1_3
                                    711 ;	i2c_bit_bang.c:74: SCL = PULSE_HIGH;
                                    712 ;	assignBit
      0000A9 D2 92            [12]  713 	setb	_P1_2
                                    714 ;	i2c_bit_bang.c:75: delay(2);
      0000AB 90 00 02         [24]  715 	mov	dptr,#0x0002
      0000AE 12r00r00         [24]  716 	lcall	_delay
                                    717 ;	i2c_bit_bang.c:81: SCL = PULSE_LOW;
                                    718 ;	assignBit
      0000B1 C2 92            [12]  719 	clr	_P1_2
                                    720 ;	i2c_bit_bang.c:82: delay(0);
      0000B3 90 00 00         [24]  721 	mov	dptr,#0x0000
      0000B6 12r00r00         [24]  722 	lcall	_delay
                                    723 ;	i2c_bit_bang.c:84: sendByte(data);
      0000B9 90r00r02         [24]  724 	mov	dptr,#_Byte_Write_data_65536_13
      0000BC E0               [24]  725 	movx	a,@dptr
      0000BD F5 82            [12]  726 	mov	dpl,a
      0000BF 12r00r15         [24]  727 	lcall	_sendByte
                                    728 ;	i2c_bit_bang.c:87: SDA = PULSE_HIGH;
                                    729 ;	assignBit
      0000C2 D2 93            [12]  730 	setb	_P1_3
                                    731 ;	i2c_bit_bang.c:88: SCL = PULSE_HIGH;
                                    732 ;	assignBit
      0000C4 D2 92            [12]  733 	setb	_P1_2
                                    734 ;	i2c_bit_bang.c:89: delay(2);
      0000C6 90 00 02         [24]  735 	mov	dptr,#0x0002
      0000C9 12r00r00         [24]  736 	lcall	_delay
                                    737 ;	i2c_bit_bang.c:98: SCL = PULSE_LOW;
                                    738 ;	assignBit
      0000CC C2 92            [12]  739 	clr	_P1_2
                                    740 ;	i2c_bit_bang.c:99: delay(1);
      0000CE 90 00 01         [24]  741 	mov	dptr,#0x0001
      0000D1 12r00r00         [24]  742 	lcall	_delay
                                    743 ;	i2c_bit_bang.c:100: SDA = PULSE_LOW;
                                    744 ;	assignBit
      0000D4 C2 93            [12]  745 	clr	_P1_3
                                    746 ;	i2c_bit_bang.c:101: delay(1);
      0000D6 90 00 01         [24]  747 	mov	dptr,#0x0001
      0000D9 12r00r00         [24]  748 	lcall	_delay
                                    749 ;	i2c_bit_bang.c:102: SCL = PULSE_HIGH;
                                    750 ;	assignBit
      0000DC D2 92            [12]  751 	setb	_P1_2
                                    752 ;	i2c_bit_bang.c:103: delay(0);
      0000DE 90 00 00         [24]  753 	mov	dptr,#0x0000
      0000E1 12r00r00         [24]  754 	lcall	_delay
                                    755 ;	i2c_bit_bang.c:104: SDA = PULSE_HIGH;
                                    756 ;	assignBit
      0000E4 D2 93            [12]  757 	setb	_P1_3
                                    758 ;	i2c_bit_bang.c:105: }
      0000E6 22               [24]  759 	ret
                                    760 ;------------------------------------------------------------
                                    761 ;Allocation info for local variables in function 'Byte_Read'
                                    762 ;------------------------------------------------------------
                                    763 ;byte                      Allocated to registers r4 
                                    764 ;k                         Allocated to registers r5 r6 
                                    765 ;address                   Allocated with name '_Byte_Read_PARM_2'
                                    766 ;block                     Allocated with name '_Byte_Read_block_65536_16'
                                    767 ;------------------------------------------------------------
                                    768 ;	i2c_bit_bang.c:113: __xdata uint8_t Byte_Read(__xdata uint8_t block, __xdata uint8_t address){
                                    769 ;	-----------------------------------------
                                    770 ;	 function Byte_Read
                                    771 ;	-----------------------------------------
      0000E7                        772 _Byte_Read:
      0000E7 E5 82            [12]  773 	mov	a,dpl
      0000E9 90r00r04         [24]  774 	mov	dptr,#_Byte_Read_block_65536_16
      0000EC F0               [24]  775 	movx	@dptr,a
                                    776 ;	i2c_bit_bang.c:115: SCL = PULSE_HIGH;
                                    777 ;	assignBit
      0000ED D2 92            [12]  778 	setb	_P1_2
                                    779 ;	i2c_bit_bang.c:116: SDA = PULSE_HIGH;
                                    780 ;	assignBit
      0000EF D2 93            [12]  781 	setb	_P1_3
                                    782 ;	i2c_bit_bang.c:119: delay(2);
      0000F1 90 00 02         [24]  783 	mov	dptr,#0x0002
      0000F4 12r00r00         [24]  784 	lcall	_delay
                                    785 ;	i2c_bit_bang.c:120: SDA = PULSE_LOW;
                                    786 ;	assignBit
      0000F7 C2 93            [12]  787 	clr	_P1_3
                                    788 ;	i2c_bit_bang.c:121: delay(2);
      0000F9 90 00 02         [24]  789 	mov	dptr,#0x0002
      0000FC 12r00r00         [24]  790 	lcall	_delay
                                    791 ;	i2c_bit_bang.c:122: SCL = PULSE_LOW;
                                    792 ;	assignBit
      0000FF C2 92            [12]  793 	clr	_P1_2
                                    794 ;	i2c_bit_bang.c:125: uint8_t byte = START_BYTE | (block << 1) | WRITE_BYTE;
      000101 90r00r04         [24]  795 	mov	dptr,#_Byte_Read_block_65536_16
      000104 E0               [24]  796 	movx	a,@dptr
      000105 25 E0            [12]  797 	add	a,acc
      000107 FF               [12]  798 	mov	r7,a
      000108 74 A0            [12]  799 	mov	a,#0xa0
      00010A 4F               [12]  800 	orl	a,r7
      00010B F5 82            [12]  801 	mov	dpl,a
                                    802 ;	i2c_bit_bang.c:128: sendByte(byte);
      00010D C0 07            [24]  803 	push	ar7
      00010F 12r00r15         [24]  804 	lcall	_sendByte
                                    805 ;	i2c_bit_bang.c:129: SDA = PULSE_HIGH;
                                    806 ;	assignBit
      000112 D2 93            [12]  807 	setb	_P1_3
                                    808 ;	i2c_bit_bang.c:130: SCL = PULSE_HIGH;
                                    809 ;	assignBit
      000114 D2 92            [12]  810 	setb	_P1_2
                                    811 ;	i2c_bit_bang.c:131: delay(3);
      000116 90 00 03         [24]  812 	mov	dptr,#0x0003
      000119 12r00r00         [24]  813 	lcall	_delay
                                    814 ;	i2c_bit_bang.c:137: SCL = PULSE_LOW;
                                    815 ;	assignBit
      00011C C2 92            [12]  816 	clr	_P1_2
                                    817 ;	i2c_bit_bang.c:138: delay(0);
      00011E 90 00 00         [24]  818 	mov	dptr,#0x0000
      000121 12r00r00         [24]  819 	lcall	_delay
                                    820 ;	i2c_bit_bang.c:140: sendByte(address);
      000124 90r00r03         [24]  821 	mov	dptr,#_Byte_Read_PARM_2
      000127 E0               [24]  822 	movx	a,@dptr
      000128 F5 82            [12]  823 	mov	dpl,a
      00012A 12r00r15         [24]  824 	lcall	_sendByte
                                    825 ;	i2c_bit_bang.c:141: SDA = PULSE_HIGH;
                                    826 ;	assignBit
      00012D D2 93            [12]  827 	setb	_P1_3
                                    828 ;	i2c_bit_bang.c:142: SCL = PULSE_HIGH;
                                    829 ;	assignBit
      00012F D2 92            [12]  830 	setb	_P1_2
                                    831 ;	i2c_bit_bang.c:143: delay(2);
      000131 90 00 02         [24]  832 	mov	dptr,#0x0002
      000134 12r00r00         [24]  833 	lcall	_delay
                                    834 ;	i2c_bit_bang.c:149: SCL = PULSE_LOW;
                                    835 ;	assignBit
      000137 C2 92            [12]  836 	clr	_P1_2
                                    837 ;	i2c_bit_bang.c:150: SDA = PULSE_HIGH;
                                    838 ;	assignBit
      000139 D2 93            [12]  839 	setb	_P1_3
                                    840 ;	i2c_bit_bang.c:151: delay(2);
      00013B 90 00 02         [24]  841 	mov	dptr,#0x0002
      00013E 12r00r00         [24]  842 	lcall	_delay
                                    843 ;	i2c_bit_bang.c:152: SCL = PULSE_HIGH;
                                    844 ;	assignBit
      000141 D2 92            [12]  845 	setb	_P1_2
                                    846 ;	i2c_bit_bang.c:153: delay(0);
      000143 90 00 00         [24]  847 	mov	dptr,#0x0000
      000146 12r00r00         [24]  848 	lcall	_delay
                                    849 ;	i2c_bit_bang.c:154: SDA = PULSE_LOW;
                                    850 ;	assignBit
      000149 C2 93            [12]  851 	clr	_P1_3
                                    852 ;	i2c_bit_bang.c:155: delay(2);
      00014B 90 00 02         [24]  853 	mov	dptr,#0x0002
      00014E 12r00r00         [24]  854 	lcall	_delay
      000151 D0 07            [24]  855 	pop	ar7
                                    856 ;	i2c_bit_bang.c:156: SCL = PULSE_LOW;
                                    857 ;	assignBit
      000153 C2 92            [12]  858 	clr	_P1_2
                                    859 ;	i2c_bit_bang.c:157: byte = START_BYTE | (block << 1) | READ_BYTE;
      000155 74 A1            [12]  860 	mov	a,#0xa1
      000157 4F               [12]  861 	orl	a,r7
      000158 F5 82            [12]  862 	mov	dpl,a
                                    863 ;	i2c_bit_bang.c:160: sendByte(byte);
      00015A 12r00r15         [24]  864 	lcall	_sendByte
                                    865 ;	i2c_bit_bang.c:162: SDA = PULSE_HIGH;
                                    866 ;	assignBit
      00015D D2 93            [12]  867 	setb	_P1_3
                                    868 ;	i2c_bit_bang.c:163: delay(2);
      00015F 90 00 02         [24]  869 	mov	dptr,#0x0002
      000162 12r00r00         [24]  870 	lcall	_delay
                                    871 ;	i2c_bit_bang.c:169: SCL = PULSE_HIGH;
                                    872 ;	assignBit
      000165 D2 92            [12]  873 	setb	_P1_2
                                    874 ;	i2c_bit_bang.c:170: delay(2);
      000167 90 00 02         [24]  875 	mov	dptr,#0x0002
      00016A 12r00r00         [24]  876 	lcall	_delay
                                    877 ;	i2c_bit_bang.c:171: SCL = PULSE_LOW;
                                    878 ;	assignBit
      00016D C2 92            [12]  879 	clr	_P1_2
                                    880 ;	i2c_bit_bang.c:172: delay(2);
      00016F 90 00 02         [24]  881 	mov	dptr,#0x0002
      000172 12r00r00         [24]  882 	lcall	_delay
                                    883 ;	i2c_bit_bang.c:173: byte = 0;
      000175 7F 00            [12]  884 	mov	r7,#0x00
                                    885 ;	i2c_bit_bang.c:174: for(int k = 0; k < BYTE_LENGTH; k++){
      000177 7D 00            [12]  886 	mov	r5,#0x00
      000179 7E 00            [12]  887 	mov	r6,#0x00
      00017B                        888 00103$:
      00017B C3               [12]  889 	clr	c
      00017C ED               [12]  890 	mov	a,r5
      00017D 94 08            [12]  891 	subb	a,#0x08
      00017F EE               [12]  892 	mov	a,r6
      000180 64 80            [12]  893 	xrl	a,#0x80
      000182 94 80            [12]  894 	subb	a,#0x80
      000184 50 3A            [24]  895 	jnc	00101$
                                    896 ;	i2c_bit_bang.c:175: byte = byte << 1;
      000186 8F 04            [24]  897 	mov	ar4,r7
      000188 EC               [12]  898 	mov	a,r4
      000189 2C               [12]  899 	add	a,r4
      00018A FC               [12]  900 	mov	r4,a
                                    901 ;	i2c_bit_bang.c:176: SCL = PULSE_HIGH;
                                    902 ;	assignBit
      00018B D2 92            [12]  903 	setb	_P1_2
                                    904 ;	i2c_bit_bang.c:177: delay(2);
      00018D 90 00 02         [24]  905 	mov	dptr,#0x0002
      000190 C0 06            [24]  906 	push	ar6
      000192 C0 05            [24]  907 	push	ar5
      000194 C0 04            [24]  908 	push	ar4
      000196 12r00r00         [24]  909 	lcall	_delay
      000199 D0 04            [24]  910 	pop	ar4
      00019B D0 05            [24]  911 	pop	ar5
      00019D D0 06            [24]  912 	pop	ar6
                                    913 ;	i2c_bit_bang.c:178: byte |= SDA;
      00019F A2 93            [12]  914 	mov	c,_P1_3
      0001A1 E4               [12]  915 	clr	a
      0001A2 33               [12]  916 	rlc	a
      0001A3 4C               [12]  917 	orl	a,r4
      0001A4 FF               [12]  918 	mov	r7,a
                                    919 ;	i2c_bit_bang.c:179: SCL = PULSE_LOW;
                                    920 ;	assignBit
      0001A5 C2 92            [12]  921 	clr	_P1_2
                                    922 ;	i2c_bit_bang.c:180: delay(1);
      0001A7 90 00 01         [24]  923 	mov	dptr,#0x0001
      0001AA C0 07            [24]  924 	push	ar7
      0001AC C0 06            [24]  925 	push	ar6
      0001AE C0 05            [24]  926 	push	ar5
      0001B0 12r00r00         [24]  927 	lcall	_delay
      0001B3 D0 05            [24]  928 	pop	ar5
      0001B5 D0 06            [24]  929 	pop	ar6
      0001B7 D0 07            [24]  930 	pop	ar7
                                    931 ;	i2c_bit_bang.c:174: for(int k = 0; k < BYTE_LENGTH; k++){
      0001B9 0D               [12]  932 	inc	r5
      0001BA BD 00 BE         [24]  933 	cjne	r5,#0x00,00103$
      0001BD 0E               [12]  934 	inc	r6
      0001BE 80 BB            [24]  935 	sjmp	00103$
      0001C0                        936 00101$:
                                    937 ;	i2c_bit_bang.c:183: SDA = PULSE_HIGH;
                                    938 ;	assignBit
      0001C0 D2 93            [12]  939 	setb	_P1_3
                                    940 ;	i2c_bit_bang.c:184: delay(2);
      0001C2 90 00 02         [24]  941 	mov	dptr,#0x0002
      0001C5 C0 07            [24]  942 	push	ar7
      0001C7 12r00r00         [24]  943 	lcall	_delay
                                    944 ;	i2c_bit_bang.c:185: SCL = PULSE_HIGH;
                                    945 ;	assignBit
      0001CA D2 92            [12]  946 	setb	_P1_2
                                    947 ;	i2c_bit_bang.c:186: delay(2);
      0001CC 90 00 02         [24]  948 	mov	dptr,#0x0002
      0001CF 12r00r00         [24]  949 	lcall	_delay
                                    950 ;	i2c_bit_bang.c:187: SCL = PULSE_LOW;
                                    951 ;	assignBit
      0001D2 C2 92            [12]  952 	clr	_P1_2
                                    953 ;	i2c_bit_bang.c:188: SDA = PULSE_LOW;
                                    954 ;	assignBit
      0001D4 C2 93            [12]  955 	clr	_P1_3
                                    956 ;	i2c_bit_bang.c:189: delay(2);
      0001D6 90 00 02         [24]  957 	mov	dptr,#0x0002
      0001D9 12r00r00         [24]  958 	lcall	_delay
                                    959 ;	i2c_bit_bang.c:190: SCL = PULSE_HIGH;
                                    960 ;	assignBit
      0001DC D2 92            [12]  961 	setb	_P1_2
                                    962 ;	i2c_bit_bang.c:191: delay(2);
      0001DE 90 00 02         [24]  963 	mov	dptr,#0x0002
      0001E1 12r00r00         [24]  964 	lcall	_delay
                                    965 ;	i2c_bit_bang.c:192: SDA = PULSE_HIGH;
                                    966 ;	assignBit
      0001E4 D2 93            [12]  967 	setb	_P1_3
                                    968 ;	i2c_bit_bang.c:193: delay(2);
      0001E6 90 00 02         [24]  969 	mov	dptr,#0x0002
      0001E9 12r00r00         [24]  970 	lcall	_delay
                                    971 ;	i2c_bit_bang.c:194: SCL = PULSE_LOW;
                                    972 ;	assignBit
      0001EC C2 92            [12]  973 	clr	_P1_2
                                    974 ;	i2c_bit_bang.c:195: delay(2);
      0001EE 90 00 02         [24]  975 	mov	dptr,#0x0002
      0001F1 12r00r00         [24]  976 	lcall	_delay
      0001F4 D0 07            [24]  977 	pop	ar7
                                    978 ;	i2c_bit_bang.c:196: return byte;
      0001F6 8F 82            [24]  979 	mov	dpl,r7
                                    980 ;	i2c_bit_bang.c:197: }
      0001F8 22               [24]  981 	ret
                                    982 ;------------------------------------------------------------
                                    983 ;Allocation info for local variables in function 'Byte_Read_Sequential'
                                    984 ;------------------------------------------------------------
                                    985 ;byte                      Allocated to registers 
                                    986 ;l                         Allocated with name '_Byte_Read_Sequential_l_131073_24'
                                    987 ;k                         Allocated with name '_Byte_Read_Sequential_k_262145_26'
                                    988 ;start_address             Allocated with name '_Byte_Read_Sequential_PARM_2'
                                    989 ;address_range             Allocated with name '_Byte_Read_Sequential_PARM_3'
                                    990 ;block                     Allocated with name '_Byte_Read_Sequential_block_65536_21'
                                    991 ;buffer                    Allocated with name '_Byte_Read_Sequential_buffer_65536_22'
                                    992 ;------------------------------------------------------------
                                    993 ;	i2c_bit_bang.c:207: __xdata uint8_t * Byte_Read_Sequential(__xdata uint8_t block, __xdata uint8_t start_address,
                                    994 ;	-----------------------------------------
                                    995 ;	 function Byte_Read_Sequential
                                    996 ;	-----------------------------------------
      0001F9                        997 _Byte_Read_Sequential:
      0001F9 E5 82            [12]  998 	mov	a,dpl
      0001FB 90r00r07         [24]  999 	mov	dptr,#_Byte_Read_Sequential_block_65536_21
      0001FE F0               [24] 1000 	movx	@dptr,a
                                   1001 ;	i2c_bit_bang.c:210: __xdata uint8_t buffer[256] = {0};
      0001FF 90r00r08         [24] 1002 	mov	dptr,#_Byte_Read_Sequential_buffer_65536_22
      000202 E4               [12] 1003 	clr	a
      000203 F0               [24] 1004 	movx	@dptr,a
      000204 90r00r09         [24] 1005 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0001)
      000207 F0               [24] 1006 	movx	@dptr,a
      000208 90r00r0A         [24] 1007 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0002)
      00020B F0               [24] 1008 	movx	@dptr,a
      00020C 90r00r0B         [24] 1009 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0003)
      00020F F0               [24] 1010 	movx	@dptr,a
      000210 90r00r0C         [24] 1011 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0004)
      000213 F0               [24] 1012 	movx	@dptr,a
      000214 90r00r0D         [24] 1013 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0005)
      000217 F0               [24] 1014 	movx	@dptr,a
      000218 90r00r0E         [24] 1015 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0006)
      00021B F0               [24] 1016 	movx	@dptr,a
      00021C 90r00r0F         [24] 1017 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0007)
      00021F F0               [24] 1018 	movx	@dptr,a
      000220 90r00r10         [24] 1019 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0008)
      000223 F0               [24] 1020 	movx	@dptr,a
      000224 90r00r11         [24] 1021 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0009)
      000227 F0               [24] 1022 	movx	@dptr,a
      000228 90r00r12         [24] 1023 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x000a)
      00022B F0               [24] 1024 	movx	@dptr,a
      00022C 90r00r13         [24] 1025 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x000b)
      00022F F0               [24] 1026 	movx	@dptr,a
      000230 90r00r14         [24] 1027 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x000c)
      000233 F0               [24] 1028 	movx	@dptr,a
      000234 90r00r15         [24] 1029 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x000d)
      000237 F0               [24] 1030 	movx	@dptr,a
      000238 90r00r16         [24] 1031 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x000e)
      00023B F0               [24] 1032 	movx	@dptr,a
      00023C 90r00r17         [24] 1033 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x000f)
      00023F F0               [24] 1034 	movx	@dptr,a
      000240 90r00r18         [24] 1035 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0010)
      000243 F0               [24] 1036 	movx	@dptr,a
      000244 90r00r19         [24] 1037 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0011)
      000247 F0               [24] 1038 	movx	@dptr,a
      000248 90r00r1A         [24] 1039 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0012)
      00024B F0               [24] 1040 	movx	@dptr,a
      00024C 90r00r1B         [24] 1041 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0013)
      00024F F0               [24] 1042 	movx	@dptr,a
      000250 90r00r1C         [24] 1043 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0014)
      000253 F0               [24] 1044 	movx	@dptr,a
      000254 90r00r1D         [24] 1045 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0015)
      000257 F0               [24] 1046 	movx	@dptr,a
      000258 90r00r1E         [24] 1047 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0016)
      00025B F0               [24] 1048 	movx	@dptr,a
      00025C 90r00r1F         [24] 1049 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0017)
      00025F F0               [24] 1050 	movx	@dptr,a
      000260 90r00r20         [24] 1051 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0018)
      000263 F0               [24] 1052 	movx	@dptr,a
      000264 90r00r21         [24] 1053 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0019)
      000267 F0               [24] 1054 	movx	@dptr,a
      000268 90r00r22         [24] 1055 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x001a)
      00026B F0               [24] 1056 	movx	@dptr,a
      00026C 90r00r23         [24] 1057 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x001b)
      00026F F0               [24] 1058 	movx	@dptr,a
      000270 90r00r24         [24] 1059 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x001c)
      000273 F0               [24] 1060 	movx	@dptr,a
      000274 90r00r25         [24] 1061 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x001d)
      000277 F0               [24] 1062 	movx	@dptr,a
      000278 90r00r26         [24] 1063 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x001e)
      00027B F0               [24] 1064 	movx	@dptr,a
      00027C 90r00r27         [24] 1065 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x001f)
      00027F F0               [24] 1066 	movx	@dptr,a
      000280 90r00r28         [24] 1067 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0020)
      000283 F0               [24] 1068 	movx	@dptr,a
      000284 90r00r29         [24] 1069 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0021)
      000287 F0               [24] 1070 	movx	@dptr,a
      000288 90r00r2A         [24] 1071 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0022)
      00028B F0               [24] 1072 	movx	@dptr,a
      00028C 90r00r2B         [24] 1073 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0023)
      00028F F0               [24] 1074 	movx	@dptr,a
      000290 90r00r2C         [24] 1075 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0024)
      000293 F0               [24] 1076 	movx	@dptr,a
      000294 90r00r2D         [24] 1077 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0025)
      000297 F0               [24] 1078 	movx	@dptr,a
      000298 90r00r2E         [24] 1079 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0026)
      00029B F0               [24] 1080 	movx	@dptr,a
      00029C 90r00r2F         [24] 1081 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0027)
      00029F F0               [24] 1082 	movx	@dptr,a
      0002A0 90r00r30         [24] 1083 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0028)
      0002A3 F0               [24] 1084 	movx	@dptr,a
      0002A4 90r00r31         [24] 1085 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0029)
      0002A7 F0               [24] 1086 	movx	@dptr,a
      0002A8 90r00r32         [24] 1087 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x002a)
      0002AB F0               [24] 1088 	movx	@dptr,a
      0002AC 90r00r33         [24] 1089 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x002b)
      0002AF F0               [24] 1090 	movx	@dptr,a
      0002B0 90r00r34         [24] 1091 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x002c)
      0002B3 F0               [24] 1092 	movx	@dptr,a
      0002B4 90r00r35         [24] 1093 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x002d)
      0002B7 F0               [24] 1094 	movx	@dptr,a
      0002B8 90r00r36         [24] 1095 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x002e)
      0002BB F0               [24] 1096 	movx	@dptr,a
      0002BC 90r00r37         [24] 1097 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x002f)
      0002BF F0               [24] 1098 	movx	@dptr,a
      0002C0 90r00r38         [24] 1099 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0030)
      0002C3 F0               [24] 1100 	movx	@dptr,a
      0002C4 90r00r39         [24] 1101 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0031)
      0002C7 F0               [24] 1102 	movx	@dptr,a
      0002C8 90r00r3A         [24] 1103 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0032)
      0002CB F0               [24] 1104 	movx	@dptr,a
      0002CC 90r00r3B         [24] 1105 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0033)
      0002CF F0               [24] 1106 	movx	@dptr,a
      0002D0 90r00r3C         [24] 1107 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0034)
      0002D3 F0               [24] 1108 	movx	@dptr,a
      0002D4 90r00r3D         [24] 1109 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0035)
      0002D7 F0               [24] 1110 	movx	@dptr,a
      0002D8 90r00r3E         [24] 1111 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0036)
      0002DB F0               [24] 1112 	movx	@dptr,a
      0002DC 90r00r3F         [24] 1113 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0037)
      0002DF F0               [24] 1114 	movx	@dptr,a
      0002E0 90r00r40         [24] 1115 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0038)
      0002E3 F0               [24] 1116 	movx	@dptr,a
      0002E4 90r00r41         [24] 1117 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0039)
      0002E7 F0               [24] 1118 	movx	@dptr,a
      0002E8 90r00r42         [24] 1119 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x003a)
      0002EB F0               [24] 1120 	movx	@dptr,a
      0002EC 90r00r43         [24] 1121 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x003b)
      0002EF F0               [24] 1122 	movx	@dptr,a
      0002F0 90r00r44         [24] 1123 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x003c)
      0002F3 F0               [24] 1124 	movx	@dptr,a
      0002F4 90r00r45         [24] 1125 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x003d)
      0002F7 F0               [24] 1126 	movx	@dptr,a
      0002F8 90r00r46         [24] 1127 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x003e)
      0002FB F0               [24] 1128 	movx	@dptr,a
      0002FC 90r00r47         [24] 1129 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x003f)
      0002FF F0               [24] 1130 	movx	@dptr,a
      000300 90r00r48         [24] 1131 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0040)
      000303 F0               [24] 1132 	movx	@dptr,a
      000304 90r00r49         [24] 1133 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0041)
      000307 F0               [24] 1134 	movx	@dptr,a
      000308 90r00r4A         [24] 1135 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0042)
      00030B F0               [24] 1136 	movx	@dptr,a
      00030C 90r00r4B         [24] 1137 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0043)
      00030F F0               [24] 1138 	movx	@dptr,a
      000310 90r00r4C         [24] 1139 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0044)
      000313 F0               [24] 1140 	movx	@dptr,a
      000314 90r00r4D         [24] 1141 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0045)
      000317 F0               [24] 1142 	movx	@dptr,a
      000318 90r00r4E         [24] 1143 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0046)
      00031B F0               [24] 1144 	movx	@dptr,a
      00031C 90r00r4F         [24] 1145 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0047)
      00031F F0               [24] 1146 	movx	@dptr,a
      000320 90r00r50         [24] 1147 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0048)
      000323 F0               [24] 1148 	movx	@dptr,a
      000324 90r00r51         [24] 1149 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0049)
      000327 F0               [24] 1150 	movx	@dptr,a
      000328 90r00r52         [24] 1151 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x004a)
      00032B F0               [24] 1152 	movx	@dptr,a
      00032C 90r00r53         [24] 1153 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x004b)
      00032F F0               [24] 1154 	movx	@dptr,a
      000330 90r00r54         [24] 1155 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x004c)
      000333 F0               [24] 1156 	movx	@dptr,a
      000334 90r00r55         [24] 1157 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x004d)
      000337 F0               [24] 1158 	movx	@dptr,a
      000338 90r00r56         [24] 1159 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x004e)
      00033B F0               [24] 1160 	movx	@dptr,a
      00033C 90r00r57         [24] 1161 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x004f)
      00033F F0               [24] 1162 	movx	@dptr,a
      000340 90r00r58         [24] 1163 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0050)
      000343 F0               [24] 1164 	movx	@dptr,a
      000344 90r00r59         [24] 1165 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0051)
      000347 F0               [24] 1166 	movx	@dptr,a
      000348 90r00r5A         [24] 1167 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0052)
      00034B F0               [24] 1168 	movx	@dptr,a
      00034C 90r00r5B         [24] 1169 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0053)
      00034F F0               [24] 1170 	movx	@dptr,a
      000350 90r00r5C         [24] 1171 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0054)
      000353 F0               [24] 1172 	movx	@dptr,a
      000354 90r00r5D         [24] 1173 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0055)
      000357 F0               [24] 1174 	movx	@dptr,a
      000358 90r00r5E         [24] 1175 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0056)
      00035B F0               [24] 1176 	movx	@dptr,a
      00035C 90r00r5F         [24] 1177 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0057)
      00035F F0               [24] 1178 	movx	@dptr,a
      000360 90r00r60         [24] 1179 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0058)
      000363 F0               [24] 1180 	movx	@dptr,a
      000364 90r00r61         [24] 1181 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0059)
      000367 F0               [24] 1182 	movx	@dptr,a
      000368 90r00r62         [24] 1183 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x005a)
      00036B F0               [24] 1184 	movx	@dptr,a
      00036C 90r00r63         [24] 1185 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x005b)
      00036F F0               [24] 1186 	movx	@dptr,a
      000370 90r00r64         [24] 1187 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x005c)
      000373 F0               [24] 1188 	movx	@dptr,a
      000374 90r00r65         [24] 1189 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x005d)
      000377 F0               [24] 1190 	movx	@dptr,a
      000378 90r00r66         [24] 1191 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x005e)
      00037B F0               [24] 1192 	movx	@dptr,a
      00037C 90r00r67         [24] 1193 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x005f)
      00037F F0               [24] 1194 	movx	@dptr,a
      000380 90r00r68         [24] 1195 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0060)
      000383 F0               [24] 1196 	movx	@dptr,a
      000384 90r00r69         [24] 1197 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0061)
      000387 F0               [24] 1198 	movx	@dptr,a
      000388 90r00r6A         [24] 1199 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0062)
      00038B F0               [24] 1200 	movx	@dptr,a
      00038C 90r00r6B         [24] 1201 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0063)
      00038F F0               [24] 1202 	movx	@dptr,a
      000390 90r00r6C         [24] 1203 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0064)
      000393 F0               [24] 1204 	movx	@dptr,a
      000394 90r00r6D         [24] 1205 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0065)
      000397 F0               [24] 1206 	movx	@dptr,a
      000398 90r00r6E         [24] 1207 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0066)
      00039B F0               [24] 1208 	movx	@dptr,a
      00039C 90r00r6F         [24] 1209 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0067)
      00039F F0               [24] 1210 	movx	@dptr,a
      0003A0 90r00r70         [24] 1211 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0068)
      0003A3 F0               [24] 1212 	movx	@dptr,a
      0003A4 90r00r71         [24] 1213 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0069)
      0003A7 F0               [24] 1214 	movx	@dptr,a
      0003A8 90r00r72         [24] 1215 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x006a)
      0003AB F0               [24] 1216 	movx	@dptr,a
      0003AC 90r00r73         [24] 1217 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x006b)
      0003AF F0               [24] 1218 	movx	@dptr,a
      0003B0 90r00r74         [24] 1219 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x006c)
      0003B3 F0               [24] 1220 	movx	@dptr,a
      0003B4 90r00r75         [24] 1221 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x006d)
      0003B7 F0               [24] 1222 	movx	@dptr,a
      0003B8 90r00r76         [24] 1223 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x006e)
      0003BB F0               [24] 1224 	movx	@dptr,a
      0003BC 90r00r77         [24] 1225 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x006f)
      0003BF F0               [24] 1226 	movx	@dptr,a
      0003C0 90r00r78         [24] 1227 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0070)
      0003C3 F0               [24] 1228 	movx	@dptr,a
      0003C4 90r00r79         [24] 1229 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0071)
      0003C7 F0               [24] 1230 	movx	@dptr,a
      0003C8 90r00r7A         [24] 1231 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0072)
      0003CB F0               [24] 1232 	movx	@dptr,a
      0003CC 90r00r7B         [24] 1233 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0073)
      0003CF F0               [24] 1234 	movx	@dptr,a
      0003D0 90r00r7C         [24] 1235 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0074)
      0003D3 F0               [24] 1236 	movx	@dptr,a
      0003D4 90r00r7D         [24] 1237 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0075)
      0003D7 F0               [24] 1238 	movx	@dptr,a
      0003D8 90r00r7E         [24] 1239 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0076)
      0003DB F0               [24] 1240 	movx	@dptr,a
      0003DC 90r00r7F         [24] 1241 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0077)
      0003DF F0               [24] 1242 	movx	@dptr,a
      0003E0 90r00r80         [24] 1243 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0078)
      0003E3 F0               [24] 1244 	movx	@dptr,a
      0003E4 90r00r81         [24] 1245 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0079)
      0003E7 F0               [24] 1246 	movx	@dptr,a
      0003E8 90r00r82         [24] 1247 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x007a)
      0003EB F0               [24] 1248 	movx	@dptr,a
      0003EC 90r00r83         [24] 1249 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x007b)
      0003EF F0               [24] 1250 	movx	@dptr,a
      0003F0 90r00r84         [24] 1251 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x007c)
      0003F3 F0               [24] 1252 	movx	@dptr,a
      0003F4 90r00r85         [24] 1253 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x007d)
      0003F7 F0               [24] 1254 	movx	@dptr,a
      0003F8 90r00r86         [24] 1255 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x007e)
      0003FB F0               [24] 1256 	movx	@dptr,a
      0003FC 90r00r87         [24] 1257 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x007f)
      0003FF F0               [24] 1258 	movx	@dptr,a
      000400 90r00r88         [24] 1259 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0080)
      000403 F0               [24] 1260 	movx	@dptr,a
      000404 90r00r89         [24] 1261 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0081)
      000407 F0               [24] 1262 	movx	@dptr,a
      000408 90r00r8A         [24] 1263 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0082)
      00040B F0               [24] 1264 	movx	@dptr,a
      00040C 90r00r8B         [24] 1265 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0083)
      00040F F0               [24] 1266 	movx	@dptr,a
      000410 90r00r8C         [24] 1267 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0084)
      000413 F0               [24] 1268 	movx	@dptr,a
      000414 90r00r8D         [24] 1269 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0085)
      000417 F0               [24] 1270 	movx	@dptr,a
      000418 90r00r8E         [24] 1271 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0086)
      00041B F0               [24] 1272 	movx	@dptr,a
      00041C 90r00r8F         [24] 1273 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0087)
      00041F F0               [24] 1274 	movx	@dptr,a
      000420 90r00r90         [24] 1275 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0088)
      000423 F0               [24] 1276 	movx	@dptr,a
      000424 90r00r91         [24] 1277 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0089)
      000427 F0               [24] 1278 	movx	@dptr,a
      000428 90r00r92         [24] 1279 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x008a)
      00042B F0               [24] 1280 	movx	@dptr,a
      00042C 90r00r93         [24] 1281 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x008b)
      00042F F0               [24] 1282 	movx	@dptr,a
      000430 90r00r94         [24] 1283 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x008c)
      000433 F0               [24] 1284 	movx	@dptr,a
      000434 90r00r95         [24] 1285 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x008d)
      000437 F0               [24] 1286 	movx	@dptr,a
      000438 90r00r96         [24] 1287 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x008e)
      00043B F0               [24] 1288 	movx	@dptr,a
      00043C 90r00r97         [24] 1289 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x008f)
      00043F F0               [24] 1290 	movx	@dptr,a
      000440 90r00r98         [24] 1291 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0090)
      000443 F0               [24] 1292 	movx	@dptr,a
      000444 90r00r99         [24] 1293 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0091)
      000447 F0               [24] 1294 	movx	@dptr,a
      000448 90r00r9A         [24] 1295 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0092)
      00044B F0               [24] 1296 	movx	@dptr,a
      00044C 90r00r9B         [24] 1297 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0093)
      00044F F0               [24] 1298 	movx	@dptr,a
      000450 90r00r9C         [24] 1299 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0094)
      000453 F0               [24] 1300 	movx	@dptr,a
      000454 90r00r9D         [24] 1301 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0095)
      000457 F0               [24] 1302 	movx	@dptr,a
      000458 90r00r9E         [24] 1303 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0096)
      00045B F0               [24] 1304 	movx	@dptr,a
      00045C 90r00r9F         [24] 1305 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0097)
      00045F F0               [24] 1306 	movx	@dptr,a
      000460 90r00rA0         [24] 1307 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0098)
      000463 F0               [24] 1308 	movx	@dptr,a
      000464 90r00rA1         [24] 1309 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x0099)
      000467 F0               [24] 1310 	movx	@dptr,a
      000468 90r00rA2         [24] 1311 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x009a)
      00046B F0               [24] 1312 	movx	@dptr,a
      00046C 90r00rA3         [24] 1313 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x009b)
      00046F F0               [24] 1314 	movx	@dptr,a
      000470 90r00rA4         [24] 1315 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x009c)
      000473 F0               [24] 1316 	movx	@dptr,a
      000474 90r00rA5         [24] 1317 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x009d)
      000477 F0               [24] 1318 	movx	@dptr,a
      000478 90r00rA6         [24] 1319 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x009e)
      00047B F0               [24] 1320 	movx	@dptr,a
      00047C 90r00rA7         [24] 1321 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x009f)
      00047F F0               [24] 1322 	movx	@dptr,a
      000480 90r00rA8         [24] 1323 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a0)
      000483 F0               [24] 1324 	movx	@dptr,a
      000484 90r00rA9         [24] 1325 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a1)
      000487 F0               [24] 1326 	movx	@dptr,a
      000488 90r00rAA         [24] 1327 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a2)
      00048B F0               [24] 1328 	movx	@dptr,a
      00048C 90r00rAB         [24] 1329 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a3)
      00048F F0               [24] 1330 	movx	@dptr,a
      000490 90r00rAC         [24] 1331 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a4)
      000493 F0               [24] 1332 	movx	@dptr,a
      000494 90r00rAD         [24] 1333 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a5)
      000497 F0               [24] 1334 	movx	@dptr,a
      000498 90r00rAE         [24] 1335 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a6)
      00049B F0               [24] 1336 	movx	@dptr,a
      00049C 90r00rAF         [24] 1337 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a7)
      00049F F0               [24] 1338 	movx	@dptr,a
      0004A0 90r00rB0         [24] 1339 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a8)
      0004A3 F0               [24] 1340 	movx	@dptr,a
      0004A4 90r00rB1         [24] 1341 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00a9)
      0004A7 F0               [24] 1342 	movx	@dptr,a
      0004A8 90r00rB2         [24] 1343 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00aa)
      0004AB F0               [24] 1344 	movx	@dptr,a
      0004AC 90r00rB3         [24] 1345 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ab)
      0004AF F0               [24] 1346 	movx	@dptr,a
      0004B0 90r00rB4         [24] 1347 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ac)
      0004B3 F0               [24] 1348 	movx	@dptr,a
      0004B4 90r00rB5         [24] 1349 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ad)
      0004B7 F0               [24] 1350 	movx	@dptr,a
      0004B8 90r00rB6         [24] 1351 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ae)
      0004BB F0               [24] 1352 	movx	@dptr,a
      0004BC 90r00rB7         [24] 1353 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00af)
      0004BF F0               [24] 1354 	movx	@dptr,a
      0004C0 90r00rB8         [24] 1355 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b0)
      0004C3 F0               [24] 1356 	movx	@dptr,a
      0004C4 90r00rB9         [24] 1357 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b1)
      0004C7 F0               [24] 1358 	movx	@dptr,a
      0004C8 90r00rBA         [24] 1359 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b2)
      0004CB F0               [24] 1360 	movx	@dptr,a
      0004CC 90r00rBB         [24] 1361 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b3)
      0004CF F0               [24] 1362 	movx	@dptr,a
      0004D0 90r00rBC         [24] 1363 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b4)
      0004D3 F0               [24] 1364 	movx	@dptr,a
      0004D4 90r00rBD         [24] 1365 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b5)
      0004D7 F0               [24] 1366 	movx	@dptr,a
      0004D8 90r00rBE         [24] 1367 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b6)
      0004DB F0               [24] 1368 	movx	@dptr,a
      0004DC 90r00rBF         [24] 1369 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b7)
      0004DF F0               [24] 1370 	movx	@dptr,a
      0004E0 90r00rC0         [24] 1371 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b8)
      0004E3 F0               [24] 1372 	movx	@dptr,a
      0004E4 90r00rC1         [24] 1373 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00b9)
      0004E7 F0               [24] 1374 	movx	@dptr,a
      0004E8 90r00rC2         [24] 1375 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ba)
      0004EB F0               [24] 1376 	movx	@dptr,a
      0004EC 90r00rC3         [24] 1377 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00bb)
      0004EF F0               [24] 1378 	movx	@dptr,a
      0004F0 90r00rC4         [24] 1379 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00bc)
      0004F3 F0               [24] 1380 	movx	@dptr,a
      0004F4 90r00rC5         [24] 1381 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00bd)
      0004F7 F0               [24] 1382 	movx	@dptr,a
      0004F8 90r00rC6         [24] 1383 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00be)
      0004FB F0               [24] 1384 	movx	@dptr,a
      0004FC 90r00rC7         [24] 1385 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00bf)
      0004FF F0               [24] 1386 	movx	@dptr,a
      000500 90r00rC8         [24] 1387 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c0)
      000503 F0               [24] 1388 	movx	@dptr,a
      000504 90r00rC9         [24] 1389 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c1)
      000507 F0               [24] 1390 	movx	@dptr,a
      000508 90r00rCA         [24] 1391 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c2)
      00050B F0               [24] 1392 	movx	@dptr,a
      00050C 90r00rCB         [24] 1393 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c3)
      00050F F0               [24] 1394 	movx	@dptr,a
      000510 90r00rCC         [24] 1395 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c4)
      000513 F0               [24] 1396 	movx	@dptr,a
      000514 90r00rCD         [24] 1397 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c5)
      000517 F0               [24] 1398 	movx	@dptr,a
      000518 90r00rCE         [24] 1399 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c6)
      00051B F0               [24] 1400 	movx	@dptr,a
      00051C 90r00rCF         [24] 1401 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c7)
      00051F F0               [24] 1402 	movx	@dptr,a
      000520 90r00rD0         [24] 1403 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c8)
      000523 F0               [24] 1404 	movx	@dptr,a
      000524 90r00rD1         [24] 1405 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00c9)
      000527 F0               [24] 1406 	movx	@dptr,a
      000528 90r00rD2         [24] 1407 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ca)
      00052B F0               [24] 1408 	movx	@dptr,a
      00052C 90r00rD3         [24] 1409 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00cb)
      00052F F0               [24] 1410 	movx	@dptr,a
      000530 90r00rD4         [24] 1411 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00cc)
      000533 F0               [24] 1412 	movx	@dptr,a
      000534 90r00rD5         [24] 1413 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00cd)
      000537 F0               [24] 1414 	movx	@dptr,a
      000538 90r00rD6         [24] 1415 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ce)
      00053B F0               [24] 1416 	movx	@dptr,a
      00053C 90r00rD7         [24] 1417 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00cf)
      00053F F0               [24] 1418 	movx	@dptr,a
      000540 90r00rD8         [24] 1419 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d0)
      000543 F0               [24] 1420 	movx	@dptr,a
      000544 90r00rD9         [24] 1421 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d1)
      000547 F0               [24] 1422 	movx	@dptr,a
      000548 90r00rDA         [24] 1423 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d2)
      00054B F0               [24] 1424 	movx	@dptr,a
      00054C 90r00rDB         [24] 1425 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d3)
      00054F F0               [24] 1426 	movx	@dptr,a
      000550 90r00rDC         [24] 1427 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d4)
      000553 F0               [24] 1428 	movx	@dptr,a
      000554 90r00rDD         [24] 1429 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d5)
      000557 F0               [24] 1430 	movx	@dptr,a
      000558 90r00rDE         [24] 1431 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d6)
      00055B F0               [24] 1432 	movx	@dptr,a
      00055C 90r00rDF         [24] 1433 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d7)
      00055F F0               [24] 1434 	movx	@dptr,a
      000560 90r00rE0         [24] 1435 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d8)
      000563 F0               [24] 1436 	movx	@dptr,a
      000564 90r00rE1         [24] 1437 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00d9)
      000567 F0               [24] 1438 	movx	@dptr,a
      000568 90r00rE2         [24] 1439 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00da)
      00056B F0               [24] 1440 	movx	@dptr,a
      00056C 90r00rE3         [24] 1441 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00db)
      00056F F0               [24] 1442 	movx	@dptr,a
      000570 90r00rE4         [24] 1443 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00dc)
      000573 F0               [24] 1444 	movx	@dptr,a
      000574 90r00rE5         [24] 1445 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00dd)
      000577 F0               [24] 1446 	movx	@dptr,a
      000578 90r00rE6         [24] 1447 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00de)
      00057B F0               [24] 1448 	movx	@dptr,a
      00057C 90r00rE7         [24] 1449 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00df)
      00057F F0               [24] 1450 	movx	@dptr,a
      000580 90r00rE8         [24] 1451 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e0)
      000583 F0               [24] 1452 	movx	@dptr,a
      000584 90r00rE9         [24] 1453 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e1)
      000587 F0               [24] 1454 	movx	@dptr,a
      000588 90r00rEA         [24] 1455 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e2)
      00058B F0               [24] 1456 	movx	@dptr,a
      00058C 90r00rEB         [24] 1457 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e3)
      00058F F0               [24] 1458 	movx	@dptr,a
      000590 90r00rEC         [24] 1459 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e4)
      000593 F0               [24] 1460 	movx	@dptr,a
      000594 90r00rED         [24] 1461 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e5)
      000597 F0               [24] 1462 	movx	@dptr,a
      000598 90r00rEE         [24] 1463 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e6)
      00059B F0               [24] 1464 	movx	@dptr,a
      00059C 90r00rEF         [24] 1465 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e7)
      00059F F0               [24] 1466 	movx	@dptr,a
      0005A0 90r00rF0         [24] 1467 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e8)
      0005A3 F0               [24] 1468 	movx	@dptr,a
      0005A4 90r00rF1         [24] 1469 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00e9)
      0005A7 F0               [24] 1470 	movx	@dptr,a
      0005A8 90r00rF2         [24] 1471 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ea)
      0005AB F0               [24] 1472 	movx	@dptr,a
      0005AC 90r00rF3         [24] 1473 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00eb)
      0005AF F0               [24] 1474 	movx	@dptr,a
      0005B0 90r00rF4         [24] 1475 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ec)
      0005B3 F0               [24] 1476 	movx	@dptr,a
      0005B4 90r00rF5         [24] 1477 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ed)
      0005B7 F0               [24] 1478 	movx	@dptr,a
      0005B8 90r00rF6         [24] 1479 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ee)
      0005BB F0               [24] 1480 	movx	@dptr,a
      0005BC 90r00rF7         [24] 1481 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ef)
      0005BF F0               [24] 1482 	movx	@dptr,a
      0005C0 90r00rF8         [24] 1483 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f0)
      0005C3 F0               [24] 1484 	movx	@dptr,a
      0005C4 90r00rF9         [24] 1485 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f1)
      0005C7 F0               [24] 1486 	movx	@dptr,a
      0005C8 90r00rFA         [24] 1487 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f2)
      0005CB F0               [24] 1488 	movx	@dptr,a
      0005CC 90r00rFB         [24] 1489 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f3)
      0005CF F0               [24] 1490 	movx	@dptr,a
      0005D0 90r00rFC         [24] 1491 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f4)
      0005D3 F0               [24] 1492 	movx	@dptr,a
      0005D4 90r00rFD         [24] 1493 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f5)
      0005D7 F0               [24] 1494 	movx	@dptr,a
      0005D8 90r00rFE         [24] 1495 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f6)
      0005DB F0               [24] 1496 	movx	@dptr,a
      0005DC 90r00rFF         [24] 1497 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f7)
      0005DF F0               [24] 1498 	movx	@dptr,a
      0005E0 90r01r00         [24] 1499 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f8)
      0005E3 F0               [24] 1500 	movx	@dptr,a
      0005E4 90r01r01         [24] 1501 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00f9)
      0005E7 F0               [24] 1502 	movx	@dptr,a
      0005E8 90r01r02         [24] 1503 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00fa)
      0005EB F0               [24] 1504 	movx	@dptr,a
      0005EC 90r01r03         [24] 1505 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00fb)
      0005EF F0               [24] 1506 	movx	@dptr,a
      0005F0 90r01r04         [24] 1507 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00fc)
      0005F3 F0               [24] 1508 	movx	@dptr,a
      0005F4 90r01r05         [24] 1509 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00fd)
      0005F7 F0               [24] 1510 	movx	@dptr,a
      0005F8 90r01r06         [24] 1511 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00fe)
      0005FB F0               [24] 1512 	movx	@dptr,a
      0005FC 90r01r07         [24] 1513 	mov	dptr,#(_Byte_Read_Sequential_buffer_65536_22 + 0x00ff)
      0005FF F0               [24] 1514 	movx	@dptr,a
                                   1515 ;	i2c_bit_bang.c:213: SCL = PULSE_HIGH;
                                   1516 ;	assignBit
      000600 D2 92            [12] 1517 	setb	_P1_2
                                   1518 ;	i2c_bit_bang.c:214: SDA = PULSE_HIGH;
                                   1519 ;	assignBit
      000602 D2 93            [12] 1520 	setb	_P1_3
                                   1521 ;	i2c_bit_bang.c:215: delay(2);
      000604 90 00 02         [24] 1522 	mov	dptr,#0x0002
      000607 12r00r00         [24] 1523 	lcall	_delay
                                   1524 ;	i2c_bit_bang.c:216: SDA = PULSE_LOW;
                                   1525 ;	assignBit
      00060A C2 93            [12] 1526 	clr	_P1_3
                                   1527 ;	i2c_bit_bang.c:217: delay(2);
      00060C 90 00 02         [24] 1528 	mov	dptr,#0x0002
      00060F 12r00r00         [24] 1529 	lcall	_delay
                                   1530 ;	i2c_bit_bang.c:218: SCL = PULSE_LOW;
                                   1531 ;	assignBit
      000612 C2 92            [12] 1532 	clr	_P1_2
                                   1533 ;	i2c_bit_bang.c:221: uint8_t byte = START_BYTE | (block << 1) | WRITE_BYTE;
      000614 90r00r07         [24] 1534 	mov	dptr,#_Byte_Read_Sequential_block_65536_21
      000617 E0               [24] 1535 	movx	a,@dptr
      000618 25 E0            [12] 1536 	add	a,acc
      00061A FF               [12] 1537 	mov	r7,a
      00061B 74 A0            [12] 1538 	mov	a,#0xa0
      00061D 4F               [12] 1539 	orl	a,r7
      00061E F5 82            [12] 1540 	mov	dpl,a
                                   1541 ;	i2c_bit_bang.c:224: sendByte(byte);
      000620 C0 07            [24] 1542 	push	ar7
      000622 12r00r15         [24] 1543 	lcall	_sendByte
                                   1544 ;	i2c_bit_bang.c:225: SDA = PULSE_HIGH;
                                   1545 ;	assignBit
      000625 D2 93            [12] 1546 	setb	_P1_3
                                   1547 ;	i2c_bit_bang.c:226: SCL = PULSE_HIGH;
                                   1548 ;	assignBit
      000627 D2 92            [12] 1549 	setb	_P1_2
                                   1550 ;	i2c_bit_bang.c:227: delay(3);
      000629 90 00 03         [24] 1551 	mov	dptr,#0x0003
      00062C 12r00r00         [24] 1552 	lcall	_delay
                                   1553 ;	i2c_bit_bang.c:233: SCL = PULSE_LOW;
                                   1554 ;	assignBit
      00062F C2 92            [12] 1555 	clr	_P1_2
                                   1556 ;	i2c_bit_bang.c:234: delay(0);
      000631 90 00 00         [24] 1557 	mov	dptr,#0x0000
      000634 12r00r00         [24] 1558 	lcall	_delay
                                   1559 ;	i2c_bit_bang.c:236: sendByte(start_address);
      000637 90r00r05         [24] 1560 	mov	dptr,#_Byte_Read_Sequential_PARM_2
      00063A E0               [24] 1561 	movx	a,@dptr
      00063B F5 82            [12] 1562 	mov	dpl,a
      00063D 12r00r15         [24] 1563 	lcall	_sendByte
                                   1564 ;	i2c_bit_bang.c:238: SDA = PULSE_HIGH;
                                   1565 ;	assignBit
      000640 D2 93            [12] 1566 	setb	_P1_3
                                   1567 ;	i2c_bit_bang.c:239: SCL = PULSE_HIGH;
                                   1568 ;	assignBit
      000642 D2 92            [12] 1569 	setb	_P1_2
                                   1570 ;	i2c_bit_bang.c:240: delay(2);
      000644 90 00 02         [24] 1571 	mov	dptr,#0x0002
      000647 12r00r00         [24] 1572 	lcall	_delay
                                   1573 ;	i2c_bit_bang.c:246: SCL = PULSE_LOW;
                                   1574 ;	assignBit
      00064A C2 92            [12] 1575 	clr	_P1_2
                                   1576 ;	i2c_bit_bang.c:247: SDA = PULSE_HIGH;
                                   1577 ;	assignBit
      00064C D2 93            [12] 1578 	setb	_P1_3
                                   1579 ;	i2c_bit_bang.c:248: delay(2);
      00064E 90 00 02         [24] 1580 	mov	dptr,#0x0002
      000651 12r00r00         [24] 1581 	lcall	_delay
                                   1582 ;	i2c_bit_bang.c:249: SCL = PULSE_HIGH;
                                   1583 ;	assignBit
      000654 D2 92            [12] 1584 	setb	_P1_2
                                   1585 ;	i2c_bit_bang.c:250: delay(0);
      000656 90 00 00         [24] 1586 	mov	dptr,#0x0000
      000659 12r00r00         [24] 1587 	lcall	_delay
                                   1588 ;	i2c_bit_bang.c:251: SDA = PULSE_LOW;
                                   1589 ;	assignBit
      00065C C2 93            [12] 1590 	clr	_P1_3
                                   1591 ;	i2c_bit_bang.c:252: delay(2);
      00065E 90 00 02         [24] 1592 	mov	dptr,#0x0002
      000661 12r00r00         [24] 1593 	lcall	_delay
      000664 D0 07            [24] 1594 	pop	ar7
                                   1595 ;	i2c_bit_bang.c:253: SCL = PULSE_LOW;
                                   1596 ;	assignBit
      000666 C2 92            [12] 1597 	clr	_P1_2
                                   1598 ;	i2c_bit_bang.c:254: byte = START_BYTE | (block << 1) | READ_BYTE;
      000668 74 A1            [12] 1599 	mov	a,#0xa1
      00066A 4F               [12] 1600 	orl	a,r7
      00066B F5 82            [12] 1601 	mov	dpl,a
                                   1602 ;	i2c_bit_bang.c:257: sendByte(byte);
      00066D 12r00r15         [24] 1603 	lcall	_sendByte
                                   1604 ;	i2c_bit_bang.c:258: SDA = PULSE_HIGH;
                                   1605 ;	assignBit
      000670 D2 93            [12] 1606 	setb	_P1_3
                                   1607 ;	i2c_bit_bang.c:259: delay(2);
      000672 90 00 02         [24] 1608 	mov	dptr,#0x0002
      000675 12r00r00         [24] 1609 	lcall	_delay
                                   1610 ;	i2c_bit_bang.c:265: SCL = PULSE_HIGH;
                                   1611 ;	assignBit
      000678 D2 92            [12] 1612 	setb	_P1_2
                                   1613 ;	i2c_bit_bang.c:266: delay(2);
      00067A 90 00 02         [24] 1614 	mov	dptr,#0x0002
      00067D 12r00r00         [24] 1615 	lcall	_delay
                                   1616 ;	i2c_bit_bang.c:267: SCL = PULSE_LOW;
                                   1617 ;	assignBit
      000680 C2 92            [12] 1618 	clr	_P1_2
                                   1619 ;	i2c_bit_bang.c:268: delay(2);
      000682 90 00 02         [24] 1620 	mov	dptr,#0x0002
      000685 12r00r00         [24] 1621 	lcall	_delay
                                   1622 ;	i2c_bit_bang.c:270: for(int l = 0; l < (address_range + 1); l++){
      000688 90r00r06         [24] 1623 	mov	dptr,#_Byte_Read_Sequential_PARM_3
      00068B E0               [24] 1624 	movx	a,@dptr
      00068C FF               [12] 1625 	mov	r7,a
      00068D E4               [12] 1626 	clr	a
      00068E F5*00            [12] 1627 	mov	_Byte_Read_Sequential_l_131073_24,a
      000690 F5*01            [12] 1628 	mov	(_Byte_Read_Sequential_l_131073_24 + 1),a
      000692                       1629 00109$:
      000692 8F 03            [24] 1630 	mov	ar3,r7
      000694 7C 00            [12] 1631 	mov	r4,#0x00
      000696 74 01            [12] 1632 	mov	a,#0x01
      000698 2B               [12] 1633 	add	a,r3
      000699 F9               [12] 1634 	mov	r1,a
      00069A E4               [12] 1635 	clr	a
      00069B 3C               [12] 1636 	addc	a,r4
      00069C FA               [12] 1637 	mov	r2,a
      00069D C3               [12] 1638 	clr	c
      00069E E5*00            [12] 1639 	mov	a,_Byte_Read_Sequential_l_131073_24
      0006A0 99               [12] 1640 	subb	a,r1
      0006A1 E5*01            [12] 1641 	mov	a,(_Byte_Read_Sequential_l_131073_24 + 1)
      0006A3 64 80            [12] 1642 	xrl	a,#0x80
      0006A5 8A F0            [24] 1643 	mov	b,r2
      0006A7 63 F0 80         [24] 1644 	xrl	b,#0x80
      0006AA 95 F0            [12] 1645 	subb	a,b
      0006AC 40 03            [24] 1646 	jc	00140$
      0006AE 02r07r53         [24] 1647 	ljmp	00104$
      0006B1                       1648 00140$:
                                   1649 ;	i2c_bit_bang.c:271: for(int k = 0; k < BYTE_LENGTH; k++){
      0006B1 E4               [12] 1650 	clr	a
      0006B2 F5*02            [12] 1651 	mov	_Byte_Read_Sequential_k_262145_26,a
      0006B4 F5*03            [12] 1652 	mov	(_Byte_Read_Sequential_k_262145_26 + 1),a
      0006B6                       1653 00106$:
      0006B6 C3               [12] 1654 	clr	c
      0006B7 E5*02            [12] 1655 	mov	a,_Byte_Read_Sequential_k_262145_26
      0006B9 94 08            [12] 1656 	subb	a,#0x08
      0006BB E5*03            [12] 1657 	mov	a,(_Byte_Read_Sequential_k_262145_26 + 1)
      0006BD 64 80            [12] 1658 	xrl	a,#0x80
      0006BF 94 80            [12] 1659 	subb	a,#0x80
      0006C1 50 58            [24] 1660 	jnc	00101$
                                   1661 ;	i2c_bit_bang.c:272: SDA= PULSE_HIGH;
                                   1662 ;	assignBit
      0006C3 D2 93            [12] 1663 	setb	_P1_3
                                   1664 ;	i2c_bit_bang.c:273: buffer[l] = buffer[l] << 1;
      0006C5 E5*00            [12] 1665 	mov	a,_Byte_Read_Sequential_l_131073_24
      0006C7 24r08            [12] 1666 	add	a,#_Byte_Read_Sequential_buffer_65536_22
      0006C9 F8               [12] 1667 	mov	r0,a
      0006CA E5*01            [12] 1668 	mov	a,(_Byte_Read_Sequential_l_131073_24 + 1)
      0006CC 34s00            [12] 1669 	addc	a,#(_Byte_Read_Sequential_buffer_65536_22 >> 8)
      0006CE FA               [12] 1670 	mov	r2,a
      0006CF 88 82            [24] 1671 	mov	dpl,r0
      0006D1 8A 83            [24] 1672 	mov	dph,r2
      0006D3 E0               [24] 1673 	movx	a,@dptr
      0006D4 25 E0            [12] 1674 	add	a,acc
      0006D6 88 82            [24] 1675 	mov	dpl,r0
      0006D8 8A 83            [24] 1676 	mov	dph,r2
      0006DA F0               [24] 1677 	movx	@dptr,a
                                   1678 ;	i2c_bit_bang.c:274: SCL = PULSE_HIGH;
                                   1679 ;	assignBit
      0006DB D2 92            [12] 1680 	setb	_P1_2
                                   1681 ;	i2c_bit_bang.c:275: delay(1);
      0006DD 90 00 01         [24] 1682 	mov	dptr,#0x0001
      0006E0 C0 07            [24] 1683 	push	ar7
      0006E2 C0 04            [24] 1684 	push	ar4
      0006E4 C0 03            [24] 1685 	push	ar3
      0006E6 C0 02            [24] 1686 	push	ar2
      0006E8 C0 00            [24] 1687 	push	ar0
      0006EA 12r00r00         [24] 1688 	lcall	_delay
      0006ED D0 00            [24] 1689 	pop	ar0
      0006EF D0 02            [24] 1690 	pop	ar2
                                   1691 ;	i2c_bit_bang.c:276: buffer[l] |= SDA;
      0006F1 88 82            [24] 1692 	mov	dpl,r0
      0006F3 8A 83            [24] 1693 	mov	dph,r2
      0006F5 E0               [24] 1694 	movx	a,@dptr
      0006F6 F9               [12] 1695 	mov	r1,a
      0006F7 A2 93            [12] 1696 	mov	c,_P1_3
      0006F9 E4               [12] 1697 	clr	a
      0006FA 33               [12] 1698 	rlc	a
      0006FB 42 01            [12] 1699 	orl	ar1,a
      0006FD 88 82            [24] 1700 	mov	dpl,r0
      0006FF 8A 83            [24] 1701 	mov	dph,r2
      000701 E9               [12] 1702 	mov	a,r1
      000702 F0               [24] 1703 	movx	@dptr,a
                                   1704 ;	i2c_bit_bang.c:277: SCL = PULSE_LOW;
                                   1705 ;	assignBit
      000703 C2 92            [12] 1706 	clr	_P1_2
                                   1707 ;	i2c_bit_bang.c:278: delay(1);
      000705 90 00 01         [24] 1708 	mov	dptr,#0x0001
      000708 12r00r00         [24] 1709 	lcall	_delay
      00070B D0 03            [24] 1710 	pop	ar3
      00070D D0 04            [24] 1711 	pop	ar4
      00070F D0 07            [24] 1712 	pop	ar7
                                   1713 ;	i2c_bit_bang.c:271: for(int k = 0; k < BYTE_LENGTH; k++){
      000711 05*02            [12] 1714 	inc	_Byte_Read_Sequential_k_262145_26
      000713 E4               [12] 1715 	clr	a
      000714 B5*02 9F         [24] 1716 	cjne	a,_Byte_Read_Sequential_k_262145_26,00106$
      000717 05*03            [12] 1717 	inc	(_Byte_Read_Sequential_k_262145_26 + 1)
      000719 80 9B            [24] 1718 	sjmp	00106$
      00071B                       1719 00101$:
                                   1720 ;	i2c_bit_bang.c:281: if(l < address_range){
      00071B C3               [12] 1721 	clr	c
      00071C E5*00            [12] 1722 	mov	a,_Byte_Read_Sequential_l_131073_24
      00071E 9B               [12] 1723 	subb	a,r3
      00071F E5*01            [12] 1724 	mov	a,(_Byte_Read_Sequential_l_131073_24 + 1)
      000721 64 80            [12] 1725 	xrl	a,#0x80
      000723 8C F0            [24] 1726 	mov	b,r4
      000725 63 F0 80         [24] 1727 	xrl	b,#0x80
      000728 95 F0            [12] 1728 	subb	a,b
      00072A 50 1C            [24] 1729 	jnc	00110$
                                   1730 ;	i2c_bit_bang.c:282: SDA = PULSE_LOW;
                                   1731 ;	assignBit
      00072C C2 93            [12] 1732 	clr	_P1_3
                                   1733 ;	i2c_bit_bang.c:283: delay(0);
      00072E 90 00 00         [24] 1734 	mov	dptr,#0x0000
      000731 C0 07            [24] 1735 	push	ar7
      000733 12r00r00         [24] 1736 	lcall	_delay
                                   1737 ;	i2c_bit_bang.c:284: SCL = PULSE_HIGH;
                                   1738 ;	assignBit
      000736 D2 92            [12] 1739 	setb	_P1_2
                                   1740 ;	i2c_bit_bang.c:285: delay(2);
      000738 90 00 02         [24] 1741 	mov	dptr,#0x0002
      00073B 12r00r00         [24] 1742 	lcall	_delay
                                   1743 ;	i2c_bit_bang.c:286: SCL = PULSE_LOW;
                                   1744 ;	assignBit
      00073E C2 92            [12] 1745 	clr	_P1_2
                                   1746 ;	i2c_bit_bang.c:287: delay(1);
      000740 90 00 01         [24] 1747 	mov	dptr,#0x0001
      000743 12r00r00         [24] 1748 	lcall	_delay
      000746 D0 07            [24] 1749 	pop	ar7
      000748                       1750 00110$:
                                   1751 ;	i2c_bit_bang.c:270: for(int l = 0; l < (address_range + 1); l++){
      000748 05*00            [12] 1752 	inc	_Byte_Read_Sequential_l_131073_24
      00074A E4               [12] 1753 	clr	a
      00074B B5*00 02         [24] 1754 	cjne	a,_Byte_Read_Sequential_l_131073_24,00144$
      00074E 05*01            [12] 1755 	inc	(_Byte_Read_Sequential_l_131073_24 + 1)
      000750                       1756 00144$:
      000750 02r06r92         [24] 1757 	ljmp	00109$
      000753                       1758 00104$:
                                   1759 ;	i2c_bit_bang.c:291: SDA = PULSE_HIGH;
                                   1760 ;	assignBit
      000753 D2 93            [12] 1761 	setb	_P1_3
                                   1762 ;	i2c_bit_bang.c:292: delay(2);
      000755 90 00 02         [24] 1763 	mov	dptr,#0x0002
      000758 12r00r00         [24] 1764 	lcall	_delay
                                   1765 ;	i2c_bit_bang.c:293: SCL = PULSE_HIGH;
                                   1766 ;	assignBit
      00075B D2 92            [12] 1767 	setb	_P1_2
                                   1768 ;	i2c_bit_bang.c:294: delay(2);
      00075D 90 00 02         [24] 1769 	mov	dptr,#0x0002
      000760 12r00r00         [24] 1770 	lcall	_delay
                                   1771 ;	i2c_bit_bang.c:295: SCL = PULSE_LOW;
                                   1772 ;	assignBit
      000763 C2 92            [12] 1773 	clr	_P1_2
                                   1774 ;	i2c_bit_bang.c:296: SDA = PULSE_LOW;
                                   1775 ;	assignBit
      000765 C2 93            [12] 1776 	clr	_P1_3
                                   1777 ;	i2c_bit_bang.c:297: delay(2);
      000767 90 00 02         [24] 1778 	mov	dptr,#0x0002
      00076A 12r00r00         [24] 1779 	lcall	_delay
                                   1780 ;	i2c_bit_bang.c:298: SCL = PULSE_HIGH;
                                   1781 ;	assignBit
      00076D D2 92            [12] 1782 	setb	_P1_2
                                   1783 ;	i2c_bit_bang.c:299: delay(2);
      00076F 90 00 02         [24] 1784 	mov	dptr,#0x0002
      000772 12r00r00         [24] 1785 	lcall	_delay
                                   1786 ;	i2c_bit_bang.c:300: SDA = PULSE_HIGH;
                                   1787 ;	assignBit
      000775 D2 93            [12] 1788 	setb	_P1_3
                                   1789 ;	i2c_bit_bang.c:301: delay(2);
      000777 90 00 02         [24] 1790 	mov	dptr,#0x0002
      00077A 12r00r00         [24] 1791 	lcall	_delay
                                   1792 ;	i2c_bit_bang.c:302: SCL = PULSE_LOW;
                                   1793 ;	assignBit
      00077D C2 92            [12] 1794 	clr	_P1_2
                                   1795 ;	i2c_bit_bang.c:303: delay(2);
      00077F 90 00 02         [24] 1796 	mov	dptr,#0x0002
      000782 12r00r00         [24] 1797 	lcall	_delay
                                   1798 ;	i2c_bit_bang.c:306: return buffer;
      000785 90r00r08         [24] 1799 	mov	dptr,#_Byte_Read_Sequential_buffer_65536_22
                                   1800 ;	i2c_bit_bang.c:307: }
      000788 22               [24] 1801 	ret
                                   1802 ;------------------------------------------------------------
                                   1803 ;Allocation info for local variables in function 'eeprom_reset'
                                   1804 ;------------------------------------------------------------
                                   1805 ;i                         Allocated to registers r6 r7 
                                   1806 ;------------------------------------------------------------
                                   1807 ;	i2c_bit_bang.c:312: void eeprom_reset(){
                                   1808 ;	-----------------------------------------
                                   1809 ;	 function eeprom_reset
                                   1810 ;	-----------------------------------------
      000789                       1811 _eeprom_reset:
                                   1812 ;	i2c_bit_bang.c:314: SCL = PULSE_HIGH;
                                   1813 ;	assignBit
      000789 D2 92            [12] 1814 	setb	_P1_2
                                   1815 ;	i2c_bit_bang.c:315: SDA = PULSE_HIGH;
                                   1816 ;	assignBit
      00078B D2 93            [12] 1817 	setb	_P1_3
                                   1818 ;	i2c_bit_bang.c:316: delay(2);
      00078D 90 00 02         [24] 1819 	mov	dptr,#0x0002
      000790 12r00r00         [24] 1820 	lcall	_delay
                                   1821 ;	i2c_bit_bang.c:317: SDA = PULSE_LOW;
                                   1822 ;	assignBit
      000793 C2 93            [12] 1823 	clr	_P1_3
                                   1824 ;	i2c_bit_bang.c:318: delay(0);
      000795 90 00 00         [24] 1825 	mov	dptr,#0x0000
      000798 12r00r00         [24] 1826 	lcall	_delay
                                   1827 ;	i2c_bit_bang.c:319: SCL = PULSE_LOW;
                                   1828 ;	assignBit
      00079B C2 92            [12] 1829 	clr	_P1_2
                                   1830 ;	i2c_bit_bang.c:320: delay(0);
      00079D 90 00 00         [24] 1831 	mov	dptr,#0x0000
      0007A0 12r00r00         [24] 1832 	lcall	_delay
                                   1833 ;	i2c_bit_bang.c:323: for(int i = 0; i < (BYTE_LENGTH + 1); i++){
      0007A3 7E 00            [12] 1834 	mov	r6,#0x00
      0007A5 7F 00            [12] 1835 	mov	r7,#0x00
      0007A7                       1836 00103$:
      0007A7 C3               [12] 1837 	clr	c
      0007A8 EE               [12] 1838 	mov	a,r6
      0007A9 94 09            [12] 1839 	subb	a,#0x09
      0007AB EF               [12] 1840 	mov	a,r7
      0007AC 64 80            [12] 1841 	xrl	a,#0x80
      0007AE 94 80            [12] 1842 	subb	a,#0x80
      0007B0 50 21            [24] 1843 	jnc	00101$
                                   1844 ;	i2c_bit_bang.c:324: SDA = PULSE_HIGH;
                                   1845 ;	assignBit
      0007B2 D2 93            [12] 1846 	setb	_P1_3
                                   1847 ;	i2c_bit_bang.c:325: SCL = PULSE_HIGH;
                                   1848 ;	assignBit
      0007B4 D2 92            [12] 1849 	setb	_P1_2
                                   1850 ;	i2c_bit_bang.c:326: delay(2);
      0007B6 90 00 02         [24] 1851 	mov	dptr,#0x0002
      0007B9 C0 07            [24] 1852 	push	ar7
      0007BB C0 06            [24] 1853 	push	ar6
      0007BD 12r00r00         [24] 1854 	lcall	_delay
                                   1855 ;	i2c_bit_bang.c:327: SCL = PULSE_LOW;
                                   1856 ;	assignBit
      0007C0 C2 92            [12] 1857 	clr	_P1_2
                                   1858 ;	i2c_bit_bang.c:328: delay(1);
      0007C2 90 00 01         [24] 1859 	mov	dptr,#0x0001
      0007C5 12r00r00         [24] 1860 	lcall	_delay
      0007C8 D0 06            [24] 1861 	pop	ar6
      0007CA D0 07            [24] 1862 	pop	ar7
                                   1863 ;	i2c_bit_bang.c:323: for(int i = 0; i < (BYTE_LENGTH + 1); i++){
      0007CC 0E               [12] 1864 	inc	r6
      0007CD BE 00 D7         [24] 1865 	cjne	r6,#0x00,00103$
      0007D0 0F               [12] 1866 	inc	r7
      0007D1 80 D4            [24] 1867 	sjmp	00103$
      0007D3                       1868 00101$:
                                   1869 ;	i2c_bit_bang.c:333: SCL = PULSE_HIGH;
                                   1870 ;	assignBit
      0007D3 D2 92            [12] 1871 	setb	_P1_2
                                   1872 ;	i2c_bit_bang.c:334: delay(0);
      0007D5 90 00 00         [24] 1873 	mov	dptr,#0x0000
      0007D8 12r00r00         [24] 1874 	lcall	_delay
                                   1875 ;	i2c_bit_bang.c:335: SDA = PULSE_LOW;
                                   1876 ;	assignBit
      0007DB C2 93            [12] 1877 	clr	_P1_3
                                   1878 ;	i2c_bit_bang.c:336: delay(0);
      0007DD 90 00 00         [24] 1879 	mov	dptr,#0x0000
      0007E0 12r00r00         [24] 1880 	lcall	_delay
                                   1881 ;	i2c_bit_bang.c:337: SCL = PULSE_LOW;
                                   1882 ;	assignBit
      0007E3 C2 92            [12] 1883 	clr	_P1_2
                                   1884 ;	i2c_bit_bang.c:338: SDA = PULSE_LOW;
                                   1885 ;	assignBit
      0007E5 C2 93            [12] 1886 	clr	_P1_3
                                   1887 ;	i2c_bit_bang.c:339: delay(1);
      0007E7 90 00 01         [24] 1888 	mov	dptr,#0x0001
      0007EA 12r00r00         [24] 1889 	lcall	_delay
                                   1890 ;	i2c_bit_bang.c:340: SCL = PULSE_HIGH;
                                   1891 ;	assignBit
      0007ED D2 92            [12] 1892 	setb	_P1_2
                                   1893 ;	i2c_bit_bang.c:341: delay(0);
      0007EF 90 00 00         [24] 1894 	mov	dptr,#0x0000
      0007F2 12r00r00         [24] 1895 	lcall	_delay
                                   1896 ;	i2c_bit_bang.c:342: SDA = PULSE_HIGH;
                                   1897 ;	assignBit
      0007F5 D2 93            [12] 1898 	setb	_P1_3
                                   1899 ;	i2c_bit_bang.c:343: delay(0);
      0007F7 90 00 00         [24] 1900 	mov	dptr,#0x0000
      0007FA 12r00r00         [24] 1901 	lcall	_delay
                                   1902 ;	i2c_bit_bang.c:344: SCL = PULSE_LOW;
                                   1903 ;	assignBit
      0007FD C2 92            [12] 1904 	clr	_P1_2
                                   1905 ;	i2c_bit_bang.c:345: }
      0007FF 22               [24] 1906 	ret
                                   1907 	.area CSEG    (CODE)
                                   1908 	.area CONST   (CODE)
                                   1909 	.area XINIT   (CODE)
                                   1910 	.area CABS    (ABS,CODE)
