                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module menu
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _printf_tiny
                                     12 	.globl _menu
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'menu'
                                     92 ;------------------------------------------------------------
                                     93 ;	menu.c:20: void menu(){
                                     94 ;	-----------------------------------------
                                     95 ;	 function menu
                                     96 ;	-----------------------------------------
      000000                         97 _menu:
                           000007    98 	ar7 = 0x07
                           000006    99 	ar6 = 0x06
                           000005   100 	ar5 = 0x05
                           000004   101 	ar4 = 0x04
                           000003   102 	ar3 = 0x03
                           000002   103 	ar2 = 0x02
                           000001   104 	ar1 = 0x01
                           000000   105 	ar0 = 0x00
                                    106 ;	menu.c:22: printf_tiny("*************************************************************************\n\r");
      000000 74r00            [12]  107 	mov	a,#___str_0
      000002 C0 E0            [24]  108 	push	acc
      000004 74s00            [12]  109 	mov	a,#(___str_0 >> 8)
      000006 C0 E0            [24]  110 	push	acc
      000008 12r00r00         [24]  111 	lcall	_printf_tiny
      00000B 15 81            [12]  112 	dec	sp
      00000D 15 81            [12]  113 	dec	sp
                                    114 ;	menu.c:23: printf_tiny("Choose the options from below menu : \n\r");
      00000F 74r4C            [12]  115 	mov	a,#___str_1
      000011 C0 E0            [24]  116 	push	acc
      000013 74s00            [12]  117 	mov	a,#(___str_1 >> 8)
      000015 C0 E0            [24]  118 	push	acc
      000017 12r00r00         [24]  119 	lcall	_printf_tiny
      00001A 15 81            [12]  120 	dec	sp
      00001C 15 81            [12]  121 	dec	sp
                                    122 ;	menu.c:24: printf_tiny("[w]. To WRITE byte into EEPROM\n\r");
      00001E 74r74            [12]  123 	mov	a,#___str_2
      000020 C0 E0            [24]  124 	push	acc
      000022 74s00            [12]  125 	mov	a,#(___str_2 >> 8)
      000024 C0 E0            [24]  126 	push	acc
      000026 12r00r00         [24]  127 	lcall	_printf_tiny
      000029 15 81            [12]  128 	dec	sp
      00002B 15 81            [12]  129 	dec	sp
                                    130 ;	menu.c:25: printf_tiny("[r]. To READ byte from EEPROM\n\r");
      00002D 74r95            [12]  131 	mov	a,#___str_3
      00002F C0 E0            [24]  132 	push	acc
      000031 74s00            [12]  133 	mov	a,#(___str_3 >> 8)
      000033 C0 E0            [24]  134 	push	acc
      000035 12r00r00         [24]  135 	lcall	_printf_tiny
      000038 15 81            [12]  136 	dec	sp
      00003A 15 81            [12]  137 	dec	sp
                                    138 ;	menu.c:26: printf_tiny("[h]. To see HEX dump of EEPROM\n\r");
      00003C 74rB5            [12]  139 	mov	a,#___str_4
      00003E C0 E0            [24]  140 	push	acc
      000040 74s00            [12]  141 	mov	a,#(___str_4 >> 8)
      000042 C0 E0            [24]  142 	push	acc
      000044 12r00r00         [24]  143 	lcall	_printf_tiny
      000047 15 81            [12]  144 	dec	sp
      000049 15 81            [12]  145 	dec	sp
                                    146 ;	menu.c:27: printf_tiny("[e]. To do software reset of EEPROM\n\r");
      00004B 74rD6            [12]  147 	mov	a,#___str_5
      00004D C0 E0            [24]  148 	push	acc
      00004F 74s00            [12]  149 	mov	a,#(___str_5 >> 8)
      000051 C0 E0            [24]  150 	push	acc
      000053 12r00r00         [24]  151 	lcall	_printf_tiny
      000056 15 81            [12]  152 	dec	sp
      000058 15 81            [12]  153 	dec	sp
                                    154 ;	menu.c:28: printf_tiny("[a]. To WRITE byte into I/O expander\n\r");
      00005A 74rFC            [12]  155 	mov	a,#___str_6
      00005C C0 E0            [24]  156 	push	acc
      00005E 74s00            [12]  157 	mov	a,#(___str_6 >> 8)
      000060 C0 E0            [24]  158 	push	acc
      000062 12r00r00         [24]  159 	lcall	_printf_tiny
      000065 15 81            [12]  160 	dec	sp
      000067 15 81            [12]  161 	dec	sp
                                    162 ;	menu.c:29: printf_tiny("[b]. To READ byte from I/O expander\n\r");
      000069 74r23            [12]  163 	mov	a,#___str_7
      00006B C0 E0            [24]  164 	push	acc
      00006D 74s01            [12]  165 	mov	a,#(___str_7 >> 8)
      00006F C0 E0            [24]  166 	push	acc
      000071 12r00r00         [24]  167 	lcall	_printf_tiny
      000074 15 81            [12]  168 	dec	sp
      000076 15 81            [12]  169 	dec	sp
                                    170 ;	menu.c:30: printf_tiny("[c]. Toggle port value\n\r");
      000078 74r49            [12]  171 	mov	a,#___str_8
      00007A C0 E0            [24]  172 	push	acc
      00007C 74s01            [12]  173 	mov	a,#(___str_8 >> 8)
      00007E C0 E0            [24]  174 	push	acc
      000080 12r00r00         [24]  175 	lcall	_printf_tiny
      000083 15 81            [12]  176 	dec	sp
      000085 15 81            [12]  177 	dec	sp
                                    178 ;	menu.c:31: printf_tiny("*************************************************************************\n\r");
      000087 74r00            [12]  179 	mov	a,#___str_0
      000089 C0 E0            [24]  180 	push	acc
      00008B 74s00            [12]  181 	mov	a,#(___str_0 >> 8)
      00008D C0 E0            [24]  182 	push	acc
      00008F 12r00r00         [24]  183 	lcall	_printf_tiny
      000092 15 81            [12]  184 	dec	sp
      000094 15 81            [12]  185 	dec	sp
                                    186 ;	menu.c:32: }
      000096 22               [24]  187 	ret
                                    188 	.area CSEG    (CODE)
                                    189 	.area CONST   (CODE)
                                    190 	.area CONST   (CODE)
      000000                        191 ___str_0:
      000000 2A 2A 2A 2A 2A 2A 2A   192 	.ascii "************************************************************"
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A
      00003C 2A 2A 2A 2A 2A 2A 2A   193 	.ascii "*************"
             2A 2A 2A 2A 2A 2A
      000049 0A                     194 	.db 0x0a
      00004A 0D                     195 	.db 0x0d
      00004B 00                     196 	.db 0x00
                                    197 	.area CSEG    (CODE)
                                    198 	.area CONST   (CODE)
      00004C                        199 ___str_1:
      00004C 43 68 6F 6F 73 65 20   200 	.ascii "Choose the options from below menu : "
             74 68 65 20 6F 70 74
             69 6F 6E 73 20 66 72
             6F 6D 20 62 65 6C 6F
             77 20 6D 65 6E 75 20
             3A 20
      000071 0A                     201 	.db 0x0a
      000072 0D                     202 	.db 0x0d
      000073 00                     203 	.db 0x00
                                    204 	.area CSEG    (CODE)
                                    205 	.area CONST   (CODE)
      000074                        206 ___str_2:
      000074 5B 77 5D 2E 20 54 6F   207 	.ascii "[w]. To WRITE byte into EEPROM"
             20 57 52 49 54 45 20
             62 79 74 65 20 69 6E
             74 6F 20 45 45 50 52
             4F 4D
      000092 0A                     208 	.db 0x0a
      000093 0D                     209 	.db 0x0d
      000094 00                     210 	.db 0x00
                                    211 	.area CSEG    (CODE)
                                    212 	.area CONST   (CODE)
      000095                        213 ___str_3:
      000095 5B 72 5D 2E 20 54 6F   214 	.ascii "[r]. To READ byte from EEPROM"
             20 52 45 41 44 20 62
             79 74 65 20 66 72 6F
             6D 20 45 45 50 52 4F
             4D
      0000B2 0A                     215 	.db 0x0a
      0000B3 0D                     216 	.db 0x0d
      0000B4 00                     217 	.db 0x00
                                    218 	.area CSEG    (CODE)
                                    219 	.area CONST   (CODE)
      0000B5                        220 ___str_4:
      0000B5 5B 68 5D 2E 20 54 6F   221 	.ascii "[h]. To see HEX dump of EEPROM"
             20 73 65 65 20 48 45
             58 20 64 75 6D 70 20
             6F 66 20 45 45 50 52
             4F 4D
      0000D3 0A                     222 	.db 0x0a
      0000D4 0D                     223 	.db 0x0d
      0000D5 00                     224 	.db 0x00
                                    225 	.area CSEG    (CODE)
                                    226 	.area CONST   (CODE)
      0000D6                        227 ___str_5:
      0000D6 5B 65 5D 2E 20 54 6F   228 	.ascii "[e]. To do software reset of EEPROM"
             20 64 6F 20 73 6F 66
             74 77 61 72 65 20 72
             65 73 65 74 20 6F 66
             20 45 45 50 52 4F 4D
      0000F9 0A                     229 	.db 0x0a
      0000FA 0D                     230 	.db 0x0d
      0000FB 00                     231 	.db 0x00
                                    232 	.area CSEG    (CODE)
                                    233 	.area CONST   (CODE)
      0000FC                        234 ___str_6:
      0000FC 5B 61 5D 2E 20 54 6F   235 	.ascii "[a]. To WRITE byte into I/O expander"
             20 57 52 49 54 45 20
             62 79 74 65 20 69 6E
             74 6F 20 49 2F 4F 20
             65 78 70 61 6E 64 65
             72
      000120 0A                     236 	.db 0x0a
      000121 0D                     237 	.db 0x0d
      000122 00                     238 	.db 0x00
                                    239 	.area CSEG    (CODE)
                                    240 	.area CONST   (CODE)
      000123                        241 ___str_7:
      000123 5B 62 5D 2E 20 54 6F   242 	.ascii "[b]. To READ byte from I/O expander"
             20 52 45 41 44 20 62
             79 74 65 20 66 72 6F
             6D 20 49 2F 4F 20 65
             78 70 61 6E 64 65 72
      000146 0A                     243 	.db 0x0a
      000147 0D                     244 	.db 0x0d
      000148 00                     245 	.db 0x00
                                    246 	.area CSEG    (CODE)
                                    247 	.area CONST   (CODE)
      000149                        248 ___str_8:
      000149 5B 63 5D 2E 20 54 6F   249 	.ascii "[c]. Toggle port value"
             67 67 6C 65 20 70 6F
             72 74 20 76 61 6C 75
             65
      00015F 0A                     250 	.db 0x0a
      000160 0D                     251 	.db 0x0d
      000161 00                     252 	.db 0x00
                                    253 	.area CSEG    (CODE)
                                    254 	.area XINIT   (CODE)
                                    255 	.area CABS    (ABS,CODE)
